(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[14],{

/***/ "./node_modules/@agm/core/fesm5/agm-core.js":
/*!**************************************************!*\
  !*** ./node_modules/@agm/core/fesm5/agm-core.js ***!
  \**************************************************/
/*! exports provided: AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, ɵa, ɵb, ɵc, ɵd, ɵe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmBicyclingLayer\", function() { return AgmBicyclingLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmCircle\", function() { return AgmCircle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmCoreModule\", function() { return AgmCoreModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmDataLayer\", function() { return AgmDataLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmFitBounds\", function() { return AgmFitBounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmGeocoder\", function() { return AgmGeocoder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmInfoWindow\", function() { return AgmInfoWindow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmKmlLayer\", function() { return AgmKmlLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmMap\", function() { return AgmMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmMarker\", function() { return AgmMarker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmPolygon\", function() { return AgmPolygon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmPolyline\", function() { return AgmPolyline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmPolylineIcon\", function() { return AgmPolylineIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmPolylinePoint\", function() { return AgmPolylinePoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmRectangle\", function() { return AgmRectangle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmTransitLayer\", function() { return AgmTransitLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CircleManager\", function() { return CircleManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ControlPosition\", function() { return ControlPosition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataLayerManager\", function() { return DataLayerManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FitBoundsAccessor\", function() { return FitBoundsAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GeocoderLocationType\", function() { return GeocoderLocationType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GeocoderStatus\", function() { return GeocoderStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsAPIWrapper\", function() { return GoogleMapsAPIWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsScriptProtocol\", function() { return GoogleMapsScriptProtocol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfoWindowManager\", function() { return InfoWindowManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KmlLayerManager\", function() { return KmlLayerManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LAZY_MAPS_API_CONFIG\", function() { return LAZY_MAPS_API_CONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LayerManager\", function() { return LayerManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LazyMapsAPILoader\", function() { return LazyMapsAPILoader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MapTypeId\", function() { return MapTypeId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MapsAPILoader\", function() { return MapsAPILoader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerManager\", function() { return MarkerManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoOpMapsAPILoader\", function() { return NoOpMapsAPILoader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PolygonManager\", function() { return PolygonManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PolylineManager\", function() { return PolylineManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RectangleManager\", function() { return RectangleManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScaleControlStyle\", function() { return ScaleControlStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZoomControlStyle\", function() { return ZoomControlStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return FitBoundsService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return coreDirectives; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return WindowRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return DocumentRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return BROWSER_GLOBALS_PROVIDERS; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm5/core.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm5/index.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm5/operators/index.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm5/common.js\");\n\n\n\n\n\n\nvar MapsAPILoader = /** @class */ (function () {\n    function MapsAPILoader() {\n    }\n    MapsAPILoader = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n    ], MapsAPILoader);\n    return MapsAPILoader;\n}());\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = /** @class */ (function () {\n    function GoogleMapsAPIWrapper(_loader, _zone) {\n        var _this = this;\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise(function (resolve) { _this._mapResolver = resolve; });\n    }\n    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._loader.load().then(function () {\n                var map = new google.maps.Map(el, mapOptions);\n                _this._mapResolver(map);\n                return;\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            _this._map.then(function (m) { m.setOptions(options); });\n        });\n    };\n    /**\n     * Creates a google map marker with the map context\n     */\n    GoogleMapsAPIWrapper.prototype.createMarker = function (options, addToMap) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (addToMap === void 0) { addToMap = true; }\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function () { return new google.maps.InfoWindow(options); });\n        });\n    };\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    GoogleMapsAPIWrapper.prototype.createCircle = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) {\n                if (typeof options.strokePosition === 'string') {\n                    options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n                }\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    };\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    GoogleMapsAPIWrapper.prototype.createRectangle = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this.getNativeMap().then(function (map) {\n                var line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this.getNativeMap().then(function (map) {\n                var polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    };\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    GoogleMapsAPIWrapper.prototype.createDataLayer = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (m) {\n                var data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    };\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n    GoogleMapsAPIWrapper.prototype.createTransitLayer = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) {\n                var newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    };\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n    GoogleMapsAPIWrapper.prototype.createBicyclingLayer = function (options) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) {\n                var newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    };\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    GoogleMapsAPIWrapper.prototype.containsLocation = function (latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    };\n    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._map.then(function (m) {\n                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.clearInstanceListeners = function () {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            _this._map.then(function (map) {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.setCenter(latLng); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.getZoom = function () {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.getZoom(); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.getBounds = function () {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.getBounds(); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.getMapTypeId = function () {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.getMapTypeId(); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.setZoom(zoom); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.getCenter = function () {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.getCenter(); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.panTo(latLng); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.panBy = function (x, y) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.panBy(x, y); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng, padding) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.fitBounds(latLng, padding); });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng, padding) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._map.then(function (map) { return map.panToBounds(latLng, padding); });\n        });\n    };\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    GoogleMapsAPIWrapper.prototype.getNativeMap = function () { return this._map; };\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    GoogleMapsAPIWrapper.prototype.triggerMapEvent = function (eventName) {\n        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n    };\n    GoogleMapsAPIWrapper.ctorParameters = function () { return [\n        { type: MapsAPILoader },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    GoogleMapsAPIWrapper = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [MapsAPILoader, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], GoogleMapsAPIWrapper);\n    return GoogleMapsAPIWrapper;\n}());\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nvar LayerManager = /** @class */ (function () {\n    function LayerManager(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    LayerManager.prototype.addTransitLayer = function (layer, options) {\n        var newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    };\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    LayerManager.prototype.addBicyclingLayer = function (layer, options) {\n        var newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    };\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    LayerManager.prototype.deleteLayer = function (layer) {\n        var _this = this;\n        return this._layers.get(layer).then(function (currentLayer) {\n            currentLayer.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    LayerManager.prototype.toggleLayerVisibility = function (layer, options) {\n        var _this = this;\n        return this._layers.get(layer).then(function (currentLayer) {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            }\n            else {\n                return _this._wrapper.getNativeMap().then(function (map) {\n                    currentLayer.setMap(map);\n                });\n            }\n        });\n    };\n    LayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper }\n    ]; };\n    LayerManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper])\n    ], LayerManager);\n    return LayerManager;\n}());\n\nvar layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nvar AgmBicyclingLayer = /** @class */ (function () {\n    function AgmBicyclingLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    AgmBicyclingLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    };\n    AgmBicyclingLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    };\n    /** @internal */\n    AgmBicyclingLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmBicyclingLayer.prototype.toString = function () { return \"AgmBicyclingLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmBicyclingLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteLayer(this);\n    };\n    AgmBicyclingLayer.ctorParameters = function () { return [\n        { type: LayerManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmBicyclingLayer.prototype, \"visible\", void 0);\n    AgmBicyclingLayer = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-bicycling-layer',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [LayerManager])\n    ], AgmBicyclingLayer);\n    return AgmBicyclingLayer;\n}());\n\nvar CircleManager = /** @class */ (function () {\n    function CircleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    CircleManager.prototype.addCircle = function (circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        }));\n    };\n    /**\n     * Removes the given circle from the map.\n     */\n    CircleManager.prototype.removeCircle = function (circle) {\n        var _this = this;\n        return this._circles.get(circle).then(function (c) {\n            c.setMap(null);\n            _this._circles.delete(circle);\n        });\n    };\n    CircleManager.prototype.setOptions = function (circle, options) {\n        return this._circles.get(circle).then(function (c) {\n            if (typeof options.strokePosition === 'string') {\n                options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n            }\n            c.setOptions(options);\n        });\n    };\n    CircleManager.prototype.getBounds = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getBounds(); });\n    };\n    CircleManager.prototype.getCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getCenter(); });\n    };\n    CircleManager.prototype.getRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getRadius(); });\n    };\n    CircleManager.prototype.setCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    };\n    CircleManager.prototype.setEditable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });\n    };\n    CircleManager.prototype.setDraggable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });\n    };\n    CircleManager.prototype.setVisible = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });\n    };\n    CircleManager.prototype.setRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });\n    };\n    CircleManager.prototype.getNativeCircle = function (circle) {\n        return this._circles.get(circle);\n    };\n    CircleManager.prototype.createEventObservable = function (eventName, circle) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            var listener = null;\n            _this._circles.get(circle).then(function (c) {\n                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    CircleManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    CircleManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], CircleManager);\n    return CircleManager;\n}());\n\nvar AgmCircle = /** @class */ (function () {\n    function AgmCircle(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    AgmCircle_1 = AgmCircle;\n    /** @internal */\n    AgmCircle.prototype.ngOnInit = function () {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmCircle.prototype.ngOnChanges = function (changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    };\n    AgmCircle.prototype._updateCircleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmCircle_1._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmCircle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager.createEventObservable(eventName, _this).subscribe(function (value) {\n                switch (eventName) {\n                    case 'radius_changed':\n                        _this._manager.getRadius(_this).then(function (radius) { return eventEmitter.emit(radius); });\n                        break;\n                    case 'center_changed':\n                        _this._manager.getCenter(_this).then(function (center) {\n                            return eventEmitter.emit({ lat: center.lat(), lng: center.lng() });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    AgmCircle.prototype.ngOnDestroy = function () {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    AgmCircle.prototype.getBounds = function () { return this._manager.getBounds(this); };\n    AgmCircle.prototype.getCenter = function () { return this._manager.getCenter(this); };\n    var AgmCircle_1;\n    AgmCircle._mapOptions = [\n        'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n        'visible', 'zIndex', 'clickable',\n    ];\n    AgmCircle.ctorParameters = function () { return [\n        { type: CircleManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmCircle.prototype, \"latitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmCircle.prototype, \"longitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmCircle.prototype, \"clickable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('circleDraggable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmCircle.prototype, \"draggable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmCircle.prototype, \"editable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmCircle.prototype, \"fillColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmCircle.prototype, \"fillOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmCircle.prototype, \"radius\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmCircle.prototype, \"strokeColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmCircle.prototype, \"strokeOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmCircle.prototype, \"strokePosition\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmCircle.prototype, \"strokeWeight\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmCircle.prototype, \"visible\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmCircle.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"centerChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"circleClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"circleDblClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"drag\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"dragEnd\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"dragStart\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"mouseDown\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"mouseMove\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"mouseOut\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"mouseOver\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"mouseUp\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"radiusChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmCircle.prototype, \"rightClick\", void 0);\n    AgmCircle = AgmCircle_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-circle',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [CircleManager])\n    ], AgmCircle);\n    return AgmCircle;\n}());\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nvar DataLayerManager = /** @class */ (function () {\n    function DataLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    DataLayerManager.prototype.addDataLayer = function (layer) {\n        var _this = this;\n        var newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(function (d) {\n            if (layer.geoJson) {\n                _this.getDataFeatures(d, layer.geoJson).then(function (features) { return d.features = features; });\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    };\n    DataLayerManager.prototype.deleteDataLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    DataLayerManager.prototype.updateGeoJson = function (layer, geoJson) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            _this.getDataFeatures(l, geoJson).then(function (features) { return l.features = features; });\n        });\n    };\n    DataLayerManager.prototype.setDataOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    DataLayerManager.prototype.createEventObservable = function (eventName, layer) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._layers.get(layer).then(function (d) {\n                d.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    DataLayerManager.prototype.getDataFeatures = function (d, geoJson) {\n        return new Promise(function (resolve, reject) {\n            if (typeof geoJson === 'object') {\n                try {\n                    var features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(\"Impossible to extract features from geoJson: wrong argument type\");\n            }\n        });\n    };\n    DataLayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    DataLayerManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], DataLayerManager);\n    return DataLayerManager;\n}());\n\nvar layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nvar AgmDataLayer = /** @class */ (function () {\n    function AgmDataLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    AgmDataLayer_1 = AgmDataLayer;\n    AgmDataLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmDataLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmDataLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmDataLayer.prototype.toString = function () { return \"AgmDataLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmDataLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /** @internal */\n    AgmDataLayer.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        var dataOptions = {};\n        AgmDataLayer_1._dataOptionsAttributes.forEach(function (k) { return dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : _this[k]; });\n        this._manager.setDataOptions(this, dataOptions);\n    };\n    var AgmDataLayer_1;\n    AgmDataLayer._dataOptionsAttributes = ['style'];\n    AgmDataLayer.ctorParameters = function () { return [\n        { type: DataLayerManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmDataLayer.prototype, \"layerClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmDataLayer.prototype, \"geoJson\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Function)\n    ], AgmDataLayer.prototype, \"style\", void 0);\n    AgmDataLayer = AgmDataLayer_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-data-layer',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [DataLayerManager])\n    ], AgmDataLayer);\n    return AgmDataLayer;\n}());\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nvar FitBoundsAccessor = /** @class */ (function () {\n    function FitBoundsAccessor() {\n    }\n    return FitBoundsAccessor;\n}());\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nvar FitBoundsService = /** @class */ (function () {\n    function FitBoundsService(loader) {\n        var _this = this;\n        this._boundsChangeSampleTime$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"BehaviorSubject\"](200);\n        this._includeInBounds$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"BehaviorSubject\"](new Map());\n        this.bounds$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"from\"])(loader.load()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"flatMap\"])(function () { return _this._includeInBounds$; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"sample\"])(this._boundsChangeSampleTime$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"switchMap\"])(function (time) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"timer\"])(0, time); }))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(function (includeInBounds) { return _this._generateBounds(includeInBounds); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"shareReplay\"])(1));\n    }\n    FitBoundsService.prototype._generateBounds = function (includeInBounds) {\n        var bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(function (b) { return bounds.extend(b); });\n        return bounds;\n    };\n    FitBoundsService.prototype.addToBounds = function (latLng) {\n        var id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        var map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    };\n    FitBoundsService.prototype.removeFromBounds = function (latLng) {\n        var map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    };\n    FitBoundsService.prototype.changeFitBoundsChangeSampleTime = function (timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    };\n    FitBoundsService.prototype.getBounds$ = function () {\n        return this.bounds$;\n    };\n    FitBoundsService.prototype._createIdentifier = function (latLng) {\n        return latLng.lat + \"+\" + latLng.lng;\n    };\n    FitBoundsService.ctorParameters = function () { return [\n        { type: MapsAPILoader }\n    ]; };\n    FitBoundsService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [MapsAPILoader])\n    ], FitBoundsService);\n    return FitBoundsService;\n}());\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nvar AgmFitBounds = /** @class */ (function () {\n    function AgmFitBounds(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Subject\"]();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    AgmFitBounds.prototype.ngOnChanges = function () {\n        this._updateBounds();\n    };\n    /**\n     * @internal\n     */\n    AgmFitBounds.prototype.ngOnInit = function () {\n        var _this = this;\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"distinctUntilChanged\"])(function (x, y) {\n            return x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng;\n        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"takeUntil\"])(this._destroyed$))\n            .subscribe(function (details) { return _this._updateBounds(details); });\n    };\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    AgmFitBounds.prototype._updateBounds = function (newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    };\n    /**\n     * @internal\n     */\n    AgmFitBounds.prototype.ngOnDestroy = function () {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    };\n    AgmFitBounds.ctorParameters = function () { return [\n        { type: FitBoundsAccessor, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Self\"] }] },\n        { type: FitBoundsService }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\n    AgmFitBounds = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: '[agmFitBounds]',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Self\"])()),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [FitBoundsAccessor,\n            FitBoundsService])\n    ], AgmFitBounds);\n    return AgmFitBounds;\n}());\n\nvar MarkerManager = /** @class */ (function () {\n    function MarkerManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    MarkerManager.prototype.convertAnimation = function (uiAnim) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                if (uiAnim === null) {\n                    return [2 /*return*/, null];\n                }\n                else {\n                    return [2 /*return*/, this._mapsWrapper.getNativeMap().then(function () { return google.maps.Animation[uiAnim]; })];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    MarkerManager.prototype.deleteMarker = function (marker) {\n        var _this = this;\n        var m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then(function (m) {\n            return _this._zone.run(function () {\n                m.setMap(null);\n                _this._markers.delete(marker);\n            });\n        });\n    };\n    MarkerManager.prototype.updateMarkerPosition = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n    };\n    MarkerManager.prototype.updateTitle = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n    };\n    MarkerManager.prototype.updateLabel = function (marker) {\n        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n    };\n    MarkerManager.prototype.updateDraggable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n    };\n    MarkerManager.prototype.updateIcon = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n    };\n    MarkerManager.prototype.updateOpacity = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n    };\n    MarkerManager.prototype.updateVisible = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n    };\n    MarkerManager.prototype.updateZIndex = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n    };\n    MarkerManager.prototype.updateClickable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setClickable(marker.clickable); });\n    };\n    MarkerManager.prototype.updateAnimation = function (marker) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            var m, _a, _b;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._markers.get(marker)];\n                    case 1:\n                        m = _c.sent();\n                        _b = (_a = m).setAnimation;\n                        return [4 /*yield*/, this.convertAnimation(marker.animation)];\n                    case 2:\n                        _b.apply(_a, [_c.sent()]);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MarkerManager.prototype.addMarker = function (marker) {\n        var _this = this;\n        var markerPromise = new Promise(function (resolve) { return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(_this, void 0, void 0, function () {\n            var _a, _b, _c;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _b = (_a = this._mapsWrapper).createMarker;\n                        _c = {\n                            position: { lat: marker.latitude, lng: marker.longitude },\n                            label: marker.label,\n                            draggable: marker.draggable,\n                            icon: marker.iconUrl,\n                            opacity: marker.opacity,\n                            visible: marker.visible,\n                            zIndex: marker.zIndex,\n                            title: marker.title,\n                            clickable: marker.clickable\n                        };\n                        return [4 /*yield*/, this.convertAnimation(marker.animation)];\n                    case 1: return [2 /*return*/, _b.apply(_a, [(_c.animation = _d.sent(),\n                                _c)]).then(resolve)];\n                }\n            });\n        }); });\n        this._markers.set(marker, markerPromise);\n    };\n    MarkerManager.prototype.getNativeMarker = function (marker) {\n        return this._markers.get(marker);\n    };\n    MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._markers.get(marker).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    MarkerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    MarkerManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], MarkerManager);\n    return MarkerManager;\n}());\n\nvar InfoWindowManager = /** @class */ (function () {\n    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n        var _this = this;\n        var iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then(function (i) {\n            return _this._zone.run(function () {\n                i.close();\n                _this._infoWindows.delete(infoWindow);\n            });\n        });\n    };\n    InfoWindowManager.prototype.setPosition = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }); });\n    };\n    InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n    };\n    InfoWindowManager.prototype.open = function (infoWindow) {\n        var _this = this;\n        return this._infoWindows.get(infoWindow).then(function (w) {\n            if (infoWindow.hostMarker != null) {\n                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                });\n            }\n            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n        });\n    };\n    InfoWindowManager.prototype.close = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n    };\n    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n    };\n    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n        var options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    };\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    InfoWindowManager.prototype.createEventObservable = function (eventName, infoWindow) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._infoWindows.get(infoWindow).then(function (i) {\n                i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    InfoWindowManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] },\n        { type: MarkerManager }\n    ]; };\n    InfoWindowManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"],\n            MarkerManager])\n    ], InfoWindowManager);\n    return InfoWindowManager;\n}());\n\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmInfoWindow = /** @class */ (function () {\n    function AgmInfoWindow(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    AgmInfoWindow_1 = AgmInfoWindow;\n    AgmInfoWindow.prototype.ngOnInit = function () {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnChanges = function (changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    };\n    AgmInfoWindow.prototype._registerEventListeners = function () {\n        var _this = this;\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n            _this.isOpen = false;\n            _this.infoWindowClose.emit();\n        });\n    };\n    AgmInfoWindow.prototype._updateOpenState = function () {\n        this.isOpen ? this.open() : this.close();\n    };\n    AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    };\n    /**\n     * Opens the info window.\n     */\n    AgmInfoWindow.prototype.open = function () { return this._infoWindowManager.open(this); };\n    /**\n     * Closes the info window.\n     */\n    AgmInfoWindow.prototype.close = function () {\n        var _this = this;\n        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });\n    };\n    /** @internal */\n    AgmInfoWindow.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmInfoWindow.prototype.toString = function () { return 'AgmInfoWindow-' + this._id.toString(); };\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnDestroy = function () { this._infoWindowManager.deleteInfoWindow(this); };\n    var AgmInfoWindow_1;\n    AgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n    AgmInfoWindow.ctorParameters = function () { return [\n        { type: InfoWindowManager },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"] }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmInfoWindow.prototype, \"latitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmInfoWindow.prototype, \"longitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Boolean)\n    ], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmInfoWindow.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmInfoWindow.prototype, \"isOpen\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\n    AgmInfoWindow = AgmInfoWindow_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n            selector: 'agm-info-window',\n            template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [InfoWindowManager, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"]])\n    ], AgmInfoWindow);\n    return AgmInfoWindow;\n}());\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = /** @class */ (function () {\n    function KmlLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    KmlLayerManager.prototype.addKmlLayer = function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    };\n    KmlLayerManager.prototype.setOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) { return l.setOptions(options); });\n    };\n    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    KmlLayerManager.prototype.createEventObservable = function (eventName, layer) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._layers.get(layer).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    KmlLayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    KmlLayerManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], KmlLayerManager);\n    return KmlLayerManager;\n}());\n\nvar layerId$2 = 0;\nvar AgmKmlLayer = /** @class */ (function () {\n    function AgmKmlLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n    }\n    AgmKmlLayer_1 = AgmKmlLayer;\n    AgmKmlLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmKmlLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    };\n    AgmKmlLayer.prototype._updatePolygonOptions = function (changes) {\n        var options = Object.keys(changes)\n            .filter(function (k) { return AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmKmlLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n            { name: 'defaultviewport_changed', handler: function () { return _this.defaultViewportChange.emit(); } },\n            { name: 'status_changed', handler: function () { return _this.statusChange.emit(); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmKmlLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmKmlLayer.prototype.toString = function () { return \"AgmKmlLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmKmlLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    var AgmKmlLayer_1;\n    AgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n    AgmKmlLayer.ctorParameters = function () { return [\n        { type: KmlLayerManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmKmlLayer.prototype, \"clickable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmKmlLayer.prototype, \"url\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmKmlLayer.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmKmlLayer.prototype, \"layerClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmKmlLayer.prototype, \"statusChange\", void 0);\n    AgmKmlLayer = AgmKmlLayer_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-kml-layer',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [KmlLayerManager])\n    ], AgmKmlLayer);\n    return AgmKmlLayer;\n}());\n\nfunction createMVCEventObservable(array) {\n    var eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"fromEventPattern\"])(function (handler) { return eventNames.map(function (evName) { return array.addListener(evName, function (index, previous) { return handler.apply(array, [{ 'newArr': array.getArray(), evName: evName, index: index, previous: previous }]); }); }); }, function (_handler, evListeners) { return evListeners.forEach(function (evListener) { return evListener.remove(); }); });\n}\nvar MvcArrayMock = /** @class */ (function () {\n    function MvcArrayMock() {\n        this.vals = [];\n        this.listeners = {\n            'remove_at': [],\n            'insert_at': [],\n            'set_at': [],\n        };\n    }\n    MvcArrayMock.prototype.clear = function () {\n        for (var i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    };\n    MvcArrayMock.prototype.getArray = function () {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spread\"])(this.vals);\n    };\n    MvcArrayMock.prototype.getAt = function (i) {\n        return this.vals[i];\n    };\n    MvcArrayMock.prototype.getLength = function () {\n        return this.vals.length;\n    };\n    MvcArrayMock.prototype.insertAt = function (i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.map(function (listener) { return listener(i); });\n    };\n    MvcArrayMock.prototype.pop = function () {\n        var _this = this;\n        var deleted = this.vals.pop();\n        this.listeners.remove_at.map(function (listener) { return listener(_this.vals.length, deleted); });\n        return deleted;\n    };\n    MvcArrayMock.prototype.push = function (elem) {\n        var _this = this;\n        this.vals.push(elem);\n        this.listeners.insert_at.map(function (listener) { return listener(_this.vals.length - 1); });\n        return this.vals.length;\n    };\n    MvcArrayMock.prototype.removeAt = function (i) {\n        var deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.map(function (listener) { return listener(i, deleted); });\n        return deleted;\n    };\n    MvcArrayMock.prototype.setAt = function (i, elem) {\n        var deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.map(function (listener) { return listener(i, deleted); });\n    };\n    MvcArrayMock.prototype.forEach = function (callback) {\n        this.vals.forEach(callback);\n    };\n    MvcArrayMock.prototype.addListener = function (eventName, handler) {\n        var listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: function () {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    };\n    return MvcArrayMock;\n}());\n\nvar PolygonManager = /** @class */ (function () {\n    function PolygonManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    PolygonManager.prototype.addPolygon = function (path) {\n        var polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    };\n    PolygonManager.prototype.updatePolygon = function (polygon) {\n        var _this = this;\n        var m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });\n    };\n    PolygonManager.prototype.setPolygonOptions = function (path, options) {\n        return this._polygons.get(path).then(function (l) { l.setOptions(options); });\n    };\n    PolygonManager.prototype.deletePolygon = function (paths) {\n        var _this = this;\n        var m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polygons.delete(paths);\n            });\n        });\n    };\n    PolygonManager.prototype.getPath = function (polygon) {\n        return this._polygons.get(polygon)\n            .then(function (polygon) { return polygon.getPath().getArray(); });\n    };\n    PolygonManager.prototype.getPaths = function (polygon) {\n        return this._polygons.get(polygon)\n            .then(function (polygon) { return polygon.getPaths().getArray().map(function (p) { return p.getArray(); }); });\n    };\n    PolygonManager.prototype.createEventObservable = function (eventName, path) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._polygons.get(path).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolygonManager.prototype.createPathEventObservable = function (agmPolygon) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            var polygon, paths, pathsChanges$;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._polygons.get(agmPolygon)];\n                    case 1:\n                        polygon = _a.sent();\n                        paths = polygon.getPaths();\n                        pathsChanges$ = createMVCEventObservable(paths);\n                        return [2 /*return*/, pathsChanges$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"startWith\"])({ newArr: paths.getArray() }), // in order to subscribe to them all\n                            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"switchMap\"])(function (parentMVEvent) { return rxjs__WEBPACK_IMPORTED_MODULE_2__[\"merge\"].apply(void 0, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spread\"])(// rest parameter\n                            parentMVEvent.newArr.map(function (chMVC, index) {\n                                return createMVCEventObservable(chMVC)\n                                    .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(function (chMVCEvent) { return ({ parentMVEvent: parentMVEvent, chMVCEvent: chMVCEvent, pathIndex: index }); }));\n                            }))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"startWith\"])({ parentMVEvent: parentMVEvent, chMVCEvent: null, pathIndex: null })); }), // start the merged ob with an event signinifing change to parent\n                            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"skip\"])(1), // skip the manually added event\n                            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(function (_a) {\n                                var parentMVEvent = _a.parentMVEvent, chMVCEvent = _a.chMVCEvent, pathIndex = _a.pathIndex;\n                                var retVal;\n                                if (!chMVCEvent) {\n                                    retVal = {\n                                        newArr: parentMVEvent.newArr.map(function (subArr) { return subArr.getArray().map(function (latLng) { return latLng.toJSON(); }); }),\n                                        eventName: parentMVEvent.evName,\n                                        index: parentMVEvent.index,\n                                    };\n                                    if (parentMVEvent.previous) {\n                                        retVal.previous = parentMVEvent.previous.getArray();\n                                    }\n                                }\n                                else {\n                                    retVal = {\n                                        newArr: parentMVEvent.newArr.map(function (subArr) { return subArr.getArray().map(function (latLng) { return latLng.toJSON(); }); }),\n                                        pathIndex: pathIndex,\n                                        eventName: chMVCEvent.evName,\n                                        index: chMVCEvent.index,\n                                    };\n                                    if (chMVCEvent.previous) {\n                                        retVal.previous = chMVCEvent.previous;\n                                    }\n                                }\n                                return retVal;\n                            }))];\n                }\n            });\n        });\n    };\n    PolygonManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    PolygonManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], PolygonManager);\n    return PolygonManager;\n}());\n\nvar PolylineManager = /** @class */ (function () {\n    function PolylineManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    PolylineManager_1 = PolylineManager;\n    PolylineManager._convertPoints = function (line) {\n        var path = line._getPoints().map(function (point) {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    };\n    PolylineManager._convertPath = function (path) {\n        var symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    };\n    PolylineManager._convertIcons = function (line) {\n        var icons = line._getIcons().map(function (agmIcon) { return ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager_1._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }); });\n        // prune undefineds;\n        icons.forEach(function (icon) {\n            Object.entries(icon).forEach(function (_a) {\n                var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__read\"])(_a, 2), key = _b[0], val = _b[1];\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    };\n    PolylineManager.prototype.addPolyline = function (line) {\n        var _this = this;\n        var polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(function () { return [PolylineManager_1._convertPoints(line),\n            PolylineManager_1._convertIcons(line)]; })\n            .then(function (_a) {\n            var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__read\"])(_a, 2), path = _b[0], icons = _b[1];\n            return _this._mapsWrapper.createPolyline({\n                clickable: line.clickable,\n                draggable: line.draggable,\n                editable: line.editable,\n                geodesic: line.geodesic,\n                strokeColor: line.strokeColor,\n                strokeOpacity: line.strokeOpacity,\n                strokeWeight: line.strokeWeight,\n                visible: line.visible,\n                zIndex: line.zIndex,\n                path: path,\n                icons: icons,\n            });\n        });\n        this._polylines.set(line, polylinePromise);\n    };\n    PolylineManager.prototype.updatePolylinePoints = function (line) {\n        var _this = this;\n        var path = PolylineManager_1._convertPoints(line);\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });\n    };\n    PolylineManager.prototype.updateIconSequences = function (line) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            var icons, m;\n            var _this = this;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._mapsWrapper.getNativeMap()];\n                    case 1:\n                        _a.sent();\n                        icons = PolylineManager_1._convertIcons(line);\n                        m = this._polylines.get(line);\n                        if (m == null) {\n                            return [2 /*return*/];\n                        }\n                        return [2 /*return*/, m.then(function (l) { return _this._zone.run(function () { return l.setOptions({ icons: icons }); }); })];\n                }\n            });\n        });\n    };\n    PolylineManager.prototype.setPolylineOptions = function (line, options) {\n        return this._polylines.get(line).then(function (l) { l.setOptions(options); });\n    };\n    PolylineManager.prototype.deletePolyline = function (line) {\n        var _this = this;\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polylines.delete(line);\n            });\n        });\n    };\n    PolylineManager.prototype.getMVCPath = function (agmPolyline) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            var polyline;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._polylines.get(agmPolyline)];\n                    case 1:\n                        polyline = _a.sent();\n                        return [2 /*return*/, polyline.getPath()];\n                }\n            });\n        });\n    };\n    PolylineManager.prototype.getPath = function (agmPolyline) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getMVCPath(agmPolyline)];\n                    case 1: return [2 /*return*/, (_a.sent()).getArray()];\n                }\n            });\n        });\n    };\n    PolylineManager.prototype.createEventObservable = function (eventName, line) {\n        var _this = this;\n        return new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (observer) {\n            _this._polylines.get(line).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolylineManager.prototype.createPathEventObservable = function (line) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function () {\n            var mvcPath;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getMVCPath(line)];\n                    case 1:\n                        mvcPath = _a.sent();\n                        return [2 /*return*/, createMVCEventObservable(mvcPath)];\n                }\n            });\n        });\n    };\n    var PolylineManager_1;\n    PolylineManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    PolylineManager = PolylineManager_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], PolylineManager);\n    return PolylineManager;\n}());\n\nvar RectangleManager = /** @class */ (function () {\n    function RectangleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    RectangleManager.prototype.addRectangle = function (rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        }));\n    };\n    /**\n     * Removes the given rectangle from the map.\n     */\n    RectangleManager.prototype.removeRectangle = function (rectangle) {\n        var _this = this;\n        return this._rectangles.get(rectangle).then(function (r) {\n            r.setMap(null);\n            _this._rectangles.delete(rectangle);\n        });\n    };\n    RectangleManager.prototype.setOptions = function (rectangle, options) {\n        return this._rectangles.get(rectangle).then(function (r) { return r.setOptions(options); });\n    };\n    RectangleManager.prototype.getBounds = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) { return r.getBounds(); });\n    };\n    RectangleManager.prototype.setBounds = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    };\n    RectangleManager.prototype.setEditable = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setEditable(rectangle.editable);\n        });\n    };\n    RectangleManager.prototype.setDraggable = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setDraggable(rectangle.draggable);\n        });\n    };\n    RectangleManager.prototype.setVisible = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setVisible(rectangle.visible);\n        });\n    };\n    RectangleManager.prototype.createEventObservable = function (eventName, rectangle) {\n        var _this = this;\n        return rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"].create(function (observer) {\n            var listener = null;\n            _this._rectangles.get(rectangle).then(function (r) {\n                listener = r.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    RectangleManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    RectangleManager = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [GoogleMapsAPIWrapper, _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], RectangleManager);\n    return RectangleManager;\n}());\n\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMap = /** @class */ (function () {\n    function AgmMap(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n    }\n    AgmMap_1 = AgmMap;\n    /** @internal */\n    AgmMap.prototype.ngOnInit = function () {\n        if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_4__[\"isPlatformServer\"])(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    };\n    AgmMap.prototype._initMapInstance = function (el) {\n        var _this = this;\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(function () { return _this._mapsWrapper.getNativeMap(); })\n            .then(function (map) { return _this.mapReady.emit(map); });\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n    };\n    /** @internal */\n    AgmMap.prototype.ngOnDestroy = function () {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    };\n    /* @internal */\n    AgmMap.prototype.ngOnChanges = function (changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    };\n    AgmMap.prototype._updateMapOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    };\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    AgmMap.prototype.triggerResize = function (recenter) {\n        var _this = this;\n        if (recenter === void 0) { recenter = true; }\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                return _this._mapsWrapper.triggerMapEvent('resize').then(function () {\n                    if (recenter) {\n                        _this.fitBounds != null ? _this._fitBounds() : _this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    };\n    AgmMap.prototype._updatePosition = function (changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    };\n    AgmMap.prototype._setCenter = function () {\n        var newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    };\n    AgmMap.prototype._fitBounds = function () {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    };\n    AgmMap.prototype._subscribeToFitBoundsUpdates = function () {\n        var _this = this;\n        this._zone.runOutsideAngular(function () {\n            _this._fitBoundsSubscription = _this._fitBoundsService.getBounds$().subscribe(function (b) {\n                _this._zone.run(function () { return _this._updateBounds(b, _this.fitBoundsPadding); });\n            });\n        });\n    };\n    AgmMap.prototype._updateBounds = function (bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            var newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    };\n    AgmMap.prototype._isLatLngBoundsLiteral = function (bounds) {\n        return bounds != null && bounds.extend === undefined;\n    };\n    AgmMap.prototype._handleMapCenterChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n            _this._mapsWrapper.getCenter().then(function (center) {\n                _this.latitude = center.lat();\n                _this.longitude = center.lng();\n                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleBoundsChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapTypeIdChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(function () {\n            _this._mapsWrapper.getMapTypeId().then(function (mapTypeId) { _this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapZoomChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n            _this._mapsWrapper.getZoom().then(function (z) {\n                _this.zoom = z;\n                _this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleIdleEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleTilesLoadedEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(function () { return _this.tilesLoaded.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapMouseEvents = function () {\n        var _this = this;\n        var events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(function (e) {\n            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n                var value = {\n                    coords: {\n                        lat: event.latLng.lat(),\n                        lng: event.latLng.lng(),\n                    },\n                    placeId: event.placeId,\n                };\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (value.placeId && !_this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(value);\n            });\n            _this._observableSubscriptions.push(s);\n        });\n    };\n    var AgmMap_1;\n    /**\n     * Map option attributes that can change over time\n     */\n    AgmMap._mapOptionsAttributes = [\n        'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n        'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n        'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n        'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n        'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n        'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n    ];\n    AgmMap.ctorParameters = function () { return [\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"] },\n        { type: GoogleMapsAPIWrapper },\n        { type: Object, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM_ID\"],] }] },\n        { type: FitBoundsService },\n        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"] }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"longitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"latitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"zoom\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmMap.prototype, \"minZoom\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmMap.prototype, \"maxZoom\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmMap.prototype, \"controlSize\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('mapDraggable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"draggable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"disableDefaultUI\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"scrollwheel\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMap.prototype, \"backgroundColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMap.prototype, \"draggableCursor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMap.prototype, \"draggingCursor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Boolean)\n    ], AgmMap.prototype, \"zoomControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"zoomControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Array)\n    ], AgmMap.prototype, \"styles\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"usePanning\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Boolean)\n    ], AgmMap.prototype, \"streetViewControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"fitBounds\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"scaleControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"scaleControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"mapTypeControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"panControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"panControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"rotateControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"rotateControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"fullscreenControl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMap.prototype, \"mapTypeId\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"clickableIcons\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMap.prototype, \"gestureHandling\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"tilt\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMap.prototype, \"restriction\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"mapClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"mapRightClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"mapDblClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"centerChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"boundsChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"idle\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"zoomChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"mapReady\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMap.prototype, \"tilesLoaded\", void 0);\n    AgmMap = AgmMap_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n            selector: 'agm-map',\n            providers: [\n                CircleManager,\n                DataLayerManager,\n                DataLayerManager,\n                FitBoundsService,\n                GoogleMapsAPIWrapper,\n                InfoWindowManager,\n                KmlLayerManager,\n                LayerManager,\n                MarkerManager,\n                PolygonManager,\n                PolylineManager,\n                RectangleManager,\n            ],\n            host: {\n                // todo: deprecated - we will remove it with the next version\n                '[class.sebm-google-map-container]': 'true',\n            },\n            template: \"\\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n              <div class='agm-map-content'>\\n                <ng-content></ng-content>\\n              </div>\\n  \",\n            styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"]\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM_ID\"])),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ElementRef\"],\n            GoogleMapsAPIWrapper,\n            Object,\n            FitBoundsService,\n            _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgZone\"]])\n    ], AgmMap);\n    return AgmMap;\n}());\n\nvar markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMarker = /** @class */ (function () {\n    function AgmMarker(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         *\n         * @memberof AgmMarker\n         */\n        this.animationChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        this.drag = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /** @internal */\n        this.infoWindow = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"QueryList\"]();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"ReplaySubject\"](1);\n        this._id = (markerId++).toString();\n    }\n    AgmMarker_1 = AgmMarker;\n    /* @internal */\n    AgmMarker.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });\n    };\n    AgmMarker.prototype.handleInfoWindowUpdate = function () {\n        var _this = this;\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(function (marker) {\n            marker.hostMarker = _this;\n        });\n    };\n    /** @internal */\n    AgmMarker.prototype.ngOnChanges = function (changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    };\n    /** @internal */\n    AgmMarker.prototype.getFitBoundsDetails$ = function () {\n        return this._fitBoundsDetails$.asObservable();\n    };\n    AgmMarker.prototype._updateFitBoundsDetails = function () {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    };\n    AgmMarker.prototype._addEventListeners = function () {\n        var _this = this;\n        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n            if (_this.openInfoWindow) {\n                _this.infoWindow.forEach(function (infoWindow) { return infoWindow.open(); });\n            }\n            _this.markerClick.emit(_this);\n        });\n        this._observableSubscriptions.push(cs);\n        var dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(function () {\n            _this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        var rc = this._markerManager.createEventObservable('rightclick', this).subscribe(function () {\n            _this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        var ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe(function (e) {\n            _this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        var d = this._markerManager.createEventObservable('drag', this)\n            .subscribe(function (e) {\n            _this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(d);\n        var de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(function (e) {\n            _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(de);\n        var mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(function (e) {\n            _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        var mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(function (e) {\n            _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n        var anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(function () {\n            _this.animationChange.emit(_this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    };\n    /** @internal */\n    AgmMarker.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmMarker.prototype.toString = function () { return 'AgmMarker-' + this._id.toString(); };\n    /** @internal */\n    AgmMarker.prototype.ngOnDestroy = function () {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    var AgmMarker_1;\n    AgmMarker.ctorParameters = function () { return [\n        { type: MarkerManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmMarker.prototype, \"latitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmMarker.prototype, \"longitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMarker.prototype, \"title\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"label\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('markerDraggable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"draggable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMarker.prototype, \"iconUrl\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"visible\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"openInfoWindow\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"opacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('markerClickable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"clickable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmMarker.prototype, \"animation\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmMarker.prototype, \"animationChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"markerClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"markerDblClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"markerRightClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"dragStart\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"drag\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"dragEnd\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"mouseOver\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmMarker.prototype, \"mouseOut\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ContentChildren\"])(AgmInfoWindow),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"QueryList\"])\n    ], AgmMarker.prototype, \"infoWindow\", void 0);\n    AgmMarker = AgmMarker_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-marker',\n            providers: [\n                { provide: FitBoundsAccessor, useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(function () { return AgmMarker_1; }) },\n            ],\n            inputs: [\n                'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n            ],\n            outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [MarkerManager])\n    ], AgmMarker);\n    return AgmMarker;\n}());\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nvar AgmPolygon = /** @class */ (function () {\n    function AgmPolygon(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    AgmPolygon_1 = AgmPolygon;\n    /** @internal */\n    AgmPolygon.prototype.ngAfterContentInit = function () {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    };\n    AgmPolygon.prototype.ngOnChanges = function (changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    };\n    AgmPolygon.prototype._init = function () {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolygon.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.polyClick.emit(ev); } },\n            { name: 'dblclick', handler: function (ev) { return _this.polyDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.polyDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.polyDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.polyDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.polyMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.polyMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.polyMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.polyMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.polyMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.polyRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polygonManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(function (paths$) {\n            var os = paths$.subscribe(function (pathEvent) { return _this.polyPathsChange.emit(pathEvent); });\n            _this._subscriptions.push(os);\n        });\n    };\n    AgmPolygon.prototype._updatePolygonOptions = function (changes) {\n        return Object.keys(changes)\n            .filter(function (k) { return AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    };\n    /** @internal */\n    AgmPolygon.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmPolygon.prototype.ngOnDestroy = function () {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    AgmPolygon.prototype.getPath = function () {\n        return this._polygonManager.getPath(this);\n    };\n    AgmPolygon.prototype.getPaths = function () {\n        return this._polygonManager.getPaths(this);\n    };\n    var AgmPolygon_1;\n    AgmPolygon._polygonOptionsAttributes = [\n        'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n        'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n        'editable', 'visible',\n    ];\n    AgmPolygon.ctorParameters = function () { return [\n        { type: PolygonManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolygon.prototype, \"clickable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('polyDraggable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolygon.prototype, \"draggable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolygon.prototype, \"editable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolygon.prototype, \"fillColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolygon.prototype, \"fillOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolygon.prototype, \"geodesic\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Array)\n    ], AgmPolygon.prototype, \"paths\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolygon.prototype, \"strokeColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolygon.prototype, \"strokeWeight\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Boolean)\n    ], AgmPolygon.prototype, \"visible\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolygon.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyDblClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyDrag\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyDragStart\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolygon.prototype, \"polyRightClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolygon.prototype, \"polyPathsChange\", void 0);\n    AgmPolygon = AgmPolygon_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-polygon',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [PolygonManager])\n    ], AgmPolygon);\n    return AgmPolygon;\n}());\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nvar AgmPolylineIcon = /** @class */ (function () {\n    function AgmPolylineIcon() {\n    }\n    AgmPolylineIcon.prototype.ngOnInit = function () {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Boolean)\n    ], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolylineIcon.prototype, \"offset\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolylineIcon.prototype, \"repeat\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolylineIcon.prototype, \"path\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"rotation\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"scale\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\n    AgmPolylineIcon = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({ selector: 'agm-polyline agm-icon-sequence' })\n    ], AgmPolylineIcon);\n    return AgmPolylineIcon;\n}());\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nvar AgmPolylinePoint = /** @class */ (function () {\n    function AgmPolylinePoint() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n    }\n    AgmPolylinePoint_1 = AgmPolylinePoint;\n    AgmPolylinePoint.prototype.ngOnChanges = function (changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            var position = {\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            };\n            this.positionChanged.emit(position);\n        }\n    };\n    /** @internal */\n    AgmPolylinePoint.prototype.getFitBoundsDetails$ = function () {\n        return this.positionChanged.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"startWith\"])({ lat: this.latitude, lng: this.longitude }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(function (position) { return ({ latLng: position }); }));\n    };\n    var AgmPolylinePoint_1;\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylinePoint.prototype, \"latitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolylinePoint.prototype, \"longitude\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\n    AgmPolylinePoint = AgmPolylinePoint_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-polyline-point',\n            providers: [\n                { provide: FitBoundsAccessor, useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(function () { return AgmPolylinePoint_1; }) },\n            ],\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [])\n    ], AgmPolylinePoint);\n    return AgmPolylinePoint;\n}());\n\nvar polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmPolyline = /** @class */ (function () {\n    function AgmPolyline(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    AgmPolyline_1 = AgmPolyline;\n    /** @internal */\n    AgmPolyline.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this.points.length) {\n            this.points.forEach(function (point) {\n                var s = point.positionChanged.subscribe(function () { _this._polylineManager.updatePolylinePoints(_this); });\n                _this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        var pointSub = this.points.changes.subscribe(function () { return _this._polylineManager.updatePolylinePoints(_this); });\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        var iconSub = this.iconSequences.changes.subscribe(function () { return _this._polylineManager.updateIconSequences(_this); });\n        this._subscriptions.push(iconSub);\n    };\n    AgmPolyline.prototype.ngOnChanges = function (changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return options[k] = changes[k].currentValue; });\n        this._polylineManager.setPolylineOptions(this, options);\n    };\n    AgmPolyline.prototype.getPath = function () {\n        return this._polylineManager.getPath(this);\n    };\n    AgmPolyline.prototype._init = function () {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolyline.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.lineClick.emit(ev); } },\n            { name: 'dblclick', handler: function (ev) { return _this.lineDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.lineDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.lineDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.lineDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.lineMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.lineMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.lineMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.lineMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.lineMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.lineRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polylineManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then(function (ob$) {\n            var os = ob$.subscribe(function (pathEvent) { return _this.polyPathChange.emit(pathEvent); });\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmPolyline.prototype._getPoints = function () {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    };\n    AgmPolyline.prototype._getIcons = function () {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    };\n    /** @internal */\n    AgmPolyline.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmPolyline.prototype.ngOnDestroy = function () {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    var AgmPolyline_1;\n    AgmPolyline._polylineOptionsAttributes = [\n        'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n        'zIndex',\n    ];\n    AgmPolyline.ctorParameters = function () { return [\n        { type: PolylineManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolyline.prototype, \"clickable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('polylineDraggable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolyline.prototype, \"draggable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolyline.prototype, \"editable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolyline.prototype, \"geodesic\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmPolyline.prototype, \"strokeColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolyline.prototype, \"strokeWeight\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolyline.prototype, \"visible\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmPolyline.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineDblClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineDrag\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineDragStart\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmPolyline.prototype, \"lineRightClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmPolyline.prototype, \"polyPathChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ContentChildren\"])(AgmPolylinePoint),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"QueryList\"])\n    ], AgmPolyline.prototype, \"points\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ContentChildren\"])(AgmPolylineIcon),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"QueryList\"])\n    ], AgmPolyline.prototype, \"iconSequences\", void 0);\n    AgmPolyline = AgmPolyline_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-polyline',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [PolylineManager])\n    ], AgmPolyline);\n    return AgmPolyline;\n}());\n\nvar AgmRectangle = /** @class */ (function () {\n    function AgmRectangle(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        this.drag = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    AgmRectangle_1 = AgmRectangle;\n    /** @internal */\n    AgmRectangle.prototype.ngOnInit = function () {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmRectangle.prototype.ngOnChanges = function (changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    };\n    AgmRectangle.prototype._updateRectangleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmRectangle_1._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmRectangle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager\n                .createEventObservable(eventName, _this)\n                .subscribe(function (value) {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        _this._manager.getBounds(_this).then(function (bounds) {\n                            return eventEmitter.emit({\n                                north: bounds.getNorthEast().lat(),\n                                east: bounds.getNorthEast().lng(),\n                                south: bounds.getSouthWest().lat(),\n                                west: bounds.getSouthWest().lng(),\n                            });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                        });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    AgmRectangle.prototype.ngOnDestroy = function () {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    AgmRectangle.prototype.getBounds = function () {\n        return this._manager.getBounds(this);\n    };\n    var AgmRectangle_1;\n    AgmRectangle._mapOptions = [\n        'fillColor',\n        'fillOpacity',\n        'strokeColor',\n        'strokeOpacity',\n        'strokePosition',\n        'strokeWeight',\n        'visible',\n        'zIndex',\n        'clickable',\n    ];\n    AgmRectangle.ctorParameters = function () { return [\n        { type: RectangleManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"north\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"east\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"south\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"west\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmRectangle.prototype, \"clickable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])('rectangleDraggable'),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmRectangle.prototype, \"draggable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmRectangle.prototype, \"editable\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmRectangle.prototype, \"fillColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"fillOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmRectangle.prototype, \"strokeColor\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", String)\n    ], AgmRectangle.prototype, \"strokePosition\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmRectangle.prototype, \"strokeWeight\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmRectangle.prototype, \"visible\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Number)\n    ], AgmRectangle.prototype, \"zIndex\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"boundsChange\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"rectangleClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"drag\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"dragEnd\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"dragStart\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"mouseDown\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"mouseMove\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"mouseOut\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"mouseOver\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"mouseUp\", void 0);\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Output\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"])\n    ], AgmRectangle.prototype, \"rightClick\", void 0);\n    AgmRectangle = AgmRectangle_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-rectangle',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [RectangleManager])\n    ], AgmRectangle);\n    return AgmRectangle;\n}());\n\nvar layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nvar AgmTransitLayer = /** @class */ (function () {\n    function AgmTransitLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    AgmTransitLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    };\n    AgmTransitLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    };\n    /** @internal */\n    AgmTransitLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmTransitLayer.prototype.toString = function () { return \"AgmTransitLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmTransitLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteLayer(this);\n    };\n    AgmTransitLayer.ctorParameters = function () { return [\n        { type: LayerManager }\n    ]; };\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Input\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:type\", Object)\n    ], AgmTransitLayer.prototype, \"visible\", void 0);\n    AgmTransitLayer = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Directive\"])({\n            selector: 'agm-transit-layer',\n        }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [LayerManager])\n    ], AgmTransitLayer);\n    return AgmTransitLayer;\n}());\n\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n    SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n    SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n    SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n    ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n    ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n    ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n    ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n    ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n    ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n    ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n    ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n    ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n    ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n    ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n    /** This map type displays a transparent layer of major streets on satellite images. */\n    MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n    /** This map type displays a normal street map. */\n    MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n    /** This map type displays satellite images. */\n    MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n    /** This map type displays maps with physical features such as terrain and vegetation. */\n    MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n    MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n    MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n    ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n    ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n    ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n    GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n    GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n    GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n    GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n    GeocoderStatus[\"ERROR\"] = \"ERROR\";\n    GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n    GeocoderStatus[\"OK\"] = \"OK\";\n    GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n    GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n    GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nvar AgmGeocoder = /** @class */ (function () {\n    function AgmGeocoder(loader) {\n        var _this = this;\n        var connectableGeocoder$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"Observable\"](function (subscriber) {\n            loader.load().then(function () { return subscriber.next(); });\n        })\n            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(function () { return _this._createGeocoder(); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"multicast\"])(new rxjs__WEBPACK_IMPORTED_MODULE_2__[\"ReplaySubject\"](1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    AgmGeocoder.prototype.geocode = function (request) {\n        var _this = this;\n        return this.geocoder$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"switchMap\"])(function (geocoder) { return _this._getGoogleResults(geocoder, request); }));\n    };\n    AgmGeocoder.prototype._getGoogleResults = function (geocoder, request) {\n        var geocodeObservable = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"bindCallback\"])(geocoder.geocode);\n        return geocodeObservable(request).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"switchMap\"])(function (_a) {\n            var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__read\"])(_a, 2), results = _b[0], status = _b[1];\n            if (status === GeocoderStatus.OK) {\n                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"of\"])(results);\n            }\n            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[\"throwError\"])(status);\n        }));\n    };\n    AgmGeocoder.prototype._createGeocoder = function () {\n        return new google.maps.Geocoder();\n    };\n    AgmGeocoder.ctorParameters = function () { return [\n        { type: MapsAPILoader }\n    ]; };\n    AgmGeocoder.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵdefineInjectable\"])({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ɵɵinject\"])(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\n    AgmGeocoder = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])({ providedIn: 'root' }),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [MapsAPILoader])\n    ], AgmGeocoder);\n    return AgmGeocoder;\n}());\n\nvar WindowRef = /** @class */ (function () {\n    function WindowRef() {\n    }\n    WindowRef.prototype.getNativeWindow = function () { return window; };\n    return WindowRef;\n}());\nvar DocumentRef = /** @class */ (function () {\n    function DocumentRef() {\n    }\n    DocumentRef.prototype.getNativeDocument = function () { return document; };\n    return DocumentRef;\n}());\nvar BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nvar LAZY_MAPS_API_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"InjectionToken\"]('angular-google-maps LAZY_MAPS_API_CONFIG');\nvar LazyMapsAPILoader = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(LazyMapsAPILoader, _super);\n    function LazyMapsAPILoader(config, w, d, localeId) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this.localeId = localeId;\n        _this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        _this.callbackName = \"agmLazyMapsAPILoader\";\n        _this._config = config || {};\n        _this._windowRef = w;\n        _this._documentRef = d;\n        return _this;\n    }\n    LazyMapsAPILoader.prototype.load = function () {\n        var window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        var scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        var script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    };\n    LazyMapsAPILoader.prototype._assignScriptLoadingPromise = function (scriptElem) {\n        var _this = this;\n        this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n            _this._windowRef.getNativeWindow()[_this.callbackName] = function () {\n                resolve();\n            };\n            scriptElem.onerror = function (error) {\n                reject(error);\n            };\n        });\n    };\n    LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {\n        var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        var protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        var queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n        };\n        var params = Object.keys(queryParams)\n            .filter(function (k) { return queryParams[k] != null; })\n            .filter(function (k) {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map(function (k) {\n            // join arrays as comma seperated strings\n            var i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map(function (entry) {\n            return entry.key + \"=\" + entry.value;\n        })\n            .join('&');\n        return protocol + \"//\" + hostAndPath + \"?\" + params;\n    };\n    LazyMapsAPILoader.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [LAZY_MAPS_API_CONFIG,] }] },\n        { type: WindowRef },\n        { type: DocumentRef },\n        { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"LOCALE_ID\"],] }] }\n    ]; };\n    LazyMapsAPILoader = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])(),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Optional\"])()), Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(LAZY_MAPS_API_CONFIG)),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"])(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"LOCALE_ID\"])),\n        Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"])(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])\n    ], LazyMapsAPILoader);\n    return LazyMapsAPILoader;\n}(MapsAPILoader));\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar NoOpMapsAPILoader = /** @class */ (function () {\n    function NoOpMapsAPILoader() {\n    }\n    NoOpMapsAPILoader.prototype.load = function () {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    };\n    return NoOpMapsAPILoader;\n}());\n\n// exported map types\n\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMarker,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmTransitLayer,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nvar AgmCoreModule = /** @class */ (function () {\n    function AgmCoreModule() {\n    }\n    AgmCoreModule_1 = AgmCoreModule;\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    AgmCoreModule.forRoot = function (lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule_1,\n            providers: Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spread\"])(BROWSER_GLOBALS_PROVIDERS, [\n                { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ]),\n        };\n    };\n    var AgmCoreModule_1;\n    AgmCoreModule = AgmCoreModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"])([\n        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({ declarations: coreDirectives(), exports: coreDirectives() })\n    ], AgmCoreModule);\n    return AgmCoreModule;\n}());\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=agm-core.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@agm/core/fesm5/agm-core.js\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css":
/*!*************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/leaflet/dist/leaflet.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var escape = __webpack_require__(/*! ../../css-loader/lib/url/escape.js */ \"./node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = __webpack_require__(/*! ../../css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg,\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer {\\r\\n\\tmax-width: none !important;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-tile {\\r\\n\\twill-change: opacity;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t     -o-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t     -o-transition:      -o-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t     -o-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline: 0;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-active {\\r\\n\\toutline: 2px solid orange;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont: 12px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-bar a:hover {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + escape(__webpack_require__(/*! ./images/layers.png */ \"./node_modules/leaflet/dist/images/layers.png\")) + \");\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + escape(__webpack_require__(/*! ./images/layers-2x.png */ \"./node_modules/leaflet/dist/images/layers-2x.png\")) + \");\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path {\\r\\n\\tbackground-image: url(\" + escape(__webpack_require__(/*! ./images/marker-icon.png */ \"./node_modules/leaflet/dist/images/marker-icon.png\")) + \");\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.7);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-control-attribution,\\r\\n.leaflet-container .leaflet-control-scale {\\r\\n\\tfont-size: 11px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\tfont-size: 11px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 19px;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 18px 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t     -o-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tpadding: 4px 4px 0 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 18px;\\r\\n\\theight: 14px;\\r\\n\\tfont: 16px/14px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #c3c3c3;\\r\\n\\ttext-decoration: none;\\r\\n\\tfont-weight: bold;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover {\\r\\n\\tcolor: #999;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\tzoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip-container {\\r\\n\\tmargin-top: -1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-clickable {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzPzk4NWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHVGQUFvQztBQUN6RCwyQkFBMkIsbUJBQU8sQ0FBQyxtRkFBa0M7QUFDckU7OztBQUdBO0FBQ0EsY0FBYyxRQUFTLHNRQUFzUSx5QkFBeUIsY0FBYyxhQUFhLE9BQU8sd0JBQXdCLHVCQUF1QixPQUFPLHVFQUF1RSxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsT0FBTywySEFBMkgsaURBQWlELE9BQU8seUhBQXlILG9CQUFvQixxQkFBcUIsb0NBQW9DLE9BQU8scURBQXFELHFCQUFxQixPQUFPLDhhQUE4YSxpQ0FBaUMsT0FBTywrQ0FBK0Msb0NBQW9DLGdDQUFnQyxPQUFPLDJDQUEyQyxtQ0FBbUMsT0FBTyw4REFBOEQsNkJBQTZCLHlCQUF5QixLQUFLLHdCQUF3QiwrQ0FBK0MsS0FBSywwQkFBMEIsMkRBQTJELEtBQUssbUJBQW1CLHNCQUFzQix5QkFBeUIsT0FBTywwQkFBMEIsMEJBQTBCLE9BQU8sdUJBQXVCLGVBQWUsZ0JBQWdCLGtDQUFrQyxrQ0FBa0MsbUJBQW1CLE9BQU8sMkdBQTJHLDZCQUE2QixPQUFPLCtCQUErQixjQUFjLEVBQUUsK0JBQStCLGNBQWMsRUFBRSwyQkFBMkIsY0FBYyxFQUFFLDJCQUEyQixjQUFjLEVBQUUsMkJBQTJCLGNBQWMsRUFBRSw2QkFBNkIsY0FBYyxFQUFFLDJCQUEyQixjQUFjLEVBQUUsa0NBQWtDLGNBQWMsRUFBRSw4QkFBOEIsY0FBYyxFQUFFLDRCQUE0QixpQkFBaUIsa0JBQWtCLE9BQU8sV0FBVyxrQ0FBa0MsNEJBQTRCLHlCQUF5QixPQUFPLCtEQUErRCx5QkFBeUIsbUJBQW1CLHFDQUFxQywyREFBMkQsT0FBTyxzQ0FBc0MseUJBQXlCLG9CQUFvQiwyQkFBMkIsT0FBTyxrQkFBa0IsYUFBYSxPQUFPLG9CQUFvQixlQUFlLE9BQU8scUJBQXFCLGdCQUFnQixPQUFPLG1CQUFtQixjQUFjLE9BQU8sc0JBQXNCLGtCQUFrQixrQkFBa0IsT0FBTyxxQ0FBcUMsbUJBQW1CLE9BQU8sbUNBQW1DLHVCQUF1QixPQUFPLHNDQUFzQywwQkFBMEIsT0FBTyxvQ0FBb0Msd0JBQXdCLE9BQU8scUNBQXFDLHlCQUF5QixPQUFPLG9GQUFvRiwyQkFBMkIsT0FBTyx1Q0FBdUMsaUJBQWlCLDhDQUE4Qyw4Q0FBOEMsOENBQThDLDhDQUE4QyxPQUFPLHlEQUF5RCxpQkFBaUIsT0FBTyw0QkFBNEIsb0NBQW9DLG9DQUFvQyxvQ0FBb0MsT0FBTywrQ0FBK0MsNkJBQTZCLE9BQU8sK0NBQStDLDJFQUEyRSwyRUFBMkUsMkVBQTJFLDJFQUEyRSxPQUFPLDBFQUEwRSwrQkFBK0IsK0JBQStCLCtCQUErQiwrQkFBK0IsT0FBTywrQ0FBK0MseUJBQXlCLE9BQU8sdURBQXVELHNCQUFzQixPQUFPLG1CQUFtQiwyQkFBMkIsMkJBQTJCLE9BQU8sb0VBQW9FLHdCQUF3QixPQUFPLDhDQUE4QyxtQkFBbUIsT0FBTyw4SUFBOEksbUJBQW1CLCtCQUErQiwrQkFBK0IsT0FBTyxvTEFBb0wsMkJBQTJCLE9BQU8sZ0pBQWdKLHFDQUFxQywyREFBMkQsT0FBTyx1REFBdUQsdUJBQXVCLGlCQUFpQixPQUFPLDBCQUEwQixxQkFBcUIsT0FBTyx5Q0FBeUMsZ0NBQWdDLE9BQU8sdUJBQXVCLDhCQUE4Qix3Q0FBd0MsT0FBTyw0REFBNEQsc0VBQXNFLE9BQU8sOERBQThELDZDQUE2Qyx5QkFBeUIsT0FBTyw2Q0FBNkMsNkJBQTZCLG9DQUFvQyxrQkFBa0IsbUJBQW1CLHdCQUF3QixxQkFBcUIseUJBQXlCLDRCQUE0QixtQkFBbUIsT0FBTyx1REFBdUQsbUNBQW1DLG1DQUFtQyxxQkFBcUIsT0FBTywwQkFBMEIsZ0NBQWdDLE9BQU8sZ0NBQWdDLGtDQUFrQyxtQ0FBbUMsT0FBTywrQkFBK0IscUNBQXFDLHNDQUFzQywwQkFBMEIsT0FBTyxxQ0FBcUMsc0JBQXNCLGdDQUFnQyxrQkFBa0IsT0FBTyx1Q0FBdUMsa0JBQWtCLG1CQUFtQix3QkFBd0IsT0FBTywrQ0FBK0Msa0NBQWtDLG1DQUFtQyxPQUFPLDhDQUE4QyxxQ0FBcUMsc0NBQXNDLE9BQU8sMEZBQTBGLDBEQUEwRCx1QkFBdUIsT0FBTyw0RkFBNEYsc0JBQXNCLE9BQU8saUVBQWlFLDRDQUE0Qyx1QkFBdUIseUJBQXlCLE9BQU8sb0NBQW9DLHVDQUF1QyxtQkFBTyxDQUFDLDBFQUFxQixRQUFRLGtCQUFrQixtQkFBbUIsT0FBTyxvREFBb0QsdUNBQXVDLG1CQUFPLENBQUMsZ0ZBQXdCLFFBQVEsaUNBQWlDLE9BQU8sbURBQW1ELGtCQUFrQixtQkFBbUIsT0FBTyw4SEFBOEgsb0JBQW9CLE9BQU8sbUVBQW1FLHFCQUFxQix5QkFBeUIsT0FBTyxzQ0FBc0MsZ0NBQWdDLGtCQUFrQix1QkFBdUIsT0FBTyx1Q0FBdUMseUJBQXlCLHlCQUF5Qix5QkFBeUIsT0FBTyxzQ0FBc0Msc0JBQXNCLHlCQUF5QixlQUFlLE9BQU8sbUNBQW1DLHFCQUFxQixPQUFPLHVDQUF1QyxnQkFBZ0IsaUNBQWlDLGlDQUFpQyxPQUFPLCtEQUErRCx1Q0FBdUMsbUJBQU8sQ0FBQyxvRkFBMEIsUUFBUSxPQUFPLHlHQUF5Ryx1QkFBdUIsMkNBQTJDLGdCQUFnQixPQUFPLGtFQUFrRSxxQkFBcUIsa0JBQWtCLE9BQU8sb0NBQW9DLDRCQUE0QixPQUFPLDBDQUEwQyxpQ0FBaUMsT0FBTyxtR0FBbUcsc0JBQXNCLE9BQU8sMENBQTBDLHVCQUF1QixPQUFPLDRDQUE0Qyx5QkFBeUIsT0FBTyxpQ0FBaUMsNkJBQTZCLHVCQUF1Qix1QkFBdUIsMkJBQTJCLHNCQUFzQiwwQkFBMEIsdUJBQXVCLGtDQUFrQyxrQ0FBa0MsMkJBQTJCLDJDQUEyQyxPQUFPLG1EQUFtRCxpQ0FBaUMsMEJBQTBCLHVCQUF1QixPQUFPLG9FQUFvRSxvQ0FBb0MsT0FBTyxnSUFBZ0ksdUJBQXVCLE9BQU8sNEVBQTRFLHdDQUF3QyxtQ0FBbUMsT0FBTywrQ0FBK0MseUJBQXlCLHlCQUF5QiwwQkFBMEIsT0FBTyxvQ0FBb0MsbUJBQW1CLHVCQUF1QiwwQkFBMEIsT0FBTyw0QkFBNEIsd0JBQXdCLHVCQUF1QixPQUFPLDhCQUE4QixxQkFBcUIsT0FBTyxrQ0FBa0Msa0JBQWtCLG1CQUFtQix5QkFBeUIsZ0JBQWdCLHlCQUF5Qix1QkFBdUIsMkJBQTJCLE9BQU8sd0JBQXdCLGtCQUFrQixtQkFBbUIsbUJBQW1CLCtCQUErQiwyQ0FBMkMsdUNBQXVDLHVDQUF1Qyx1Q0FBdUMsdUNBQXVDLE9BQU8sMkRBQTJELHdCQUF3QixrQkFBa0IsNkNBQTZDLE9BQU8scURBQXFELHlCQUF5QixhQUFhLGVBQWUsMkJBQTJCLG1CQUFtQix5QkFBeUIsa0JBQWtCLG1CQUFtQixrREFBa0QscUJBQXFCLDRCQUE0Qix3QkFBd0IsOEJBQThCLE9BQU8sMkRBQTJELGtCQUFrQixPQUFPLDZCQUE2QixxQkFBcUIsb0NBQW9DLGlDQUFpQyxPQUFPLHVEQUF1RCxjQUFjLE9BQU8sdUNBQXVDLGtCQUFrQixxQkFBcUIsb0lBQW9JLHdIQUF3SCxPQUFPLGlEQUFpRCx1QkFBdUIsT0FBTyxpTEFBaUwsNkJBQTZCLE9BQU8scURBQXFELHVCQUF1Qiw2QkFBNkIsT0FBTyx1R0FBdUcseUJBQXlCLG1CQUFtQiw2QkFBNkIsNkJBQTZCLHlCQUF5QixrQkFBa0IsMEJBQTBCLGdDQUFnQyw2QkFBNkIsNEJBQTRCLHdCQUF3QiwyQkFBMkIsNENBQTRDLE9BQU8sd0NBQXdDLHNCQUFzQiwyQkFBMkIsT0FBTyx1SUFBdUkseUJBQXlCLDJCQUEyQixvQ0FBb0MsOEJBQThCLG9CQUFvQixPQUFPLHlEQUF5RCxzQkFBc0IsS0FBSywwQkFBMEIsdUJBQXVCLEtBQUssb0VBQW9FLGdCQUFnQix3QkFBd0IsT0FBTyxpQ0FBaUMsZ0JBQWdCLDJCQUEyQiw2QkFBNkIsT0FBTyxvQ0FBb0MsYUFBYSx3QkFBd0Isd0JBQXdCLGdDQUFnQyxPQUFPLDJCQUEyQix3QkFBd0IsS0FBSyw0QkFBNEIsdUJBQXVCLEtBQUssb0VBQW9FLGVBQWUsdUJBQXVCLE9BQU8sa0NBQWtDLGVBQWUsMEJBQTBCLDhCQUE4QixPQUFPLG1DQUFtQyxjQUFjLHlCQUF5QiwrQkFBK0IsT0FBTzs7QUFFLzhlIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGVzY2FwZSA9IHJlcXVpcmUoXCIuLi8uLi9jc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzXCIpO1xuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qIHJlcXVpcmVkIHN0eWxlcyAqL1xcclxcblxcclxcbi5sZWFmbGV0LXBhbmUsXFxyXFxuLmxlYWZsZXQtdGlsZSxcXHJcXG4ubGVhZmxldC1tYXJrZXItaWNvbixcXHJcXG4ubGVhZmxldC1tYXJrZXItc2hhZG93LFxcclxcbi5sZWFmbGV0LXRpbGUtY29udGFpbmVyLFxcclxcbi5sZWFmbGV0LXBhbmUgPiBzdmcsXFxyXFxuLmxlYWZsZXQtcGFuZSA+IGNhbnZhcyxcXHJcXG4ubGVhZmxldC16b29tLWJveCxcXHJcXG4ubGVhZmxldC1pbWFnZS1sYXllcixcXHJcXG4ubGVhZmxldC1sYXllciB7XFxyXFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcclxcblxcdGxlZnQ6IDA7XFxyXFxuXFx0dG9wOiAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250YWluZXIge1xcclxcblxcdG92ZXJmbG93OiBoaWRkZW47XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXRpbGUsXFxyXFxuLmxlYWZsZXQtbWFya2VyLWljb24sXFxyXFxuLmxlYWZsZXQtbWFya2VyLXNoYWRvdyB7XFxyXFxuXFx0LXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXHJcXG5cXHQgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcclxcblxcdCAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxuXFx0ICAtd2Via2l0LXVzZXItZHJhZzogbm9uZTtcXHJcXG5cXHR9XFxyXFxuLyogU2FmYXJpIHJlbmRlcnMgbm9uLXJldGluYSB0aWxlIG9uIHJldGluYSBiZXR0ZXIgd2l0aCB0aGlzLCBidXQgQ2hyb21lIGlzIHdvcnNlICovXFxyXFxuLmxlYWZsZXQtc2FmYXJpIC5sZWFmbGV0LXRpbGUge1xcclxcblxcdGltYWdlLXJlbmRlcmluZzogLXdlYmtpdC1vcHRpbWl6ZS1jb250cmFzdDtcXHJcXG5cXHR9XFxyXFxuLyogaGFjayB0aGF0IHByZXZlbnRzIGh3IGxheWVycyBcXFwic3RyZXRjaGluZ1xcXCIgd2hlbiBsb2FkaW5nIG5ldyB0aWxlcyAqL1xcclxcbi5sZWFmbGV0LXNhZmFyaSAubGVhZmxldC10aWxlLWNvbnRhaW5lciB7XFxyXFxuXFx0d2lkdGg6IDE2MDBweDtcXHJcXG5cXHRoZWlnaHQ6IDE2MDBweDtcXHJcXG5cXHQtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtbWFya2VyLWljb24sXFxyXFxuLmxlYWZsZXQtbWFya2VyLXNoYWRvdyB7XFxyXFxuXFx0ZGlzcGxheTogYmxvY2s7XFxyXFxuXFx0fVxcclxcbi8qIC5sZWFmbGV0LWNvbnRhaW5lciBzdmc6IHJlc2V0IHN2ZyBtYXgtd2lkdGggZGVjbGVyYXRpb24gc2hpcHBlZCBpbiBKb29tbGEhIChqb29tbGEub3JnKSAzLnggKi9cXHJcXG4vKiAubGVhZmxldC1jb250YWluZXIgaW1nOiBtYXAgaXMgYnJva2VuIGluIEZGIGlmIHlvdSBoYXZlIG1heC13aWR0aDogMTAwJSBvbiB0aWxlcyAqL1xcclxcbi5sZWFmbGV0LWNvbnRhaW5lciAubGVhZmxldC1vdmVybGF5LXBhbmUgc3ZnLFxcclxcbi5sZWFmbGV0LWNvbnRhaW5lciAubGVhZmxldC1tYXJrZXItcGFuZSBpbWcsXFxyXFxuLmxlYWZsZXQtY29udGFpbmVyIC5sZWFmbGV0LXNoYWRvdy1wYW5lIGltZyxcXHJcXG4ubGVhZmxldC1jb250YWluZXIgLmxlYWZsZXQtdGlsZS1wYW5lIGltZyxcXHJcXG4ubGVhZmxldC1jb250YWluZXIgaW1nLmxlYWZsZXQtaW1hZ2UtbGF5ZXIge1xcclxcblxcdG1heC13aWR0aDogbm9uZSAhaW1wb3J0YW50O1xcclxcblxcdH1cXHJcXG5cXHJcXG4ubGVhZmxldC1jb250YWluZXIubGVhZmxldC10b3VjaC16b29tIHtcXHJcXG5cXHQtbXMtdG91Y2gtYWN0aW9uOiBwYW4teCBwYW4teTtcXHJcXG5cXHR0b3VjaC1hY3Rpb246IHBhbi14IHBhbi15O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250YWluZXIubGVhZmxldC10b3VjaC1kcmFnIHtcXHJcXG5cXHQtbXMtdG91Y2gtYWN0aW9uOiBwaW5jaC16b29tO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250YWluZXIubGVhZmxldC10b3VjaC1kcmFnLmxlYWZsZXQtdG91Y2gtem9vbSB7XFxyXFxuXFx0LW1zLXRvdWNoLWFjdGlvbjogbm9uZTtcXHJcXG5cXHR0b3VjaC1hY3Rpb246IG5vbmU7XFxyXFxufVxcclxcbi5sZWFmbGV0LWNvbnRhaW5lciB7XFxyXFxuXFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG59XFxyXFxuLmxlYWZsZXQtY29udGFpbmVyIGEge1xcclxcblxcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSg1MSwgMTgxLCAyMjksIDAuNCk7XFxyXFxufVxcclxcbi5sZWFmbGV0LXRpbGUge1xcclxcblxcdGZpbHRlcjogaW5oZXJpdDtcXHJcXG5cXHR2aXNpYmlsaXR5OiBoaWRkZW47XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXRpbGUtbG9hZGVkIHtcXHJcXG5cXHR2aXNpYmlsaXR5OiBpbmhlcml0O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC16b29tLWJveCB7XFxyXFxuXFx0d2lkdGg6IDA7XFxyXFxuXFx0aGVpZ2h0OiAwO1xcclxcblxcdC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG5cXHQgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuXFx0ei1pbmRleDogODAwO1xcclxcblxcdH1cXHJcXG4vKiB3b3JrYXJvdW5kIGZvciBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD04ODgzMTkgKi9cXHJcXG4ubGVhZmxldC1vdmVybGF5LXBhbmUgc3ZnIHtcXHJcXG5cXHQtbW96LXVzZXItc2VsZWN0OiBub25lO1xcclxcblxcdH1cXHJcXG5cXHJcXG4ubGVhZmxldC1wYW5lICAgICAgICAgeyB6LWluZGV4OiA0MDA7IH1cXHJcXG5cXHJcXG4ubGVhZmxldC10aWxlLXBhbmUgICAgeyB6LWluZGV4OiAyMDA7IH1cXHJcXG4ubGVhZmxldC1vdmVybGF5LXBhbmUgeyB6LWluZGV4OiA0MDA7IH1cXHJcXG4ubGVhZmxldC1zaGFkb3ctcGFuZSAgeyB6LWluZGV4OiA1MDA7IH1cXHJcXG4ubGVhZmxldC1tYXJrZXItcGFuZSAgeyB6LWluZGV4OiA2MDA7IH1cXHJcXG4ubGVhZmxldC10b29sdGlwLXBhbmUgICB7IHotaW5kZXg6IDY1MDsgfVxcclxcbi5sZWFmbGV0LXBvcHVwLXBhbmUgICB7IHotaW5kZXg6IDcwMDsgfVxcclxcblxcclxcbi5sZWFmbGV0LW1hcC1wYW5lIGNhbnZhcyB7IHotaW5kZXg6IDEwMDsgfVxcclxcbi5sZWFmbGV0LW1hcC1wYW5lIHN2ZyAgICB7IHotaW5kZXg6IDIwMDsgfVxcclxcblxcclxcbi5sZWFmbGV0LXZtbC1zaGFwZSB7XFxyXFxuXFx0d2lkdGg6IDFweDtcXHJcXG5cXHRoZWlnaHQ6IDFweDtcXHJcXG5cXHR9XFxyXFxuLmx2bWwge1xcclxcblxcdGJlaGF2aW9yOiB1cmwoI2RlZmF1bHQjVk1MKTtcXHJcXG5cXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxyXFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcclxcblxcdH1cXHJcXG5cXHJcXG5cXHJcXG4vKiBjb250cm9sIHBvc2l0aW9uaW5nICovXFxyXFxuXFxyXFxuLmxlYWZsZXQtY29udHJvbCB7XFxyXFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcclxcblxcdHotaW5kZXg6IDgwMDtcXHJcXG5cXHRwb2ludGVyLWV2ZW50czogdmlzaWJsZVBhaW50ZWQ7IC8qIElFIDktMTAgZG9lc24ndCBoYXZlIGF1dG8gKi9cXHJcXG5cXHRwb2ludGVyLWV2ZW50czogYXV0bztcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG9wLFxcclxcbi5sZWFmbGV0LWJvdHRvbSB7XFxyXFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcclxcblxcdHotaW5kZXg6IDEwMDA7XFxyXFxuXFx0cG9pbnRlci1ldmVudHM6IG5vbmU7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXRvcCB7XFxyXFxuXFx0dG9wOiAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1yaWdodCB7XFxyXFxuXFx0cmlnaHQ6IDA7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWJvdHRvbSB7XFxyXFxuXFx0Ym90dG9tOiAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1sZWZ0IHtcXHJcXG5cXHRsZWZ0OiAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250cm9sIHtcXHJcXG5cXHRmbG9hdDogbGVmdDtcXHJcXG5cXHRjbGVhcjogYm90aDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtcmlnaHQgLmxlYWZsZXQtY29udHJvbCB7XFxyXFxuXFx0ZmxvYXQ6IHJpZ2h0O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC10b3AgLmxlYWZsZXQtY29udHJvbCB7XFxyXFxuXFx0bWFyZ2luLXRvcDogMTBweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtYm90dG9tIC5sZWFmbGV0LWNvbnRyb2wge1xcclxcblxcdG1hcmdpbi1ib3R0b206IDEwcHg7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWxlZnQgLmxlYWZsZXQtY29udHJvbCB7XFxyXFxuXFx0bWFyZ2luLWxlZnQ6IDEwcHg7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXJpZ2h0IC5sZWFmbGV0LWNvbnRyb2wge1xcclxcblxcdG1hcmdpbi1yaWdodDogMTBweDtcXHJcXG5cXHR9XFxyXFxuXFxyXFxuXFxyXFxuLyogem9vbSBhbmQgZmFkZSBhbmltYXRpb25zICovXFxyXFxuXFxyXFxuLmxlYWZsZXQtZmFkZS1hbmltIC5sZWFmbGV0LXRpbGUge1xcclxcblxcdHdpbGwtY2hhbmdlOiBvcGFjaXR5O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1mYWRlLWFuaW0gLmxlYWZsZXQtcG9wdXAge1xcclxcblxcdG9wYWNpdHk6IDA7XFxyXFxuXFx0LXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyO1xcclxcblxcdCAgIC1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGxpbmVhcjtcXHJcXG5cXHQgICAgIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyBsaW5lYXI7XFxyXFxuXFx0ICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1mYWRlLWFuaW0gLmxlYWZsZXQtbWFwLXBhbmUgLmxlYWZsZXQtcG9wdXAge1xcclxcblxcdG9wYWNpdHk6IDE7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXpvb20tYW5pbWF0ZWQge1xcclxcblxcdC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xcclxcblxcdCAgICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xcclxcblxcdCAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC16b29tLWFuaW0gLmxlYWZsZXQtem9vbS1hbmltYXRlZCB7XFxyXFxuXFx0d2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtem9vbS1hbmltIC5sZWFmbGV0LXpvb20tYW5pbWF0ZWQge1xcclxcblxcdC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsMCwwLjI1LDEpO1xcclxcblxcdCAgIC1tb3otdHJhbnNpdGlvbjogICAgLW1vei10cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsMCwwLjI1LDEpO1xcclxcblxcdCAgICAgLW8tdHJhbnNpdGlvbjogICAgICAtby10cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsMCwwLjI1LDEpO1xcclxcblxcdCAgICAgICAgdHJhbnNpdGlvbjogICAgICAgICB0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsMCwwLjI1LDEpO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC16b29tLWFuaW0gLmxlYWZsZXQtdGlsZSxcXHJcXG4ubGVhZmxldC1wYW4tYW5pbSAubGVhZmxldC10aWxlIHtcXHJcXG5cXHQtd2Via2l0LXRyYW5zaXRpb246IG5vbmU7XFxyXFxuXFx0ICAgLW1vei10cmFuc2l0aW9uOiBub25lO1xcclxcblxcdCAgICAgLW8tdHJhbnNpdGlvbjogbm9uZTtcXHJcXG5cXHQgICAgICAgIHRyYW5zaXRpb246IG5vbmU7XFxyXFxuXFx0fVxcclxcblxcclxcbi5sZWFmbGV0LXpvb20tYW5pbSAubGVhZmxldC16b29tLWhpZGUge1xcclxcblxcdHZpc2liaWxpdHk6IGhpZGRlbjtcXHJcXG5cXHR9XFxyXFxuXFxyXFxuXFxyXFxuLyogY3Vyc29ycyAqL1xcclxcblxcclxcbi5sZWFmbGV0LWludGVyYWN0aXZlIHtcXHJcXG5cXHRjdXJzb3I6IHBvaW50ZXI7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWdyYWIge1xcclxcblxcdGN1cnNvcjogLXdlYmtpdC1ncmFiO1xcclxcblxcdGN1cnNvcjogICAgLW1vei1ncmFiO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jcm9zc2hhaXIsXFxyXFxuLmxlYWZsZXQtY3Jvc3NoYWlyIC5sZWFmbGV0LWludGVyYWN0aXZlIHtcXHJcXG5cXHRjdXJzb3I6IGNyb3NzaGFpcjtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtcG9wdXAtcGFuZSxcXHJcXG4ubGVhZmxldC1jb250cm9sIHtcXHJcXG5cXHRjdXJzb3I6IGF1dG87XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWRyYWdnaW5nIC5sZWFmbGV0LWdyYWIsXFxyXFxuLmxlYWZsZXQtZHJhZ2dpbmcgLmxlYWZsZXQtZ3JhYiAubGVhZmxldC1pbnRlcmFjdGl2ZSxcXHJcXG4ubGVhZmxldC1kcmFnZ2luZyAubGVhZmxldC1tYXJrZXItZHJhZ2dhYmxlIHtcXHJcXG5cXHRjdXJzb3I6IG1vdmU7XFxyXFxuXFx0Y3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nO1xcclxcblxcdGN1cnNvcjogICAgLW1vei1ncmFiYmluZztcXHJcXG5cXHR9XFxyXFxuXFxyXFxuLyogbWFya2VyICYgb3ZlcmxheXMgaW50ZXJhY3Rpdml0eSAqL1xcclxcbi5sZWFmbGV0LW1hcmtlci1pY29uLFxcclxcbi5sZWFmbGV0LW1hcmtlci1zaGFkb3csXFxyXFxuLmxlYWZsZXQtaW1hZ2UtbGF5ZXIsXFxyXFxuLmxlYWZsZXQtcGFuZSA+IHN2ZyBwYXRoLFxcclxcbi5sZWFmbGV0LXRpbGUtY29udGFpbmVyIHtcXHJcXG5cXHRwb2ludGVyLWV2ZW50czogbm9uZTtcXHJcXG5cXHR9XFxyXFxuXFxyXFxuLmxlYWZsZXQtbWFya2VyLWljb24ubGVhZmxldC1pbnRlcmFjdGl2ZSxcXHJcXG4ubGVhZmxldC1pbWFnZS1sYXllci5sZWFmbGV0LWludGVyYWN0aXZlLFxcclxcbi5sZWFmbGV0LXBhbmUgPiBzdmcgcGF0aC5sZWFmbGV0LWludGVyYWN0aXZlIHtcXHJcXG5cXHRwb2ludGVyLWV2ZW50czogdmlzaWJsZVBhaW50ZWQ7IC8qIElFIDktMTAgZG9lc24ndCBoYXZlIGF1dG8gKi9cXHJcXG5cXHRwb2ludGVyLWV2ZW50czogYXV0bztcXHJcXG5cXHR9XFxyXFxuXFxyXFxuLyogdmlzdWFsIHR3ZWFrcyAqL1xcclxcblxcclxcbi5sZWFmbGV0LWNvbnRhaW5lciB7XFxyXFxuXFx0YmFja2dyb3VuZDogI2RkZDtcXHJcXG5cXHRvdXRsaW5lOiAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250YWluZXIgYSB7XFxyXFxuXFx0Y29sb3I6ICMwMDc4QTg7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWNvbnRhaW5lciBhLmxlYWZsZXQtYWN0aXZlIHtcXHJcXG5cXHRvdXRsaW5lOiAycHggc29saWQgb3JhbmdlO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC16b29tLWJveCB7XFxyXFxuXFx0Ym9yZGVyOiAycHggZG90dGVkICMzOGY7XFxyXFxuXFx0YmFja2dyb3VuZDogcmdiYSgyNTUsMjU1LDI1NSwwLjUpO1xcclxcblxcdH1cXHJcXG5cXHJcXG5cXHJcXG4vKiBnZW5lcmFsIHR5cG9ncmFwaHkgKi9cXHJcXG4ubGVhZmxldC1jb250YWluZXIge1xcclxcblxcdGZvbnQ6IDEycHgvMS41IFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XFxyXFxuXFx0fVxcclxcblxcclxcblxcclxcbi8qIGdlbmVyYWwgdG9vbGJhciBzdHlsZXMgKi9cXHJcXG5cXHJcXG4ubGVhZmxldC1iYXIge1xcclxcblxcdGJveC1zaGFkb3c6IDAgMXB4IDVweCByZ2JhKDAsMCwwLDAuNjUpO1xcclxcblxcdGJvcmRlci1yYWRpdXM6IDRweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtYmFyIGEsXFxyXFxuLmxlYWZsZXQtYmFyIGE6aG92ZXIge1xcclxcblxcdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XFxyXFxuXFx0d2lkdGg6IDI2cHg7XFxyXFxuXFx0aGVpZ2h0OiAyNnB4O1xcclxcblxcdGxpbmUtaGVpZ2h0OiAyNnB4O1xcclxcblxcdGRpc3BsYXk6IGJsb2NrO1xcclxcblxcdHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG5cXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuXFx0Y29sb3I6IGJsYWNrO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1iYXIgYSxcXHJcXG4ubGVhZmxldC1jb250cm9sLWxheWVycy10b2dnbGUge1xcclxcblxcdGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XFxyXFxuXFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG5cXHRkaXNwbGF5OiBibG9jaztcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtYmFyIGE6aG92ZXIge1xcclxcblxcdGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWJhciBhOmZpcnN0LWNoaWxkIHtcXHJcXG5cXHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7XFxyXFxuXFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtYmFyIGE6bGFzdC1jaGlsZCB7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O1xcclxcblxcdGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtYmFyIGEubGVhZmxldC1kaXNhYmxlZCB7XFxyXFxuXFx0Y3Vyc29yOiBkZWZhdWx0O1xcclxcblxcdGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XFxyXFxuXFx0Y29sb3I6ICNiYmI7XFxyXFxuXFx0fVxcclxcblxcclxcbi5sZWFmbGV0LXRvdWNoIC5sZWFmbGV0LWJhciBhIHtcXHJcXG5cXHR3aWR0aDogMzBweDtcXHJcXG5cXHRoZWlnaHQ6IDMwcHg7XFxyXFxuXFx0bGluZS1oZWlnaHQ6IDMwcHg7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXRvdWNoIC5sZWFmbGV0LWJhciBhOmZpcnN0LWNoaWxkIHtcXHJcXG5cXHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAycHg7XFxyXFxuXFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDJweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG91Y2ggLmxlYWZsZXQtYmFyIGE6bGFzdC1jaGlsZCB7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMnB4O1xcclxcblxcdGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAycHg7XFxyXFxuXFx0fVxcclxcblxcclxcbi8qIHpvb20gY29udHJvbCAqL1xcclxcblxcclxcbi5sZWFmbGV0LWNvbnRyb2wtem9vbS1pbixcXHJcXG4ubGVhZmxldC1jb250cm9sLXpvb20tb3V0IHtcXHJcXG5cXHRmb250OiBib2xkIDE4cHggJ0x1Y2lkYSBDb25zb2xlJywgTW9uYWNvLCBtb25vc3BhY2U7XFxyXFxuXFx0dGV4dC1pbmRlbnQ6IDFweDtcXHJcXG5cXHR9XFxyXFxuXFxyXFxuLmxlYWZsZXQtdG91Y2ggLmxlYWZsZXQtY29udHJvbC16b29tLWluLCAubGVhZmxldC10b3VjaCAubGVhZmxldC1jb250cm9sLXpvb20tb3V0ICB7XFxyXFxuXFx0Zm9udC1zaXplOiAyMnB4O1xcclxcblxcdH1cXHJcXG5cXHJcXG5cXHJcXG4vKiBsYXllcnMgY29udHJvbCAqL1xcclxcblxcclxcbi5sZWFmbGV0LWNvbnRyb2wtbGF5ZXJzIHtcXHJcXG5cXHRib3gtc2hhZG93OiAwIDFweCA1cHggcmdiYSgwLDAsMCwwLjQpO1xcclxcblxcdGJhY2tncm91bmQ6ICNmZmY7XFxyXFxuXFx0Ym9yZGVyLXJhZGl1czogNXB4O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250cm9sLWxheWVycy10b2dnbGUge1xcclxcblxcdGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvbGF5ZXJzLnBuZ1wiKSkgKyBcIik7XFxyXFxuXFx0d2lkdGg6IDM2cHg7XFxyXFxuXFx0aGVpZ2h0OiAzNnB4O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1yZXRpbmEgLmxlYWZsZXQtY29udHJvbC1sYXllcnMtdG9nZ2xlIHtcXHJcXG5cXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1hZ2VzL2xheWVycy0yeC5wbmdcIikpICsgXCIpO1xcclxcblxcdGJhY2tncm91bmQtc2l6ZTogMjZweCAyNnB4O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC10b3VjaCAubGVhZmxldC1jb250cm9sLWxheWVycy10b2dnbGUge1xcclxcblxcdHdpZHRoOiA0NHB4O1xcclxcblxcdGhlaWdodDogNDRweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1sYXllcnMgLmxlYWZsZXQtY29udHJvbC1sYXllcnMtbGlzdCxcXHJcXG4ubGVhZmxldC1jb250cm9sLWxheWVycy1leHBhbmRlZCAubGVhZmxldC1jb250cm9sLWxheWVycy10b2dnbGUge1xcclxcblxcdGRpc3BsYXk6IG5vbmU7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWNvbnRyb2wtbGF5ZXJzLWV4cGFuZGVkIC5sZWFmbGV0LWNvbnRyb2wtbGF5ZXJzLWxpc3Qge1xcclxcblxcdGRpc3BsYXk6IGJsb2NrO1xcclxcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1sYXllcnMtZXhwYW5kZWQge1xcclxcblxcdHBhZGRpbmc6IDZweCAxMHB4IDZweCA2cHg7XFxyXFxuXFx0Y29sb3I6ICMzMzM7XFxyXFxuXFx0YmFja2dyb3VuZDogI2ZmZjtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1sYXllcnMtc2Nyb2xsYmFyIHtcXHJcXG5cXHRvdmVyZmxvdy15OiBzY3JvbGw7XFxyXFxuXFx0b3ZlcmZsb3cteDogaGlkZGVuO1xcclxcblxcdHBhZGRpbmctcmlnaHQ6IDVweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1sYXllcnMtc2VsZWN0b3Ige1xcclxcblxcdG1hcmdpbi10b3A6IDJweDtcXHJcXG5cXHRwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuXFx0dG9wOiAxcHg7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWNvbnRyb2wtbGF5ZXJzIGxhYmVsIHtcXHJcXG5cXHRkaXNwbGF5OiBibG9jaztcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1sYXllcnMtc2VwYXJhdG9yIHtcXHJcXG5cXHRoZWlnaHQ6IDA7XFxyXFxuXFx0Ym9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7XFxyXFxuXFx0bWFyZ2luOiA1cHggLTEwcHggNXB4IC02cHg7XFxyXFxuXFx0fVxcclxcblxcclxcbi8qIERlZmF1bHQgaWNvbiBVUkxzICovXFxyXFxuLmxlYWZsZXQtZGVmYXVsdC1pY29uLXBhdGgge1xcclxcblxcdGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvbWFya2VyLWljb24ucG5nXCIpKSArIFwiKTtcXHJcXG5cXHR9XFxyXFxuXFxyXFxuXFxyXFxuLyogYXR0cmlidXRpb24gYW5kIHNjYWxlIGNvbnRyb2xzICovXFxyXFxuXFxyXFxuLmxlYWZsZXQtY29udGFpbmVyIC5sZWFmbGV0LWNvbnRyb2wtYXR0cmlidXRpb24ge1xcclxcblxcdGJhY2tncm91bmQ6ICNmZmY7XFxyXFxuXFx0YmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xcclxcblxcdG1hcmdpbjogMDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1hdHRyaWJ1dGlvbixcXHJcXG4ubGVhZmxldC1jb250cm9sLXNjYWxlLWxpbmUge1xcclxcblxcdHBhZGRpbmc6IDAgNXB4O1xcclxcblxcdGNvbG9yOiAjMzMzO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250cm9sLWF0dHJpYnV0aW9uIGEge1xcclxcblxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1hdHRyaWJ1dGlvbiBhOmhvdmVyIHtcXHJcXG5cXHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udGFpbmVyIC5sZWFmbGV0LWNvbnRyb2wtYXR0cmlidXRpb24sXFxyXFxuLmxlYWZsZXQtY29udGFpbmVyIC5sZWFmbGV0LWNvbnRyb2wtc2NhbGUge1xcclxcblxcdGZvbnQtc2l6ZTogMTFweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtbGVmdCAubGVhZmxldC1jb250cm9sLXNjYWxlIHtcXHJcXG5cXHRtYXJnaW4tbGVmdDogNXB4O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1ib3R0b20gLmxlYWZsZXQtY29udHJvbC1zY2FsZSB7XFxyXFxuXFx0bWFyZ2luLWJvdHRvbTogNXB4O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1jb250cm9sLXNjYWxlLWxpbmUge1xcclxcblxcdGJvcmRlcjogMnB4IHNvbGlkICM3Nzc7XFxyXFxuXFx0Ym9yZGVyLXRvcDogbm9uZTtcXHJcXG5cXHRsaW5lLWhlaWdodDogMS4xO1xcclxcblxcdHBhZGRpbmc6IDJweCA1cHggMXB4O1xcclxcblxcdGZvbnQtc2l6ZTogMTFweDtcXHJcXG5cXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcblxcdG92ZXJmbG93OiBoaWRkZW47XFxyXFxuXFx0LW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcblxcdCAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG5cXHJcXG5cXHRiYWNrZ3JvdW5kOiAjZmZmO1xcclxcblxcdGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udHJvbC1zY2FsZS1saW5lOm5vdCg6Zmlyc3QtY2hpbGQpIHtcXHJcXG5cXHRib3JkZXItdG9wOiAycHggc29saWQgIzc3NztcXHJcXG5cXHRib3JkZXItYm90dG9tOiBub25lO1xcclxcblxcdG1hcmdpbi10b3A6IC0ycHg7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWNvbnRyb2wtc2NhbGUtbGluZTpub3QoOmZpcnN0LWNoaWxkKTpub3QoOmxhc3QtY2hpbGQpIHtcXHJcXG5cXHRib3JkZXItYm90dG9tOiAycHggc29saWQgIzc3NztcXHJcXG5cXHR9XFxyXFxuXFxyXFxuLmxlYWZsZXQtdG91Y2ggLmxlYWZsZXQtY29udHJvbC1hdHRyaWJ1dGlvbixcXHJcXG4ubGVhZmxldC10b3VjaCAubGVhZmxldC1jb250cm9sLWxheWVycyxcXHJcXG4ubGVhZmxldC10b3VjaCAubGVhZmxldC1iYXIge1xcclxcblxcdGJveC1zaGFkb3c6IG5vbmU7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXRvdWNoIC5sZWFmbGV0LWNvbnRyb2wtbGF5ZXJzLFxcclxcbi5sZWFmbGV0LXRvdWNoIC5sZWFmbGV0LWJhciB7XFxyXFxuXFx0Ym9yZGVyOiAycHggc29saWQgcmdiYSgwLDAsMCwwLjIpO1xcclxcblxcdGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XFxyXFxuXFx0fVxcclxcblxcclxcblxcclxcbi8qIHBvcHVwICovXFxyXFxuXFxyXFxuLmxlYWZsZXQtcG9wdXAge1xcclxcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG5cXHR0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuXFx0bWFyZ2luLWJvdHRvbTogMjBweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtcG9wdXAtY29udGVudC13cmFwcGVyIHtcXHJcXG5cXHRwYWRkaW5nOiAxcHg7XFxyXFxuXFx0dGV4dC1hbGlnbjogbGVmdDtcXHJcXG5cXHRib3JkZXItcmFkaXVzOiAxMnB4O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1wb3B1cC1jb250ZW50IHtcXHJcXG5cXHRtYXJnaW46IDEzcHggMTlweDtcXHJcXG5cXHRsaW5lLWhlaWdodDogMS40O1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1wb3B1cC1jb250ZW50IHAge1xcclxcblxcdG1hcmdpbjogMThweCAwO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1wb3B1cC10aXAtY29udGFpbmVyIHtcXHJcXG5cXHR3aWR0aDogNDBweDtcXHJcXG5cXHRoZWlnaHQ6IDIwcHg7XFxyXFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcclxcblxcdGxlZnQ6IDUwJTtcXHJcXG5cXHRtYXJnaW4tbGVmdDogLTIwcHg7XFxyXFxuXFx0b3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG5cXHRwb2ludGVyLWV2ZW50czogbm9uZTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtcG9wdXAtdGlwIHtcXHJcXG5cXHR3aWR0aDogMTdweDtcXHJcXG5cXHRoZWlnaHQ6IDE3cHg7XFxyXFxuXFx0cGFkZGluZzogMXB4O1xcclxcblxcclxcblxcdG1hcmdpbjogLTEwcHggYXV0byAwO1xcclxcblxcclxcblxcdC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xcclxcblxcdCAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xcclxcblxcdCAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xcclxcblxcdCAgICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xcclxcblxcdCAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC1wb3B1cC1jb250ZW50LXdyYXBwZXIsXFxyXFxuLmxlYWZsZXQtcG9wdXAtdGlwIHtcXHJcXG5cXHRiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG5cXHRjb2xvcjogIzMzMztcXHJcXG5cXHRib3gtc2hhZG93OiAwIDNweCAxNHB4IHJnYmEoMCwwLDAsMC40KTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtY29udGFpbmVyIGEubGVhZmxldC1wb3B1cC1jbG9zZS1idXR0b24ge1xcclxcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG5cXHR0b3A6IDA7XFxyXFxuXFx0cmlnaHQ6IDA7XFxyXFxuXFx0cGFkZGluZzogNHB4IDRweCAwIDA7XFxyXFxuXFx0Ym9yZGVyOiBub25lO1xcclxcblxcdHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG5cXHR3aWR0aDogMThweDtcXHJcXG5cXHRoZWlnaHQ6IDE0cHg7XFxyXFxuXFx0Zm9udDogMTZweC8xNHB4IFRhaG9tYSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcXHJcXG5cXHRjb2xvcjogI2MzYzNjMztcXHJcXG5cXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuXFx0Zm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuXFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LWNvbnRhaW5lciBhLmxlYWZsZXQtcG9wdXAtY2xvc2UtYnV0dG9uOmhvdmVyIHtcXHJcXG5cXHRjb2xvcjogIzk5OTtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtcG9wdXAtc2Nyb2xsZWQge1xcclxcblxcdG92ZXJmbG93OiBhdXRvO1xcclxcblxcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xcclxcblxcdGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGRkO1xcclxcblxcdH1cXHJcXG5cXHJcXG4ubGVhZmxldC1vbGRpZSAubGVhZmxldC1wb3B1cC1jb250ZW50LXdyYXBwZXIge1xcclxcblxcdHpvb206IDE7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LW9sZGllIC5sZWFmbGV0LXBvcHVwLXRpcCB7XFxyXFxuXFx0d2lkdGg6IDI0cHg7XFxyXFxuXFx0bWFyZ2luOiAwIGF1dG87XFxyXFxuXFxyXFxuXFx0LW1zLWZpbHRlcjogXFxcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5NYXRyaXgoTTExPTAuNzA3MTA2NzgsIE0xMj0wLjcwNzEwNjc4LCBNMjE9LTAuNzA3MTA2NzgsIE0yMj0wLjcwNzEwNjc4KVxcXCI7XFxyXFxuXFx0ZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuTWF0cml4KE0xMT0wLjcwNzEwNjc4LCBNMTI9MC43MDcxMDY3OCwgTTIxPS0wLjcwNzEwNjc4LCBNMjI9MC43MDcxMDY3OCk7XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LW9sZGllIC5sZWFmbGV0LXBvcHVwLXRpcC1jb250YWluZXIge1xcclxcblxcdG1hcmdpbi10b3A6IC0xcHg7XFxyXFxuXFx0fVxcclxcblxcclxcbi5sZWFmbGV0LW9sZGllIC5sZWFmbGV0LWNvbnRyb2wtem9vbSxcXHJcXG4ubGVhZmxldC1vbGRpZSAubGVhZmxldC1jb250cm9sLWxheWVycyxcXHJcXG4ubGVhZmxldC1vbGRpZSAubGVhZmxldC1wb3B1cC1jb250ZW50LXdyYXBwZXIsXFxyXFxuLmxlYWZsZXQtb2xkaWUgLmxlYWZsZXQtcG9wdXAtdGlwIHtcXHJcXG5cXHRib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xcclxcblxcdH1cXHJcXG5cXHJcXG5cXHJcXG4vKiBkaXYgaWNvbiAqL1xcclxcblxcclxcbi5sZWFmbGV0LWRpdi1pY29uIHtcXHJcXG5cXHRiYWNrZ3JvdW5kOiAjZmZmO1xcclxcblxcdGJvcmRlcjogMXB4IHNvbGlkICM2NjY7XFxyXFxuXFx0fVxcclxcblxcclxcblxcclxcbi8qIFRvb2x0aXAgKi9cXHJcXG4vKiBCYXNlIHN0eWxlcyBmb3IgdGhlIGVsZW1lbnQgdGhhdCBoYXMgYSB0b29sdGlwICovXFxyXFxuLmxlYWZsZXQtdG9vbHRpcCB7XFxyXFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcclxcblxcdHBhZGRpbmc6IDZweDtcXHJcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcclxcblxcdGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XFxyXFxuXFx0Ym9yZGVyLXJhZGl1czogM3B4O1xcclxcblxcdGNvbG9yOiAjMjIyO1xcclxcblxcdHdoaXRlLXNwYWNlOiBub3dyYXA7XFxyXFxuXFx0LXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXHJcXG5cXHQtbW96LXVzZXItc2VsZWN0OiBub25lO1xcclxcblxcdC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXHJcXG5cXHR1c2VyLXNlbGVjdDogbm9uZTtcXHJcXG5cXHRwb2ludGVyLWV2ZW50czogbm9uZTtcXHJcXG5cXHRib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLDAsMCwwLjQpO1xcclxcblxcdH1cXHJcXG4ubGVhZmxldC10b29sdGlwLmxlYWZsZXQtY2xpY2thYmxlIHtcXHJcXG5cXHRjdXJzb3I6IHBvaW50ZXI7XFxyXFxuXFx0cG9pbnRlci1ldmVudHM6IGF1dG87XFxyXFxuXFx0fVxcclxcbi5sZWFmbGV0LXRvb2x0aXAtdG9wOmJlZm9yZSxcXHJcXG4ubGVhZmxldC10b29sdGlwLWJvdHRvbTpiZWZvcmUsXFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1sZWZ0OmJlZm9yZSxcXHJcXG4ubGVhZmxldC10b29sdGlwLXJpZ2h0OmJlZm9yZSB7XFxyXFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcclxcblxcdHBvaW50ZXItZXZlbnRzOiBub25lO1xcclxcblxcdGJvcmRlcjogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xcclxcblxcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcclxcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcclxcblxcdH1cXHJcXG5cXHJcXG4vKiBEaXJlY3Rpb25zICovXFxyXFxuXFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1ib3R0b20ge1xcclxcblxcdG1hcmdpbi10b3A6IDZweDtcXHJcXG59XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC10b3Age1xcclxcblxcdG1hcmdpbi10b3A6IC02cHg7XFxyXFxufVxcclxcbi5sZWFmbGV0LXRvb2x0aXAtYm90dG9tOmJlZm9yZSxcXHJcXG4ubGVhZmxldC10b29sdGlwLXRvcDpiZWZvcmUge1xcclxcblxcdGxlZnQ6IDUwJTtcXHJcXG5cXHRtYXJnaW4tbGVmdDogLTZweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC10b3A6YmVmb3JlIHtcXHJcXG5cXHRib3R0b206IDA7XFxyXFxuXFx0bWFyZ2luLWJvdHRvbTogLTEycHg7XFxyXFxuXFx0Ym9yZGVyLXRvcC1jb2xvcjogI2ZmZjtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1ib3R0b206YmVmb3JlIHtcXHJcXG5cXHR0b3A6IDA7XFxyXFxuXFx0bWFyZ2luLXRvcDogLTEycHg7XFxyXFxuXFx0bWFyZ2luLWxlZnQ6IC02cHg7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZjtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1sZWZ0IHtcXHJcXG5cXHRtYXJnaW4tbGVmdDogLTZweDtcXHJcXG59XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1yaWdodCB7XFxyXFxuXFx0bWFyZ2luLWxlZnQ6IDZweDtcXHJcXG59XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1sZWZ0OmJlZm9yZSxcXHJcXG4ubGVhZmxldC10b29sdGlwLXJpZ2h0OmJlZm9yZSB7XFxyXFxuXFx0dG9wOiA1MCU7XFxyXFxuXFx0bWFyZ2luLXRvcDogLTZweDtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1sZWZ0OmJlZm9yZSB7XFxyXFxuXFx0cmlnaHQ6IDA7XFxyXFxuXFx0bWFyZ2luLXJpZ2h0OiAtMTJweDtcXHJcXG5cXHRib3JkZXItbGVmdC1jb2xvcjogI2ZmZjtcXHJcXG5cXHR9XFxyXFxuLmxlYWZsZXQtdG9vbHRpcC1yaWdodDpiZWZvcmUge1xcclxcblxcdGxlZnQ6IDA7XFxyXFxuXFx0bWFyZ2luLWxlZnQ6IC0xMnB4O1xcclxcblxcdGJvcmRlci1yaWdodC1jb2xvcjogI2ZmZjtcXHJcXG5cXHR9XFxyXFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css\n");

/***/ }),

/***/ "./node_modules/leaflet/dist/images/layers-2x.png":
/*!********************************************************!*\
  !*** ./node_modules/leaflet/dist/images/layers-2x.png ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"content/4f0283c6ce28e888000e978e537a6a56.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2ltYWdlcy9sYXllcnMtMngucG5nP2VhYWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9sZWFmbGV0L2Rpc3QvaW1hZ2VzL2xheWVycy0yeC5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjb250ZW50LzRmMDI4M2M2Y2UyOGU4ODgwMDBlOTc4ZTUzN2E2YTU2LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/leaflet/dist/images/layers-2x.png\n");

/***/ }),

/***/ "./node_modules/leaflet/dist/images/layers.png":
/*!*****************************************************!*\
  !*** ./node_modules/leaflet/dist/images/layers.png ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"content/a6137456ed160d7606981aa57c559898.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2ltYWdlcy9sYXllcnMucG5nPzU1NTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9sZWFmbGV0L2Rpc3QvaW1hZ2VzL2xheWVycy5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjb250ZW50L2E2MTM3NDU2ZWQxNjBkNzYwNjk4MWFhNTdjNTU5ODk4LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/leaflet/dist/images/layers.png\n");

/***/ }),

/***/ "./node_modules/leaflet/dist/images/marker-icon.png":
/*!**********************************************************!*\
  !*** ./node_modules/leaflet/dist/images/marker-icon.png ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"content/2273e3d8ad9264b7daa5bdbf8e6b47f8.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2ltYWdlcy9tYXJrZXItaWNvbi5wbmc/NTBkMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2xlYWZsZXQvZGlzdC9pbWFnZXMvbWFya2VyLWljb24ucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY29udGVudC8yMjczZTNkOGFkOTI2NGI3ZGFhNWJkYmY4ZTZiNDdmOC5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/leaflet/dist/images/marker-icon.png\n");

/***/ }),

/***/ "./node_modules/style-loader/index.js!./node_modules/leaflet/dist/leaflet.css":
/*!***************************************************************************!*\
  !*** ./node_modules/style-loader!./node_modules/leaflet/dist/leaflet.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../to-string-loader/src/to-string.js!../../css-loader!./leaflet.css */ \"./node_modules/to-string-loader/src/to-string.js!./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(true) {\n\tmodule.hot.accept(/*! !../../to-string-loader/src/to-string.js!../../css-loader!./leaflet.css */ \"./node_modules/to-string-loader/src/to-string.js!./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { (function() {\n\t\tvar newContent = __webpack_require__(/*! !../../to-string-loader/src/to-string.js!../../css-loader!./leaflet.css */ \"./node_modules/to-string-loader/src/to-string.js!./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t})(__WEBPACK_OUTDATED_DEPENDENCIES__); });\n\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzPzA3OTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyw0TUFBbUY7O0FBRXpHLDRDQUE0QyxRQUFTOztBQUVyRDtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyx5RkFBc0M7O0FBRTNEOztBQUVBLEdBQUcsSUFBVTtBQUNiLG1CQUFtQiw0TUFBbUYsRUFBRTtBQUN4RyxtQkFBbUIsbUJBQU8sQ0FBQyw0TUFBbUY7O0FBRTlHLG9EQUFvRCxRQUFTOztBQUU3RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBLEVBQUU7O0FBRUYsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvaW5kZXguanMhLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL3RvLXN0cmluZy1sb2FkZXIvc3JjL3RvLXN0cmluZy5qcyEuLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzIS4vbGVhZmxldC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vdG8tc3RyaW5nLWxvYWRlci9zcmMvdG8tc3RyaW5nLmpzIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9sZWFmbGV0LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL3RvLXN0cmluZy1sb2FkZXIvc3JjL3RvLXN0cmluZy5qcyEuLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzIS4vbGVhZmxldC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/index.js!./node_modules/leaflet/dist/leaflet.css\n");

/***/ }),

/***/ "./node_modules/to-string-loader/src/to-string.js!./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/to-string-loader/src/to-string.js!./node_modules/css-loader!./node_modules/leaflet/dist/leaflet.css ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n        var result = __webpack_require__(/*! !../../css-loader!./leaflet.css */ \"./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzP2U5M2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLG1IQUEyQzs7QUFFeEU7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3RvLXN0cmluZy1sb2FkZXIvc3JjL3RvLXN0cmluZy5qcyEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vbm9kZV9tb2R1bGVzL2xlYWZsZXQvZGlzdC9sZWFmbGV0LmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgICB2YXIgcmVzdWx0ID0gcmVxdWlyZShcIiEhLi4vLi4vY3NzLWxvYWRlci9pbmRleC5qcyEuL2xlYWZsZXQuY3NzXCIpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IHJlc3VsdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1vZHVsZS5leHBvcnRzID0gcmVzdWx0LnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/to-string-loader/src/to-string.js!./node_modules/css-loader/index.js!./node_modules/leaflet/dist/leaflet.css\n");

/***/ })

}]);