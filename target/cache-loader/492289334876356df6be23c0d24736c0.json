{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/rooms/rooms.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/rooms/rooms.component.ts","mtime":1593660862952},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar RoomsComponent = /** @class */ (function () {\n    function RoomsComponent(themeService, breakpointService) {\n        var _this = this;\n        this.themeService = themeService;\n        this.breakpointService = breakpointService;\n        this.breakpoints = this.breakpointService.getBreakpointsMap();\n        this.themeSubscription = this.themeService.onMediaQueryChange().subscribe(function (_a) {\n            var oldValue = _a[0], newValue = _a[1];\n            _this.breakpoint = newValue;\n        });\n    }\n    RoomsComponent.prototype.select = function (roomNumber) {\n        if (this.isSelected(roomNumber)) {\n            this.expand();\n        }\n        else {\n            this.collapse();\n        }\n        this.selected = roomNumber;\n    };\n    RoomsComponent.prototype.expand = function () {\n        this.expanded = true;\n    };\n    RoomsComponent.prototype.collapse = function () {\n        this.expanded = false;\n    };\n    RoomsComponent.prototype.isCollapsed = function () {\n        return !this.expanded;\n    };\n    RoomsComponent.prototype.isSelected = function (roomNumber) {\n        return this.selected === roomNumber;\n    };\n    RoomsComponent.prototype.ngOnDestroy = function () {\n        this.themeSubscription.unsubscribe();\n    };\n    var _a, _b;\n    tslib_1.__decorate([\n        core_1.HostBinding('class.expanded'),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], RoomsComponent.prototype, \"expanded\", void 0);\n    RoomsComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-rooms',\n            styleUrls: ['./rooms.component.scss'],\n            template: \"\\n    <nb-card [size]=\\\"breakpoint.width >= breakpoints.sm ? 'large' : 'medium'\\\">\\n      <i (click)=\\\"collapse()\\\" class=\\\"nb-arrow-down collapse\\\" [hidden]=\\\"isCollapsed()\\\"></i>\\n      <ngx-room-selector (select)=\\\"select($event)\\\"></ngx-room-selector>\\n      <ngx-player [collapsed]=\\\"isCollapsed() && breakpoint.width <= breakpoints.md\\\"></ngx-player>\\n    </nb-card>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object, typeof (_b = typeof theme_1.NbMediaBreakpointsService !== \"undefined\" && theme_1.NbMediaBreakpointsService) === \"function\" ? _b : Object])\n    ], RoomsComponent);\n    return RoomsComponent;\n}());\nexports.RoomsComponent = RoomsComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/rooms/rooms.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/rooms/rooms.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkE;AAClE,wCAA8F;AAa9F;IAQI,wBAAoB,YAA4B,EAAU,iBAA4C;QAAtG,iBAKC;QALmB,iBAAY,GAAZ,YAAY,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAA2B;QAClG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;QAC9D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,UAAC,EAAoB;gBAAnB,gBAAQ,EAAE,gBAAQ;YAC1F,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAAM,GAAN,UAAO,UAAU;QACb,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;aAAM;YACH,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,+BAAM,GAAN;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,oCAAW,GAAX;QACI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC1B,CAAC;IAEO,mCAAU,GAAlB,UAAmB,UAAU;QACzB,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC;IACxC,CAAC;IAED,oCAAW,GAAX;QACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;;IA1C8B;QAA9B,kBAAW,CAAC,gBAAgB,CAAC;;oDAA2B;IADhD,cAAc;QAX1B,gBAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE,CAAC,wBAAwB,CAAC;YACrC,QAAQ,EAAE,0XAMX;SACF,CAAC;qEASoC,sBAAc,oBAAd,sBAAc,oDAA6B,iCAAyB,oBAAzB,iCAAyB;OAR7F,cAAc,CA4C1B;IAAD,qBAAC;CAAA,AA5CD,IA4CC;AA5CY,wCAAc","sourcesContent":["import { Component, HostBinding, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbMediaBreakpoint, NbMediaBreakpointsService } from '@nebular/theme';\n\n@Component({\n    selector: 'ngx-rooms',\n    styleUrls: ['./rooms.component.scss'],\n    template: `\n    <nb-card [size]=\"breakpoint.width >= breakpoints.sm ? 'large' : 'medium'\">\n      <i (click)=\"collapse()\" class=\"nb-arrow-down collapse\" [hidden]=\"isCollapsed()\"></i>\n      <ngx-room-selector (select)=\"select($event)\"></ngx-room-selector>\n      <ngx-player [collapsed]=\"isCollapsed() && breakpoint.width <= breakpoints.md\"></ngx-player>\n    </nb-card>\n  `\n})\nexport class RoomsComponent implements OnDestroy {\n    @HostBinding('class.expanded') private expanded: boolean;\n    private selected: number;\n\n    breakpoint: NbMediaBreakpoint;\n    breakpoints: any;\n    themeSubscription: any;\n\n    constructor(private themeService: NbThemeService, private breakpointService: NbMediaBreakpointsService) {\n        this.breakpoints = this.breakpointService.getBreakpointsMap();\n        this.themeSubscription = this.themeService.onMediaQueryChange().subscribe(([oldValue, newValue]) => {\n            this.breakpoint = newValue;\n        });\n    }\n\n    select(roomNumber) {\n        if (this.isSelected(roomNumber)) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n\n        this.selected = roomNumber;\n    }\n\n    expand() {\n        this.expanded = true;\n    }\n\n    collapse() {\n        this.expanded = false;\n    }\n\n    isCollapsed() {\n        return !this.expanded;\n    }\n\n    private isSelected(roomNumber): boolean {\n        return this.selected === roomNumber;\n    }\n\n    ngOnDestroy() {\n        this.themeSubscription.unsubscribe();\n    }\n}\n"]}]}