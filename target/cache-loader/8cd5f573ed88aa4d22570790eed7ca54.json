{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/user-activity.service.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/user-activity.service.ts","mtime":1593660862916},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar periods_service_1 = require(\"./periods.service\");\nvar UserActive = /** @class */ (function () {\n    function UserActive() {\n    }\n    return UserActive;\n}());\nexports.UserActive = UserActive;\nvar UserActivityService = /** @class */ (function () {\n    function UserActivityService(periods) {\n        this.periods = periods;\n        this.getRandom = function (roundTo) { return Math.round(Math.random() * roundTo); };\n        this.data = {};\n        this.data = {\n            week: this.getDataWeek(),\n            month: this.getDataMonth(),\n            year: this.getDataYear()\n        };\n    }\n    UserActivityService.prototype.getDataWeek = function () {\n        var _this = this;\n        return this.periods.getWeeks().map(function (week) {\n            return {\n                date: week,\n                pagesVisitCount: _this.getRandom(1000),\n                deltaUp: _this.getRandom(1) % 2 === 0,\n                newVisits: _this.getRandom(100)\n            };\n        });\n    };\n    UserActivityService.prototype.getDataMonth = function () {\n        var _this = this;\n        var date = new Date();\n        var days = date.getDate();\n        var month = this.periods.getMonths()[date.getMonth()];\n        return Array.from(Array(days)).map(function (_, index) {\n            return {\n                date: index + 1 + \" \" + month,\n                pagesVisitCount: _this.getRandom(1000),\n                deltaUp: _this.getRandom(1) % 2 === 0,\n                newVisits: _this.getRandom(100)\n            };\n        });\n    };\n    UserActivityService.prototype.getDataYear = function () {\n        var _this = this;\n        return this.periods.getYears().map(function (year) {\n            return {\n                date: year,\n                pagesVisitCount: _this.getRandom(1000),\n                deltaUp: _this.getRandom(1) % 2 === 0,\n                newVisits: _this.getRandom(100)\n            };\n        });\n    };\n    UserActivityService.prototype.getUserActivityData = function (period) {\n        return rxjs_1.of(this.data[period]);\n    };\n    var _a;\n    UserActivityService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof periods_service_1.PeriodsService !== \"undefined\" && periods_service_1.PeriodsService) === \"function\" ? _a : Object])\n    ], UserActivityService);\n    return UserActivityService;\n}());\nexports.UserActivityService = UserActivityService;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/user-activity.service.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/user-activity.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6BAAsD;AACtD,qDAAmD;AAEnD;IAAA;IAKA,CAAC;IAAD,iBAAC;AAAD,CAAC,AALD,IAKC;AALY,gCAAU;AAQvB;IAKI,6BAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAJnC,cAAS,GAAG,UAAC,OAAe,IAAK,OAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,EAAnC,CAAmC,CAAC;QAE7E,SAAI,GAAG,EAAE,CAAC;QAGN,IAAI,CAAC,IAAI,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;YACxB,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE;YAC1B,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;SAC3B,CAAC;IACN,CAAC;IAEO,yCAAW,GAAnB;QAAA,iBASC;QARG,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAA,IAAI;YACnC,OAAO;gBACH,IAAI,EAAE,IAAI;gBACV,eAAe,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBACrC,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;gBACpC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC;aACjC,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0CAAY,GAApB;QAAA,iBAaC;QAZG,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAExD,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,KAAK;YACxC,OAAO;gBACH,IAAI,EAAK,KAAK,GAAG,CAAC,SAAI,KAAO;gBAC7B,eAAe,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBACrC,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;gBACpC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC;aACjC,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,yCAAW,GAAnB;QAAA,iBASC;QARG,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAA,IAAI;YACnC,OAAO;gBACH,IAAI,EAAE,IAAI;gBACV,eAAe,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBACrC,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;gBACpC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC;aACjC,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAmB,GAAnB,UAAoB,MAAc;QAC9B,OAAO,SAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3C,CAAC;;IApDQ,mBAAmB;QAD/B,iBAAU,EAAE;qEAMoB,gCAAc,oBAAd,gCAAc;OALlC,mBAAmB,CAqD/B;IAAD,0BAAC;CAAA,AArDD,IAqDC;AArDY,kDAAmB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { PeriodsService } from './periods.service';\n\nexport class UserActive {\n    date: string;\n    pagesVisitCount: number;\n    deltaUp: boolean;\n    newVisits: number;\n}\n\n@Injectable()\nexport class UserActivityService {\n    private getRandom = (roundTo: number) => Math.round(Math.random() * roundTo);\n\n    data = {};\n\n    constructor(private periods: PeriodsService) {\n        this.data = {\n            week: this.getDataWeek(),\n            month: this.getDataMonth(),\n            year: this.getDataYear()\n        };\n    }\n\n    private getDataWeek(): UserActive[] {\n        return this.periods.getWeeks().map(week => {\n            return {\n                date: week,\n                pagesVisitCount: this.getRandom(1000),\n                deltaUp: this.getRandom(1) % 2 === 0,\n                newVisits: this.getRandom(100)\n            };\n        });\n    }\n\n    private getDataMonth(): UserActive[] {\n        const date = new Date();\n        const days = date.getDate();\n        const month = this.periods.getMonths()[date.getMonth()];\n\n        return Array.from(Array(days)).map((_, index) => {\n            return {\n                date: `${index + 1} ${month}`,\n                pagesVisitCount: this.getRandom(1000),\n                deltaUp: this.getRandom(1) % 2 === 0,\n                newVisits: this.getRandom(100)\n            };\n        });\n    }\n\n    private getDataYear(): UserActive[] {\n        return this.periods.getYears().map(year => {\n            return {\n                date: year,\n                pagesVisitCount: this.getRandom(1000),\n                deltaUp: this.getRandom(1) % 2 === 0,\n                newVisits: this.getRandom(100)\n            };\n        });\n    }\n\n    getUserActivityData(period: string): Observable<UserActive[]> {\n        return observableOf(this.data[period]);\n    }\n}\n"]}]}