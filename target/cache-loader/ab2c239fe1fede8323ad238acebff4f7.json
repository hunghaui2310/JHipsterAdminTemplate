{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/front-side/earning-card-front.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/front-side/earning-card-front.component.ts","mtime":1593660862956},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar earning_service_1 = require(\"../../../../@core/data/earning.service\");\nvar EarningCardFrontComponent = /** @class */ (function () {\n    function EarningCardFrontComponent(themeService, earningService) {\n        var _this = this;\n        this.themeService = themeService;\n        this.earningService = earningService;\n        this.alive = true;\n        this.selectedCurrency = 'Bitcoin';\n        this.currencies = ['Bitcoin', 'Tether', 'Ethereum'];\n        this.themeService\n            .getJsTheme()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (theme) {\n            _this.currentTheme = theme.name;\n        });\n    }\n    EarningCardFrontComponent.prototype.ngOnInit = function () {\n        this.getEarningCardData(this.selectedCurrency);\n    };\n    EarningCardFrontComponent.prototype.changeCurrency = function (currency) {\n        if (this.selectedCurrency !== currency) {\n            this.selectedCurrency = currency;\n            this.getEarningCardData(this.selectedCurrency);\n        }\n    };\n    EarningCardFrontComponent.prototype.getEarningCardData = function (currency) {\n        var _this = this;\n        this.earningService\n            .getEarningLiveUpdateCardData(currency)\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (earningLiveUpdateCardData) {\n            _this.earningLiveUpdateCardData = earningLiveUpdateCardData;\n            _this.liveUpdateChartData = earningLiveUpdateCardData.liveChart;\n            _this.startReceivingLiveData(currency);\n        });\n    };\n    EarningCardFrontComponent.prototype.startReceivingLiveData = function (currency) {\n        var _this = this;\n        if (this.intervalSubscription) {\n            this.intervalSubscription.unsubscribe();\n        }\n        this.intervalSubscription = rxjs_1.interval(200)\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }), operators_1.switchMap(function () { return _this.earningService.generateRandomEarningData(currency); }))\n            .subscribe(function (liveUpdateChartData) {\n            _this.liveUpdateChartData = liveUpdateChartData.slice();\n        });\n    };\n    EarningCardFrontComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a, _b;\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], EarningCardFrontComponent.prototype, \"selectedCurrency\", void 0);\n    EarningCardFrontComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-earning-card-front',\n            styleUrls: ['./earning-card-front.component.scss'],\n            templateUrl: './earning-card-front.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object, typeof (_b = typeof earning_service_1.EarningService !== \"undefined\" && earning_service_1.EarningService) === \"function\" ? _b : Object])\n    ], EarningCardFrontComponent);\n    return EarningCardFrontComponent;\n}());\nexports.EarningCardFrontComponent = EarningCardFrontComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/front-side/earning-card-front.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/front-side/earning-card-front.component.ts"],"names":[],"mappings":";;;AAAA,sCAAoE;AACpE,wCAAgD;AAChD,6BAA8C;AAC9C,4CAAsD;AACtD,0EAAyF;AAOzF;IAWI,mCAAoB,YAA4B,EAAU,cAA8B;QAAxF,iBAOC;QAPmB,iBAAY,GAAZ,YAAY,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAVhF,UAAK,GAAG,IAAI,CAAC;QAEZ,qBAAgB,GAAW,SAAS,CAAC;QAG9C,eAAU,GAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAMrD,IAAI,CAAC,YAAY;aACZ,UAAU,EAAE;aACZ,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAA,KAAK;YACZ,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4CAAQ,GAAR;QACI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnD,CAAC;IAED,kDAAc,GAAd,UAAe,QAAQ;QACnB,IAAI,IAAI,CAAC,gBAAgB,KAAK,QAAQ,EAAE;YACpC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YAEjC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAClD;IACL,CAAC;IAEO,sDAAkB,GAA1B,UAA2B,QAAQ;QAAnC,iBAUC;QATG,IAAI,CAAC,cAAc;aACd,4BAA4B,CAAC,QAAQ,CAAC;aACtC,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAA,yBAAyB;YAChC,KAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;YAC3D,KAAI,CAAC,mBAAmB,GAAG,yBAAyB,CAAC,SAAS,CAAC;YAE/D,KAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,0DAAsB,GAAtB,UAAuB,QAAQ;QAA/B,iBAUC;QATG,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SAC3C;QAED,IAAI,CAAC,oBAAoB,GAAG,eAAQ,CAAC,GAAG,CAAC;aACpC,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,EAAE,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,CAAC,EAAvD,CAAuD,CAAC,CAAC;aAC3G,SAAS,CAAC,UAAA,mBAAmB;YAC1B,KAAI,CAAC,mBAAmB,GAAO,mBAAmB,QAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,+CAAW,GAAX;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;;IAvDQ;QAAR,YAAK,EAAE;;uEAAsC;IAHrC,yBAAyB;QALrC,gBAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE,CAAC,qCAAqC,CAAC;YAClD,WAAW,EAAE,qCAAqC;SACrD,CAAC;qEAYoC,sBAAc,oBAAd,sBAAc,oDAA0B,gCAAc,oBAAd,gCAAc;OAX/E,yBAAyB,CA2DrC;IAAD,gCAAC;CAAA,AA3DD,IA2DC;AA3DY,8DAAyB","sourcesContent":["import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { interval, Subscription } from 'rxjs';\nimport { switchMap, takeWhile } from 'rxjs/operators';\nimport { EarningService, LiveUpdateChart } from '../../../../@core/data/earning.service';\n\n@Component({\n    selector: 'ngx-earning-card-front',\n    styleUrls: ['./earning-card-front.component.scss'],\n    templateUrl: './earning-card-front.component.html'\n})\nexport class EarningCardFrontComponent implements OnDestroy, OnInit {\n    private alive = true;\n\n    @Input() selectedCurrency: string = 'Bitcoin';\n\n    intervalSubscription: Subscription;\n    currencies: string[] = ['Bitcoin', 'Tether', 'Ethereum'];\n    currentTheme: string;\n    earningLiveUpdateCardData: LiveUpdateChart;\n    liveUpdateChartData: { value: [string, number] }[];\n\n    constructor(private themeService: NbThemeService, private earningService: EarningService) {\n        this.themeService\n            .getJsTheme()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(theme => {\n                this.currentTheme = theme.name;\n            });\n    }\n\n    ngOnInit() {\n        this.getEarningCardData(this.selectedCurrency);\n    }\n\n    changeCurrency(currency) {\n        if (this.selectedCurrency !== currency) {\n            this.selectedCurrency = currency;\n\n            this.getEarningCardData(this.selectedCurrency);\n        }\n    }\n\n    private getEarningCardData(currency) {\n        this.earningService\n            .getEarningLiveUpdateCardData(currency)\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(earningLiveUpdateCardData => {\n                this.earningLiveUpdateCardData = earningLiveUpdateCardData;\n                this.liveUpdateChartData = earningLiveUpdateCardData.liveChart;\n\n                this.startReceivingLiveData(currency);\n            });\n    }\n\n    startReceivingLiveData(currency) {\n        if (this.intervalSubscription) {\n            this.intervalSubscription.unsubscribe();\n        }\n\n        this.intervalSubscription = interval(200)\n            .pipe(takeWhile(() => this.alive), switchMap(() => this.earningService.generateRandomEarningData(currency)))\n            .subscribe(liveUpdateChartData => {\n                this.liveUpdateChartData = [...liveUpdateChartData];\n            });\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}