{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/traffic/traffic-chart.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/traffic/traffic-chart.component.ts","mtime":1593660862952},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar operators_1 = require(\"rxjs/operators\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar layout_service_1 = require(\"../../../@core/data/layout.service\");\nvar points = [300, 520, 435, 530, 730, 620, 660, 860];\nvar TrafficChartComponent = /** @class */ (function () {\n    function TrafficChartComponent(theme, layoutService) {\n        var _this = this;\n        this.theme = theme;\n        this.layoutService = layoutService;\n        this.alive = true;\n        this.type = 'month';\n        this.types = ['week', 'month', 'year'];\n        this.option = {};\n        this.layoutService\n            .onChangeLayoutSize()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function () { return _this.resizeChart(); });\n    }\n    TrafficChartComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.theme\n            .getJsTheme()\n            .pipe(operators_1.delay(1), operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (config) {\n            var trafficTheme = config.variables.traffic;\n            _this.option = Object.assign({}, {\n                grid: {\n                    left: 0,\n                    top: 0,\n                    right: 0,\n                    bottom: 0\n                },\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: points\n                },\n                yAxis: {\n                    boundaryGap: [0, '5%'],\n                    axisLine: {\n                        show: false\n                    },\n                    axisLabel: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    splitLine: {\n                        show: true,\n                        lineStyle: {\n                            color: trafficTheme.colorBlack,\n                            opacity: 0.06,\n                            width: '1'\n                        }\n                    }\n                },\n                tooltip: {\n                    axisPointer: {\n                        type: 'shadow'\n                    },\n                    textStyle: {\n                        color: trafficTheme.tooltipTextColor,\n                        fontWeight: trafficTheme.tooltipFontWeight,\n                        fontSize: 16\n                    },\n                    position: 'top',\n                    backgroundColor: trafficTheme.tooltipBg,\n                    borderColor: trafficTheme.tooltipBorderColor,\n                    borderWidth: 3,\n                    formatter: '{c0} MB',\n                    extraCssText: trafficTheme.tooltipExtraCss\n                },\n                series: [\n                    {\n                        type: 'line',\n                        symbol: 'circle',\n                        symbolSize: 8,\n                        sampling: 'average',\n                        silent: true,\n                        itemStyle: {\n                            normal: {\n                                color: trafficTheme.shadowLineDarkBg\n                            },\n                            emphasis: {\n                                color: 'rgba(0,0,0,0)',\n                                borderColor: 'rgba(0,0,0,0)',\n                                borderWidth: 0\n                            }\n                        },\n                        lineStyle: {\n                            normal: {\n                                width: 2,\n                                color: trafficTheme.shadowLineDarkBg\n                            }\n                        },\n                        data: points.map(function (p) { return p - 15; })\n                    },\n                    {\n                        type: 'line',\n                        symbol: 'circle',\n                        symbolSize: 6,\n                        sampling: 'average',\n                        itemStyle: {\n                            normal: {\n                                color: trafficTheme.itemColor,\n                                borderColor: trafficTheme.itemBorderColor,\n                                borderWidth: 2\n                            },\n                            emphasis: {\n                                color: 'white',\n                                borderColor: trafficTheme.itemEmphasisBorderColor,\n                                borderWidth: 2\n                            }\n                        },\n                        lineStyle: {\n                            normal: {\n                                width: 2,\n                                color: trafficTheme.lineBg,\n                                shadowColor: trafficTheme.lineBg,\n                                shadowBlur: trafficTheme.lineShadowBlur\n                            }\n                        },\n                        areaStyle: {\n                            normal: {\n                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: trafficTheme.gradFrom\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: trafficTheme.gradTo\n                                    }\n                                ]),\n                                opacity: 1\n                            }\n                        },\n                        data: points\n                    }\n                ]\n            });\n        });\n    };\n    TrafficChartComponent.prototype.onChartInit = function (echarts) {\n        this.echartsIntance = echarts;\n    };\n    TrafficChartComponent.prototype.resizeChart = function () {\n        if (this.echartsIntance) {\n            this.echartsIntance.resize();\n        }\n    };\n    TrafficChartComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a, _b;\n    TrafficChartComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-traffic-chart',\n            styleUrls: ['./traffic.component.scss'],\n            template: \"\\n    <div echarts\\n         [options]=\\\"option\\\"\\n         class=\\\"echart\\\"\\n         (chartInit)=\\\"onChartInit($event)\\\">\\n    </div>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object, typeof (_b = typeof layout_service_1.LayoutService !== \"undefined\" && layout_service_1.LayoutService) === \"function\" ? _b : Object])\n    ], TrafficChartComponent);\n    return TrafficChartComponent;\n}());\nexports.TrafficChartComponent = TrafficChartComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/traffic/traffic-chart.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/dashboard/traffic/traffic-chart.component.ts"],"names":[],"mappings":";;;AAAA,4CAAkD;AAClD,sCAAoE;AACpE,wCAAgD;AAChD,qEAAmE;AAEnE,IAAM,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAaxD;IAQI,+BAAoB,KAAqB,EAAU,aAA4B;QAA/E,iBAKC;QALmB,UAAK,GAAL,KAAK,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAPvE,UAAK,GAAG,IAAI,CAAC;QAErB,SAAI,GAAG,OAAO,CAAC;QACf,UAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAClC,WAAM,GAAQ,EAAE,CAAC;QAIb,IAAI,CAAC,aAAa;aACb,kBAAkB,EAAE;aACpB,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC7C,CAAC;IAED,+CAAe,GAAf;QAAA,iBAgIC;QA/HG,IAAI,CAAC,KAAK;aACL,UAAU,EAAE;aACZ,IAAI,CAAC,iBAAK,CAAC,CAAC,CAAC,EAAE,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aAC3C,SAAS,CAAC,UAAA,MAAM;YACb,IAAM,YAAY,GAAQ,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;YAEnD,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CACvB,EAAE,EACF;gBACI,IAAI,EAAE;oBACF,IAAI,EAAE,CAAC;oBACP,GAAG,EAAE,CAAC;oBACN,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,CAAC;iBACZ;gBACD,KAAK,EAAE;oBACH,IAAI,EAAE,UAAU;oBAChB,WAAW,EAAE,KAAK;oBAClB,IAAI,EAAE,MAAM;iBACf;gBACD,KAAK,EAAE;oBACH,WAAW,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;oBACtB,QAAQ,EAAE;wBACN,IAAI,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACP,IAAI,EAAE,KAAK;qBACd;oBACD,QAAQ,EAAE;wBACN,IAAI,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACP,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE;4BACP,KAAK,EAAE,YAAY,CAAC,UAAU;4BAC9B,OAAO,EAAE,IAAI;4BACb,KAAK,EAAE,GAAG;yBACb;qBACJ;iBACJ;gBACD,OAAO,EAAE;oBACL,WAAW,EAAE;wBACT,IAAI,EAAE,QAAQ;qBACjB;oBACD,SAAS,EAAE;wBACP,KAAK,EAAE,YAAY,CAAC,gBAAgB;wBACpC,UAAU,EAAE,YAAY,CAAC,iBAAiB;wBAC1C,QAAQ,EAAE,EAAE;qBACf;oBACD,QAAQ,EAAE,KAAK;oBACf,eAAe,EAAE,YAAY,CAAC,SAAS;oBACvC,WAAW,EAAE,YAAY,CAAC,kBAAkB;oBAC5C,WAAW,EAAE,CAAC;oBACd,SAAS,EAAE,SAAS;oBACpB,YAAY,EAAE,YAAY,CAAC,eAAe;iBAC7C;gBACD,MAAM,EAAE;oBACJ;wBACI,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,QAAQ;wBAChB,UAAU,EAAE,CAAC;wBACb,QAAQ,EAAE,SAAS;wBACnB,MAAM,EAAE,IAAI;wBACZ,SAAS,EAAE;4BACP,MAAM,EAAE;gCACJ,KAAK,EAAE,YAAY,CAAC,gBAAgB;6BACvC;4BACD,QAAQ,EAAE;gCACN,KAAK,EAAE,eAAe;gCACtB,WAAW,EAAE,eAAe;gCAC5B,WAAW,EAAE,CAAC;6BACjB;yBACJ;wBACD,SAAS,EAAE;4BACP,MAAM,EAAE;gCACJ,KAAK,EAAE,CAAC;gCACR,KAAK,EAAE,YAAY,CAAC,gBAAgB;6BACvC;yBACJ;wBACD,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,EAAE,EAAN,CAAM,CAAC;qBAChC;oBACD;wBACI,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,QAAQ;wBAChB,UAAU,EAAE,CAAC;wBACb,QAAQ,EAAE,SAAS;wBACnB,SAAS,EAAE;4BACP,MAAM,EAAE;gCACJ,KAAK,EAAE,YAAY,CAAC,SAAS;gCAC7B,WAAW,EAAE,YAAY,CAAC,eAAe;gCACzC,WAAW,EAAE,CAAC;6BACjB;4BACD,QAAQ,EAAE;gCACN,KAAK,EAAE,OAAO;gCACd,WAAW,EAAE,YAAY,CAAC,uBAAuB;gCACjD,WAAW,EAAE,CAAC;6BACjB;yBACJ;wBACD,SAAS,EAAE;4BACP,MAAM,EAAE;gCACJ,KAAK,EAAE,CAAC;gCACR,KAAK,EAAE,YAAY,CAAC,MAAM;gCAC1B,WAAW,EAAE,YAAY,CAAC,MAAM;gCAChC,UAAU,EAAE,YAAY,CAAC,cAAc;6BAC1C;yBACJ;wBACD,SAAS,EAAE;4BACP,MAAM,EAAE;gCACJ,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oCAClD;wCACI,MAAM,EAAE,CAAC;wCACT,KAAK,EAAE,YAAY,CAAC,QAAQ;qCAC/B;oCACD;wCACI,MAAM,EAAE,CAAC;wCACT,KAAK,EAAE,YAAY,CAAC,MAAM;qCAC7B;iCACJ,CAAC;gCACF,OAAO,EAAE,CAAC;6BACb;yBACJ;wBACD,IAAI,EAAE,MAAM;qBACf;iBACJ;aACJ,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACX,CAAC;IAED,2CAAW,GAAX,UAAY,OAAO;QACf,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;IAClC,CAAC;IAED,2CAAW,GAAX;QACI,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;SAChC;IACL,CAAC;IAED,2CAAW,GAAX;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;;IA7JQ,qBAAqB;QAXjC,gBAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,CAAC,0BAA0B,CAAC;YACvC,QAAQ,EAAE,6IAMX;SACF,CAAC;qEAS6B,sBAAc,oBAAd,sBAAc,oDAAyB,8BAAa,oBAAb,8BAAa;OARtE,qBAAqB,CA8JjC;IAAD,4BAAC;CAAA,AA9JD,IA8JC;AA9JY,sDAAqB","sourcesContent":["import { delay, takeWhile } from 'rxjs/operators';\nimport { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { LayoutService } from '../../../@core/data/layout.service';\n\nconst points = [300, 520, 435, 530, 730, 620, 660, 860];\n\n@Component({\n    selector: 'ngx-traffic-chart',\n    styleUrls: ['./traffic.component.scss'],\n    template: `\n    <div echarts\n         [options]=\"option\"\n         class=\"echart\"\n         (chartInit)=\"onChartInit($event)\">\n    </div>\n  `\n})\nexport class TrafficChartComponent implements AfterViewInit, OnDestroy {\n    private alive = true;\n\n    type = 'month';\n    types = ['week', 'month', 'year'];\n    option: any = {};\n    echartsIntance: any;\n\n    constructor(private theme: NbThemeService, private layoutService: LayoutService) {\n        this.layoutService\n            .onChangeLayoutSize()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(() => this.resizeChart());\n    }\n\n    ngAfterViewInit() {\n        this.theme\n            .getJsTheme()\n            .pipe(delay(1), takeWhile(() => this.alive))\n            .subscribe(config => {\n                const trafficTheme: any = config.variables.traffic;\n\n                this.option = Object.assign(\n                    {},\n                    {\n                        grid: {\n                            left: 0,\n                            top: 0,\n                            right: 0,\n                            bottom: 0\n                        },\n                        xAxis: {\n                            type: 'category',\n                            boundaryGap: false,\n                            data: points\n                        },\n                        yAxis: {\n                            boundaryGap: [0, '5%'],\n                            axisLine: {\n                                show: false\n                            },\n                            axisLabel: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            },\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: trafficTheme.colorBlack,\n                                    opacity: 0.06,\n                                    width: '1'\n                                }\n                            }\n                        },\n                        tooltip: {\n                            axisPointer: {\n                                type: 'shadow'\n                            },\n                            textStyle: {\n                                color: trafficTheme.tooltipTextColor,\n                                fontWeight: trafficTheme.tooltipFontWeight,\n                                fontSize: 16\n                            },\n                            position: 'top',\n                            backgroundColor: trafficTheme.tooltipBg,\n                            borderColor: trafficTheme.tooltipBorderColor,\n                            borderWidth: 3,\n                            formatter: '{c0} MB',\n                            extraCssText: trafficTheme.tooltipExtraCss\n                        },\n                        series: [\n                            {\n                                type: 'line',\n                                symbol: 'circle',\n                                symbolSize: 8,\n                                sampling: 'average',\n                                silent: true,\n                                itemStyle: {\n                                    normal: {\n                                        color: trafficTheme.shadowLineDarkBg\n                                    },\n                                    emphasis: {\n                                        color: 'rgba(0,0,0,0)',\n                                        borderColor: 'rgba(0,0,0,0)',\n                                        borderWidth: 0\n                                    }\n                                },\n                                lineStyle: {\n                                    normal: {\n                                        width: 2,\n                                        color: trafficTheme.shadowLineDarkBg\n                                    }\n                                },\n                                data: points.map(p => p - 15)\n                            },\n                            {\n                                type: 'line',\n                                symbol: 'circle',\n                                symbolSize: 6,\n                                sampling: 'average',\n                                itemStyle: {\n                                    normal: {\n                                        color: trafficTheme.itemColor,\n                                        borderColor: trafficTheme.itemBorderColor,\n                                        borderWidth: 2\n                                    },\n                                    emphasis: {\n                                        color: 'white',\n                                        borderColor: trafficTheme.itemEmphasisBorderColor,\n                                        borderWidth: 2\n                                    }\n                                },\n                                lineStyle: {\n                                    normal: {\n                                        width: 2,\n                                        color: trafficTheme.lineBg,\n                                        shadowColor: trafficTheme.lineBg,\n                                        shadowBlur: trafficTheme.lineShadowBlur\n                                    }\n                                },\n                                areaStyle: {\n                                    normal: {\n                                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                            {\n                                                offset: 0,\n                                                color: trafficTheme.gradFrom\n                                            },\n                                            {\n                                                offset: 1,\n                                                color: trafficTheme.gradTo\n                                            }\n                                        ]),\n                                        opacity: 1\n                                    }\n                                },\n                                data: points\n                            }\n                        ]\n                    }\n                );\n            });\n    }\n\n    onChartInit(echarts) {\n        this.echartsIntance = echarts;\n    }\n\n    resizeChart() {\n        if (this.echartsIntance) {\n            this.echartsIntance.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}