{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/chart-panel-header/chart-panel-header.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/chart-panel-header/chart-panel-header.component.ts","mtime":1593660862952},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar operators_1 = require(\"rxjs/operators\");\nvar ChartPanelHeaderComponent = /** @class */ (function () {\n    function ChartPanelHeaderComponent(themeService, breakpointService) {\n        var _this = this;\n        this.themeService = themeService;\n        this.breakpointService = breakpointService;\n        this.alive = true;\n        this.periodChange = new core_1.EventEmitter();\n        this.type = 'week';\n        this.types = ['week', 'month', 'year'];\n        this.breakpoint = { name: '', width: 0 };\n        this.themeService\n            .getJsTheme()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (theme) {\n            var orderProfitLegend = theme.variables.orderProfitLegend;\n            _this.currentTheme = theme.name;\n            _this.setLegendItems(orderProfitLegend);\n        });\n        this.breakpoints = this.breakpointService.getBreakpointsMap();\n        this.themeService\n            .onMediaQueryChange()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (_a) {\n            var oldValue = _a[0], newValue = _a[1];\n            _this.breakpoint = newValue;\n        });\n    }\n    ChartPanelHeaderComponent.prototype.setLegendItems = function (orderProfitLegend) {\n        this.chartLegend = [\n            {\n                iconColor: orderProfitLegend.firstItem,\n                title: 'Payment'\n            },\n            {\n                iconColor: orderProfitLegend.secondItem,\n                title: 'Canceled'\n            },\n            {\n                iconColor: orderProfitLegend.thirdItem,\n                title: 'All orders'\n            }\n        ];\n    };\n    ChartPanelHeaderComponent.prototype.changePeriod = function (period) {\n        this.type = period;\n        this.periodChange.emit(period);\n    };\n    ChartPanelHeaderComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a, _b;\n    tslib_1.__decorate([\n        core_1.Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], ChartPanelHeaderComponent.prototype, \"periodChange\", void 0);\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], ChartPanelHeaderComponent.prototype, \"type\", void 0);\n    ChartPanelHeaderComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-chart-panel-header',\n            styleUrls: ['./chart-panel-header.component.scss'],\n            templateUrl: './chart-panel-header.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object, typeof (_b = typeof theme_1.NbMediaBreakpointsService !== \"undefined\" && theme_1.NbMediaBreakpointsService) === \"function\" ? _b : Object])\n    ], ChartPanelHeaderComponent);\n    return ChartPanelHeaderComponent;\n}());\nexports.ChartPanelHeaderComponent = ChartPanelHeaderComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/chart-panel-header/chart-panel-header.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/chart-panel-header/chart-panel-header.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkF;AAClF,wCAA8F;AAC9F,4CAA2C;AAO3C;IAaI,mCAAoB,YAA4B,EAAU,iBAA4C;QAAtG,iBAkBC;QAlBmB,iBAAY,GAAZ,YAAY,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAA2B;QAZ9F,UAAK,GAAG,IAAI,CAAC;QAEX,iBAAY,GAAG,IAAI,mBAAY,EAAU,CAAC;QAE3C,SAAI,GAAW,MAAM,CAAC;QAE/B,UAAK,GAAa,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAE5C,eAAU,GAAsB,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAKnD,IAAI,CAAC,YAAY;aACZ,UAAU,EAAE;aACZ,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAA,KAAK;YACZ,IAAM,iBAAiB,GAAG,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC;YAE5D,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC;YAC/B,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;QAC9D,IAAI,CAAC,YAAY;aACZ,kBAAkB,EAAE;aACpB,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAC,EAAoB;gBAAnB,gBAAQ,EAAE,gBAAQ;YAC3B,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,kDAAc,GAAd,UAAe,iBAAiB;QAC5B,IAAI,CAAC,WAAW,GAAG;YACf;gBACI,SAAS,EAAE,iBAAiB,CAAC,SAAS;gBACtC,KAAK,EAAE,SAAS;aACnB;YACD;gBACI,SAAS,EAAE,iBAAiB,CAAC,UAAU;gBACvC,KAAK,EAAE,UAAU;aACpB;YACD;gBACI,SAAS,EAAE,iBAAiB,CAAC,SAAS;gBACtC,KAAK,EAAE,YAAY;aACtB;SACJ,CAAC;IACN,CAAC;IAED,gDAAY,GAAZ,UAAa,MAAc;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,+CAAW,GAAX;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;;IAtDS;QAAT,aAAM,EAAE;;mEAA2C;IAE3C;QAAR,YAAK,EAAE;;2DAAuB;IALtB,yBAAyB;QALrC,gBAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE,CAAC,qCAAqC,CAAC;YAClD,WAAW,EAAE,qCAAqC;SACrD,CAAC;qEAcoC,sBAAc,oBAAd,sBAAc,oDAA6B,iCAAyB,oBAAzB,iCAAyB;OAb7F,yBAAyB,CA0DrC;IAAD,gCAAC;CAAA,AA1DD,IA0DC;AA1DY,8DAAyB","sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { NbMediaBreakpoint, NbMediaBreakpointsService, NbThemeService } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'ngx-chart-panel-header',\n    styleUrls: ['./chart-panel-header.component.scss'],\n    templateUrl: './chart-panel-header.component.html'\n})\nexport class ChartPanelHeaderComponent implements OnDestroy {\n    private alive = true;\n\n    @Output() periodChange = new EventEmitter<string>();\n\n    @Input() type: string = 'week';\n\n    types: string[] = ['week', 'month', 'year'];\n    chartLegend: { iconColor: string; title: string }[];\n    breakpoint: NbMediaBreakpoint = { name: '', width: 0 };\n    breakpoints: any;\n    currentTheme: string;\n\n    constructor(private themeService: NbThemeService, private breakpointService: NbMediaBreakpointsService) {\n        this.themeService\n            .getJsTheme()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(theme => {\n                const orderProfitLegend = theme.variables.orderProfitLegend;\n\n                this.currentTheme = theme.name;\n                this.setLegendItems(orderProfitLegend);\n            });\n\n        this.breakpoints = this.breakpointService.getBreakpointsMap();\n        this.themeService\n            .onMediaQueryChange()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(([oldValue, newValue]) => {\n                this.breakpoint = newValue;\n            });\n    }\n\n    setLegendItems(orderProfitLegend) {\n        this.chartLegend = [\n            {\n                iconColor: orderProfitLegend.firstItem,\n                title: 'Payment'\n            },\n            {\n                iconColor: orderProfitLegend.secondItem,\n                title: 'Canceled'\n            },\n            {\n                iconColor: orderProfitLegend.thirdItem,\n                title: 'All orders'\n            }\n        ];\n    }\n\n    changePeriod(period: string): void {\n        this.type = period;\n        this.periodChange.emit(period);\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}