{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/extra-components/chat/chat.service.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/extra-components/chat/chat.service.ts","mtime":1593660862960},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar messages_1 = require(\"./messages\");\nvar bot_replies_1 = require(\"./bot-replies\");\nvar ChatService = /** @class */ (function () {\n    function ChatService() {\n    }\n    ChatService.prototype.loadMessages = function () {\n        return messages_1.messages;\n    };\n    ChatService.prototype.loadBotReplies = function () {\n        return bot_replies_1.botReplies;\n    };\n    ChatService.prototype.reply = function (message) {\n        var botReply = this.loadBotReplies().find(function (reply) { return message.search(reply.regExp) !== -1; });\n        if (botReply.reply.type === 'quote') {\n            botReply.reply.quote = message;\n        }\n        if (botReply.type === 'gif') {\n            botReply.reply.files[0].url = bot_replies_1.gifsLinks[Math.floor(Math.random() * bot_replies_1.gifsLinks.length)];\n        }\n        if (botReply.type === 'pic') {\n            botReply.reply.files[0].url = bot_replies_1.imageLinks[Math.floor(Math.random() * bot_replies_1.imageLinks.length)];\n        }\n        if (botReply.type === 'group') {\n            botReply.reply.files[1].url = bot_replies_1.gifsLinks[Math.floor(Math.random() * bot_replies_1.gifsLinks.length)];\n            botReply.reply.files[2].url = bot_replies_1.imageLinks[Math.floor(Math.random() * bot_replies_1.imageLinks.length)];\n        }\n        botReply.reply.text = botReply.answerArray[Math.floor(Math.random() * botReply.answerArray.length)];\n        return tslib_1.__assign({}, botReply.reply);\n    };\n    ChatService = tslib_1.__decorate([\n        core_1.Injectable()\n    ], ChatService);\n    return ChatService;\n}());\nexports.ChatService = ChatService;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/extra-components/chat/chat.service.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/extra-components/chat/chat.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAE3C,uCAAsC;AACtC,6CAAkE;AAGlE;IAAA;IAgCA,CAAC;IA/BG,kCAAY,GAAZ;QACI,OAAO,mBAAQ,CAAC;IACpB,CAAC;IAED,oCAAc,GAAd;QACI,OAAO,wBAAU,CAAC;IACtB,CAAC;IAED,2BAAK,GAAL,UAAM,OAAe;QACjB,IAAM,QAAQ,GAAQ,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,KAAU,IAAK,OAAA,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;QAEtG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;YACjC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;SAClC;QAED,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;YACzB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,uBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,uBAAS,CAAC,MAAM,CAAC,CAAC,CAAC;SACzF;QAED,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;YACzB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,wBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,wBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;SAC3F;QAED,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;YAC3B,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,uBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,uBAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YACtF,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,wBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,wBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;SAC3F;QAED,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;QACpG,4BAAY,QAAQ,CAAC,KAAK,EAAG;IACjC,CAAC;IA/BQ,WAAW;QADvB,iBAAU,EAAE;OACA,WAAW,CAgCvB;IAAD,kBAAC;CAAA,AAhCD,IAgCC;AAhCY,kCAAW","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { messages } from './messages';\nimport { botReplies, gifsLinks, imageLinks } from './bot-replies';\n\n@Injectable()\nexport class ChatService {\n    loadMessages() {\n        return messages;\n    }\n\n    loadBotReplies() {\n        return botReplies;\n    }\n\n    reply(message: string) {\n        const botReply: any = this.loadBotReplies().find((reply: any) => message.search(reply.regExp) !== -1);\n\n        if (botReply.reply.type === 'quote') {\n            botReply.reply.quote = message;\n        }\n\n        if (botReply.type === 'gif') {\n            botReply.reply.files[0].url = gifsLinks[Math.floor(Math.random() * gifsLinks.length)];\n        }\n\n        if (botReply.type === 'pic') {\n            botReply.reply.files[0].url = imageLinks[Math.floor(Math.random() * imageLinks.length)];\n        }\n\n        if (botReply.type === 'group') {\n            botReply.reply.files[1].url = gifsLinks[Math.floor(Math.random() * gifsLinks.length)];\n            botReply.reply.files[2].url = imageLinks[Math.floor(Math.random() * imageLinks.length)];\n        }\n\n        botReply.reply.text = botReply.answerArray[Math.floor(Math.random() * botReply.answerArray.length)];\n        return { ...botReply.reply };\n    }\n}\n"]}]}