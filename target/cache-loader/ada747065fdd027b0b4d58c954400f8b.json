{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/traffic-bar.service.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/traffic-bar.service.ts","mtime":1593660862916},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar periods_service_1 = require(\"./periods.service\");\nvar TrafficBar = /** @class */ (function () {\n    function TrafficBar() {\n    }\n    return TrafficBar;\n}());\nexports.TrafficBar = TrafficBar;\nvar TrafficBarService = /** @class */ (function () {\n    function TrafficBarService(period) {\n        this.period = period;\n        this.data = {};\n        this.data = {\n            week: this.getDataForWeekPeriod(),\n            month: this.getDataForMonthPeriod(),\n            year: this.getDataForYearPeriod()\n        };\n    }\n    TrafficBarService.prototype.getDataForWeekPeriod = function () {\n        return {\n            data: [10, 15, 19, 7, 20, 13, 15],\n            labels: this.period.getWeeks(),\n            formatter: '{c0} MB'\n        };\n    };\n    TrafficBarService.prototype.getDataForMonthPeriod = function () {\n        return {\n            data: [0.5, 0.3, 0.8, 0.2, 0.3, 0.7, 0.8, 1, 0.7, 0.8, 0.6, 0.7],\n            labels: this.period.getMonths(),\n            formatter: '{c0} GB'\n        };\n    };\n    TrafficBarService.prototype.getDataForYearPeriod = function () {\n        return {\n            data: [10, 15, 19, 7, 20, 13, 15, 19, 11],\n            labels: this.period.getYears(),\n            formatter: '{c0} GB'\n        };\n    };\n    TrafficBarService.prototype.getTrafficBarData = function (period) {\n        return rxjs_1.of(this.data[period]);\n    };\n    var _a;\n    TrafficBarService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof periods_service_1.PeriodsService !== \"undefined\" && periods_service_1.PeriodsService) === \"function\" ? _a : Object])\n    ], TrafficBarService);\n    return TrafficBarService;\n}());\nexports.TrafficBarService = TrafficBarService;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/traffic-bar.service.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/traffic-bar.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6BAAsD;AACtD,qDAAmD;AAEnD;IAAA;IAIA,CAAC;IAAD,iBAAC;AAAD,CAAC,AAJD,IAIC;AAJY,gCAAU;AAOvB;IAGI,2BAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QAFlC,SAAI,GAAG,EAAE,CAAC;QAGd,IAAI,CAAC,IAAI,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,oBAAoB,EAAE;YACjC,KAAK,EAAE,IAAI,CAAC,qBAAqB,EAAE;YACnC,IAAI,EAAE,IAAI,CAAC,oBAAoB,EAAE;SACpC,CAAC;IACN,CAAC;IAED,gDAAoB,GAApB;QACI,OAAO;YACH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACjC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9B,SAAS,EAAE,SAAS;SACvB,CAAC;IACN,CAAC;IAED,iDAAqB,GAArB;QACI,OAAO;YACH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAChE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YAC/B,SAAS,EAAE,SAAS;SACvB,CAAC;IACN,CAAC;IAED,gDAAoB,GAApB;QACI,OAAO;YACH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACzC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9B,SAAS,EAAE,SAAS;SACvB,CAAC;IACN,CAAC;IAED,6CAAiB,GAAjB,UAAkB,MAAc;QAC5B,OAAO,SAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3C,CAAC;;IArCQ,iBAAiB;QAD7B,iBAAU,EAAE;qEAImB,gCAAc,oBAAd,gCAAc;OAHjC,iBAAiB,CAsC7B;IAAD,wBAAC;CAAA,AAtCD,IAsCC;AAtCY,8CAAiB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { PeriodsService } from './periods.service';\n\nexport class TrafficBar {\n    data: number[];\n    labels: string[];\n    formatter: string;\n}\n\n@Injectable()\nexport class TrafficBarService {\n    private data = {};\n\n    constructor(private period: PeriodsService) {\n        this.data = {\n            week: this.getDataForWeekPeriod(),\n            month: this.getDataForMonthPeriod(),\n            year: this.getDataForYearPeriod()\n        };\n    }\n\n    getDataForWeekPeriod(): TrafficBar {\n        return {\n            data: [10, 15, 19, 7, 20, 13, 15],\n            labels: this.period.getWeeks(),\n            formatter: '{c0} MB'\n        };\n    }\n\n    getDataForMonthPeriod(): TrafficBar {\n        return {\n            data: [0.5, 0.3, 0.8, 0.2, 0.3, 0.7, 0.8, 1, 0.7, 0.8, 0.6, 0.7],\n            labels: this.period.getMonths(),\n            formatter: '{c0} GB'\n        };\n    }\n\n    getDataForYearPeriod(): TrafficBar {\n        return {\n            data: [10, 15, 19, 7, 20, 13, 15, 19, 11],\n            labels: this.period.getYears(),\n            formatter: '{c0} GB'\n        };\n    }\n\n    getTrafficBarData(period: string): Observable<TrafficBar> {\n        return observableOf(this.data[period]);\n    }\n}\n"]}]}