{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/earning.service.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/earning.service.ts","mtime":1593660862916},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar LiveUpdateChart = /** @class */ (function () {\n    function LiveUpdateChart() {\n    }\n    return LiveUpdateChart;\n}());\nexports.LiveUpdateChart = LiveUpdateChart;\nvar PieChart = /** @class */ (function () {\n    function PieChart() {\n    }\n    return PieChart;\n}());\nexports.PieChart = PieChart;\nvar EarningService = /** @class */ (function () {\n    function EarningService() {\n        this.currentDate = new Date();\n        this.currentValue = Math.random() * 1000;\n        this.ONE_DAY = 24 * 3600 * 1000;\n        this.pieChartData = [\n            {\n                value: 50,\n                name: 'Bitcoin'\n            },\n            {\n                value: 25,\n                name: 'Tether'\n            },\n            {\n                value: 25,\n                name: 'Ethereum'\n            }\n        ];\n        this.liveUpdateChartData = {\n            bitcoin: {\n                liveChart: [],\n                delta: {\n                    up: true,\n                    value: 4\n                },\n                dailyIncome: 45895\n            },\n            tether: {\n                liveChart: [],\n                delta: {\n                    up: false,\n                    value: 9\n                },\n                dailyIncome: 5862\n            },\n            ethereum: {\n                liveChart: [],\n                delta: {\n                    up: false,\n                    value: 21\n                },\n                dailyIncome: 584\n            }\n        };\n    }\n    EarningService.prototype.getDefaultLiveChartData = function (elementsNumber) {\n        var _this = this;\n        this.currentDate = new Date();\n        this.currentValue = Math.random() * 1000;\n        return Array.from(Array(elementsNumber)).map(function (item) { return _this.generateRandomLiveChartData(); });\n    };\n    EarningService.prototype.generateRandomLiveChartData = function () {\n        this.currentDate = new Date(+this.currentDate + this.ONE_DAY);\n        this.currentValue = this.currentValue + Math.random() * 20 - 11;\n        if (this.currentValue < 0) {\n            this.currentValue = Math.random() * 100;\n        }\n        return {\n            value: [\n                [this.currentDate.getFullYear(), this.currentDate.getMonth(), this.currentDate.getDate()].join('/'),\n                Math.round(this.currentValue)\n            ]\n        };\n    };\n    EarningService.prototype.generateRandomEarningData = function (currency) {\n        var data = this.liveUpdateChartData[currency.toLowerCase()];\n        var newValue = this.generateRandomLiveChartData();\n        data.liveChart.shift();\n        data.liveChart.push(newValue);\n        return rxjs_1.of(data.liveChart);\n    };\n    EarningService.prototype.getEarningLiveUpdateCardData = function (currency) {\n        var data = this.liveUpdateChartData[currency.toLowerCase()];\n        data.liveChart = this.getDefaultLiveChartData(150);\n        return rxjs_1.of(data);\n    };\n    EarningService.prototype.getEarningPieChartData = function () {\n        return rxjs_1.of(this.pieChartData);\n    };\n    EarningService = tslib_1.__decorate([\n        core_1.Injectable()\n    ], EarningService);\n    return EarningService;\n}());\nexports.EarningService = EarningService;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/earning.service.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/earning.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\n\nexport class LiveUpdateChart {\n    liveChart: { value: [string, number] }[];\n    delta: {\n        up: boolean;\n        value: number;\n    };\n    dailyIncome: number;\n}\n\nexport class PieChart {\n    value: number;\n    name: string;\n}\n\n@Injectable()\nexport class EarningService {\n    private currentDate: Date = new Date();\n    private currentValue = Math.random() * 1000;\n    private ONE_DAY = 24 * 3600 * 1000;\n\n    private pieChartData = [\n        {\n            value: 50,\n            name: 'Bitcoin'\n        },\n        {\n            value: 25,\n            name: 'Tether'\n        },\n        {\n            value: 25,\n            name: 'Ethereum'\n        }\n    ];\n\n    private liveUpdateChartData = {\n        bitcoin: {\n            liveChart: [],\n            delta: {\n                up: true,\n                value: 4\n            },\n            dailyIncome: 45895\n        },\n        tether: {\n            liveChart: [],\n            delta: {\n                up: false,\n                value: 9\n            },\n            dailyIncome: 5862\n        },\n        ethereum: {\n            liveChart: [],\n            delta: {\n                up: false,\n                value: 21\n            },\n            dailyIncome: 584\n        }\n    };\n\n    getDefaultLiveChartData(elementsNumber: number) {\n        this.currentDate = new Date();\n        this.currentValue = Math.random() * 1000;\n\n        return Array.from(Array(elementsNumber)).map(item => this.generateRandomLiveChartData());\n    }\n\n    generateRandomLiveChartData() {\n        this.currentDate = new Date(+this.currentDate + this.ONE_DAY);\n        this.currentValue = this.currentValue + Math.random() * 20 - 11;\n\n        if (this.currentValue < 0) {\n            this.currentValue = Math.random() * 100;\n        }\n\n        return {\n            value: [\n                [this.currentDate.getFullYear(), this.currentDate.getMonth(), this.currentDate.getDate()].join('/'),\n                Math.round(this.currentValue)\n            ]\n        };\n    }\n\n    generateRandomEarningData(currency) {\n        const data = this.liveUpdateChartData[currency.toLowerCase()];\n        const newValue = this.generateRandomLiveChartData();\n\n        data.liveChart.shift();\n        data.liveChart.push(newValue);\n\n        return observableOf(data.liveChart);\n    }\n\n    getEarningLiveUpdateCardData(currency: string) {\n        const data = this.liveUpdateChartData[currency.toLowerCase()];\n\n        data.liveChart = this.getDefaultLiveChartData(150);\n\n        return observableOf(data);\n    }\n\n    getEarningPieChartData(): Observable<PieChart[]> {\n        return observableOf(this.pieChartData);\n    }\n}\n"]}]}