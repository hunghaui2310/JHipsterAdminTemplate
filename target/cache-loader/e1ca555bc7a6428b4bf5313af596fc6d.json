{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/traffic-reveal-card/back-side/traffic-bar-chart.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/traffic-reveal-card/back-side/traffic-bar-chart.component.ts","mtime":1593660862956},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar operators_1 = require(\"rxjs/operators\");\nvar layout_service_1 = require(\"../../../../@core/data/layout.service\");\nvar TrafficBarChartComponent = /** @class */ (function () {\n    function TrafficBarChartComponent(theme, layoutService) {\n        var _this = this;\n        this.theme = theme;\n        this.layoutService = layoutService;\n        this.alive = true;\n        this.option = {};\n        this.layoutService\n            .onChangeLayoutSize()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function () { return _this.resizeChart(); });\n    }\n    TrafficBarChartComponent.prototype.onChartInit = function (ec) {\n        this.echartsInstance = ec;\n    };\n    TrafficBarChartComponent.prototype.resizeChart = function () {\n        if (this.echartsInstance) {\n            this.echartsInstance.resize();\n        }\n    };\n    TrafficBarChartComponent.prototype.ngOnChanges = function (changes) {\n        if (!changes.data.isFirstChange() && !changes.labels.isFirstChange()) {\n            this.echartsInstance.setOption({\n                series: [\n                    {\n                        data: this.data\n                    }\n                ],\n                xAxis: {\n                    data: this.labels\n                },\n                tooltip: {\n                    formatter: this.formatter\n                }\n            });\n        }\n    };\n    TrafficBarChartComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.theme\n            .getJsTheme()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (config) {\n            var trafficTheme = config.variables.trafficBarEchart;\n            _this.option = Object.assign({}, {\n                grid: {\n                    left: 0,\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    containLabel: true\n                },\n                xAxis: {\n                    type: 'category',\n                    data: _this.labels,\n                    axisLabel: {\n                        color: trafficTheme.axisTextColor,\n                        fontSize: trafficTheme.axisFontSize\n                    },\n                    axisLine: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    }\n                },\n                yAxis: {\n                    show: false,\n                    axisLine: {\n                        show: false\n                    },\n                    axisLabel: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    boundaryGap: [0, '5%']\n                },\n                tooltip: {\n                    axisPointer: {\n                        type: 'shadow'\n                    },\n                    textStyle: {\n                        color: trafficTheme.tooltipTextColor,\n                        fontWeight: trafficTheme.tooltipFontWeight,\n                        fontSize: 16\n                    },\n                    position: 'top',\n                    backgroundColor: trafficTheme.tooltipBg,\n                    borderColor: trafficTheme.tooltipBorderColor,\n                    borderWidth: 3,\n                    formatter: _this.formatter,\n                    extraCssText: trafficTheme.tooltipExtraCss\n                },\n                series: [\n                    {\n                        type: 'bar',\n                        barWidth: '40%',\n                        data: _this.data,\n                        itemStyle: {\n                            normal: {\n                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: trafficTheme.gradientFrom\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: trafficTheme.gradientTo\n                                    }\n                                ]),\n                                opacity: 1,\n                                shadowColor: trafficTheme.gradientFrom,\n                                shadowBlur: trafficTheme.shadowBlur\n                            }\n                        }\n                    }\n                ]\n            });\n        });\n    };\n    TrafficBarChartComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a, _b;\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], TrafficBarChartComponent.prototype, \"data\", void 0);\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], TrafficBarChartComponent.prototype, \"labels\", void 0);\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], TrafficBarChartComponent.prototype, \"formatter\", void 0);\n    TrafficBarChartComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-traffic-bar-chart',\n            styleUrls: ['traffic-back-card.component.scss'],\n            template: \"\\n    <div echarts\\n         [options]=\\\"option\\\"\\n         class=\\\"echart\\\"\\n         (chartInit)=\\\"onChartInit($event)\\\">\\n    </div>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object, typeof (_b = typeof layout_service_1.LayoutService !== \"undefined\" && layout_service_1.LayoutService) === \"function\" ? _b : Object])\n    ], TrafficBarChartComponent);\n    return TrafficBarChartComponent;\n}());\nexports.TrafficBarChartComponent = TrafficBarChartComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/traffic-reveal-card/back-side/traffic-bar-chart.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/traffic-reveal-card/back-side/traffic-bar-chart.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators';\nimport { LayoutService } from '../../../../@core/data/layout.service';\n\ndeclare const echarts: any;\n\n@Component({\n    selector: 'ngx-traffic-bar-chart',\n    styleUrls: ['traffic-back-card.component.scss'],\n    template: `\n    <div echarts\n         [options]=\"option\"\n         class=\"echart\"\n         (chartInit)=\"onChartInit($event)\">\n    </div>\n  `\n})\nexport class TrafficBarChartComponent implements AfterViewInit, OnDestroy, OnChanges {\n    @Input() data: number[];\n    @Input() labels: string[];\n    @Input() formatter: string;\n\n    private alive = true;\n\n    option: any = {};\n    echartsInstance: any;\n\n    constructor(private theme: NbThemeService, private layoutService: LayoutService) {\n        this.layoutService\n            .onChangeLayoutSize()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(() => this.resizeChart());\n    }\n\n    onChartInit(ec) {\n        this.echartsInstance = ec;\n    }\n\n    resizeChart() {\n        if (this.echartsInstance) {\n            this.echartsInstance.resize();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!changes.data.isFirstChange() && !changes.labels.isFirstChange()) {\n            this.echartsInstance.setOption({\n                series: [\n                    {\n                        data: this.data\n                    }\n                ],\n                xAxis: {\n                    data: this.labels\n                },\n                tooltip: {\n                    formatter: this.formatter\n                }\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        this.theme\n            .getJsTheme()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(config => {\n                const trafficTheme: any = config.variables.trafficBarEchart;\n\n                this.option = Object.assign(\n                    {},\n                    {\n                        grid: {\n                            left: 0,\n                            top: 0,\n                            right: 0,\n                            bottom: 0,\n                            containLabel: true\n                        },\n                        xAxis: {\n                            type: 'category',\n                            data: this.labels,\n                            axisLabel: {\n                                color: trafficTheme.axisTextColor,\n                                fontSize: trafficTheme.axisFontSize\n                            },\n                            axisLine: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            }\n                        },\n                        yAxis: {\n                            show: false,\n                            axisLine: {\n                                show: false\n                            },\n                            axisLabel: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            },\n                            boundaryGap: [0, '5%']\n                        },\n                        tooltip: {\n                            axisPointer: {\n                                type: 'shadow'\n                            },\n                            textStyle: {\n                                color: trafficTheme.tooltipTextColor,\n                                fontWeight: trafficTheme.tooltipFontWeight,\n                                fontSize: 16\n                            },\n                            position: 'top',\n                            backgroundColor: trafficTheme.tooltipBg,\n                            borderColor: trafficTheme.tooltipBorderColor,\n                            borderWidth: 3,\n                            formatter: this.formatter,\n                            extraCssText: trafficTheme.tooltipExtraCss\n                        },\n                        series: [\n                            {\n                                type: 'bar',\n                                barWidth: '40%',\n                                data: this.data,\n                                itemStyle: {\n                                    normal: {\n                                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                            {\n                                                offset: 0,\n                                                color: trafficTheme.gradientFrom\n                                            },\n                                            {\n                                                offset: 1,\n                                                color: trafficTheme.gradientTo\n                                            }\n                                        ]),\n                                        opacity: 1,\n                                        shadowColor: trafficTheme.gradientFrom,\n                                        shadowBlur: trafficTheme.shadowBlur\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                );\n            });\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}