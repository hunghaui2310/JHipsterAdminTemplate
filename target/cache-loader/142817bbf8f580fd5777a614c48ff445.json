{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/profit-chart.service.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/profit-chart.service.ts","mtime":1593660862916},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar periods_service_1 = require(\"./periods.service\");\nvar ProfitChart = /** @class */ (function () {\n    function ProfitChart() {\n    }\n    return ProfitChart;\n}());\nexports.ProfitChart = ProfitChart;\nvar ProfitChartService = /** @class */ (function () {\n    function ProfitChartService(period) {\n        this.period = period;\n        this.year = ['2012', '2013', '2014', '2015', '2016', '2017', '2018'];\n        this.data = {};\n        this.data = {\n            week: this.getDataForWeekPeriod(),\n            month: this.getDataForMonthPeriod(),\n            year: this.getDataForYearPeriod()\n        };\n    }\n    ProfitChartService.prototype.getDataForWeekPeriod = function () {\n        var nPoint = this.period.getWeeks().length;\n        return {\n            chartLabel: this.period.getWeeks(),\n            data: [this.getRandomData(nPoint), this.getRandomData(nPoint), this.getRandomData(nPoint)]\n        };\n    };\n    ProfitChartService.prototype.getDataForMonthPeriod = function () {\n        var nPoint = this.period.getMonths().length;\n        return {\n            chartLabel: this.period.getMonths(),\n            data: [this.getRandomData(nPoint), this.getRandomData(nPoint), this.getRandomData(nPoint)]\n        };\n    };\n    ProfitChartService.prototype.getDataForYearPeriod = function () {\n        var nPoint = this.year.length;\n        return {\n            chartLabel: this.year,\n            data: [this.getRandomData(nPoint), this.getRandomData(nPoint), this.getRandomData(nPoint)]\n        };\n    };\n    ProfitChartService.prototype.getRandomData = function (nPoints) {\n        return Array.from(Array(nPoints)).map(function () {\n            return Math.round(Math.random() * 500);\n        });\n    };\n    ProfitChartService.prototype.getProfitChartData = function (period) {\n        return this.data[period];\n    };\n    var _a;\n    ProfitChartService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof periods_service_1.PeriodsService !== \"undefined\" && periods_service_1.PeriodsService) === \"function\" ? _a : Object])\n    ], ProfitChartService);\n    return ProfitChartService;\n}());\nexports.ProfitChartService = ProfitChartService;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/profit-chart.service.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/@core/data/profit-chart.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,qDAAmD;AAEnD;IAAA;IAGA,CAAC;IAAD,kBAAC;AAAD,CAAC,AAHD,IAGC;AAHY,kCAAW;AAMxB;IAKI,4BAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QAJlC,SAAI,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAEhE,SAAI,GAAG,EAAE,CAAC;QAGd,IAAI,CAAC,IAAI,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,oBAAoB,EAAE;YACjC,KAAK,EAAE,IAAI,CAAC,qBAAqB,EAAE;YACnC,IAAI,EAAE,IAAI,CAAC,oBAAoB,EAAE;SACpC,CAAC;IACN,CAAC;IAEO,iDAAoB,GAA5B;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;QAE7C,OAAO;YACH,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAClC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC7F,CAAC;IACN,CAAC;IAEO,kDAAqB,GAA7B;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC;QAE9C,OAAO;YACH,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACnC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC7F,CAAC;IACN,CAAC;IAEO,iDAAoB,GAA5B;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAEhC,OAAO;YACH,UAAU,EAAE,IAAI,CAAC,IAAI;YACrB,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC7F,CAAC;IACN,CAAC;IAEO,0CAAa,GAArB,UAAsB,OAAe;QACjC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;YAClC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAkB,GAAlB,UAAmB,MAAc;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;;IAhDQ,kBAAkB;QAD9B,iBAAU,EAAE;qEAMmB,gCAAc,oBAAd,gCAAc;OALjC,kBAAkB,CAiD9B;IAAD,yBAAC;CAAA,AAjDD,IAiDC;AAjDY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { PeriodsService } from './periods.service';\n\nexport class ProfitChart {\n    chartLabel: string[];\n    data: number[][];\n}\n\n@Injectable()\nexport class ProfitChartService {\n    private year = ['2012', '2013', '2014', '2015', '2016', '2017', '2018'];\n\n    private data = {};\n\n    constructor(private period: PeriodsService) {\n        this.data = {\n            week: this.getDataForWeekPeriod(),\n            month: this.getDataForMonthPeriod(),\n            year: this.getDataForYearPeriod()\n        };\n    }\n\n    private getDataForWeekPeriod(): ProfitChart {\n        const nPoint = this.period.getWeeks().length;\n\n        return {\n            chartLabel: this.period.getWeeks(),\n            data: [this.getRandomData(nPoint), this.getRandomData(nPoint), this.getRandomData(nPoint)]\n        };\n    }\n\n    private getDataForMonthPeriod(): ProfitChart {\n        const nPoint = this.period.getMonths().length;\n\n        return {\n            chartLabel: this.period.getMonths(),\n            data: [this.getRandomData(nPoint), this.getRandomData(nPoint), this.getRandomData(nPoint)]\n        };\n    }\n\n    private getDataForYearPeriod(): ProfitChart {\n        const nPoint = this.year.length;\n\n        return {\n            chartLabel: this.year,\n            data: [this.getRandomData(nPoint), this.getRandomData(nPoint), this.getRandomData(nPoint)]\n        };\n    }\n\n    private getRandomData(nPoints: number): number[] {\n        return Array.from(Array(nPoints)).map(() => {\n            return Math.round(Math.random() * 500);\n        });\n    }\n\n    getProfitChartData(period: string): ProfitChart {\n        return this.data[period];\n    }\n}\n"]}]}