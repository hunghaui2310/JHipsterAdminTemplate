{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/charts/orders-chart.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/charts/orders-chart.component.ts","mtime":1593660862952},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar operators_1 = require(\"rxjs/operators\");\nvar orders_chart_service_1 = require(\"../../../../@core/data/orders-chart.service\");\nvar layout_service_1 = require(\"../../../../@core/data/layout.service\");\nvar OrdersChartComponent = /** @class */ (function () {\n    function OrdersChartComponent(theme, layoutService) {\n        var _this = this;\n        this.theme = theme;\n        this.layoutService = layoutService;\n        this.alive = true;\n        this.layoutService\n            .onChangeLayoutSize()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function () { return _this.resizeChart(); });\n    }\n    OrdersChartComponent.prototype.ngOnChanges = function () {\n        if (this.option) {\n            this.updateOrdersChartOptions(this.ordersChartData);\n        }\n    };\n    OrdersChartComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.theme\n            .getJsTheme()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }), operators_1.delay(1))\n            .subscribe(function (config) {\n            var eTheme = config.variables.orders;\n            _this.setOptions(eTheme);\n            _this.updateOrdersChartOptions(_this.ordersChartData);\n        });\n    };\n    OrdersChartComponent.prototype.setOptions = function (eTheme) {\n        this.option = {\n            grid: {\n                left: 40,\n                top: 20,\n                right: 0,\n                bottom: 40\n            },\n            tooltip: {\n                trigger: 'item',\n                axisPointer: {\n                    type: 'line',\n                    lineStyle: {\n                        color: eTheme.tooltipLineColor,\n                        width: eTheme.tooltipLineWidth\n                    }\n                },\n                textStyle: {\n                    color: eTheme.tooltipTextColor,\n                    fontSize: eTheme.tooltipFontSize,\n                    fontWeight: eTheme.tooltipFontWeight\n                },\n                position: 'top',\n                backgroundColor: eTheme.tooltipBg,\n                borderColor: eTheme.tooltipBorderColor,\n                borderWidth: 3,\n                formatter: function (params) {\n                    return Math.round(parseInt(params.value, 10));\n                },\n                extraCssText: eTheme.tooltipExtraCss\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                offset: 5,\n                data: [],\n                axisTick: {\n                    show: false\n                },\n                axisLabel: {\n                    color: eTheme.axisTextColor,\n                    fontSize: eTheme.axisFontSize\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: eTheme.axisLineColor,\n                        width: '2'\n                    }\n                }\n            },\n            yAxis: {\n                type: 'value',\n                boundaryGap: false,\n                axisLine: {\n                    lineStyle: {\n                        color: eTheme.axisLineColor,\n                        width: '1'\n                    }\n                },\n                axisLabel: {\n                    color: eTheme.axisTextColor,\n                    fontSize: eTheme.axisFontSize\n                },\n                axisTick: {\n                    show: false\n                },\n                splitLine: {\n                    lineStyle: {\n                        color: eTheme.yAxisSplitLine,\n                        width: '1'\n                    }\n                }\n            },\n            series: [this.getFirstLine(eTheme), this.getSecondLine(eTheme), this.getThirdLine(eTheme)]\n        };\n    };\n    OrdersChartComponent.prototype.getFirstLine = function (eTheme) {\n        return {\n            type: 'line',\n            smooth: true,\n            symbolSize: 20,\n            itemStyle: {\n                normal: {\n                    opacity: 0\n                },\n                emphasis: {\n                    opacity: 0\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: 0\n                }\n            },\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.firstAreaGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.firstAreaGradTo\n                        }\n                    ]),\n                    opacity: 1\n                }\n            },\n            data: []\n        };\n    };\n    OrdersChartComponent.prototype.getSecondLine = function (eTheme) {\n        return {\n            type: 'line',\n            smooth: true,\n            symbolSize: 20,\n            itemStyle: {\n                normal: {\n                    opacity: 0\n                },\n                emphasis: {\n                    color: '#ffffff',\n                    borderColor: eTheme.itemBorderColor,\n                    borderWidth: 2,\n                    opacity: 1\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: eTheme.lineWidth,\n                    type: eTheme.lineStyle,\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.secondLineGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.secondLineGradTo\n                        }\n                    ])\n                }\n            },\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.secondAreaGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.secondAreaGradTo\n                        }\n                    ])\n                }\n            },\n            data: []\n        };\n    };\n    OrdersChartComponent.prototype.getThirdLine = function (eTheme) {\n        return {\n            type: 'line',\n            smooth: true,\n            symbolSize: 20,\n            itemStyle: {\n                normal: {\n                    opacity: 0\n                },\n                emphasis: {\n                    color: '#ffffff',\n                    borderColor: eTheme.itemBorderColor,\n                    borderWidth: 2,\n                    opacity: 1\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: eTheme.lineWidth,\n                    type: eTheme.lineStyle,\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.thirdLineGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.thirdLineGradTo\n                        }\n                    ])\n                }\n            },\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.thirdAreaGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.thirdAreaGradTo\n                        }\n                    ])\n                }\n            },\n            data: []\n        };\n    };\n    OrdersChartComponent.prototype.updateOrdersChartOptions = function (ordersChartData) {\n        var options = this.option;\n        var series = this.getNewSeries(options.series, ordersChartData.linesData);\n        var xAxis = this.getNewXAxis(options.xAxis, ordersChartData.chartLabel);\n        this.option = tslib_1.__assign({}, options, { xAxis: xAxis,\n            series: series });\n    };\n    OrdersChartComponent.prototype.getNewSeries = function (series, linesData) {\n        return series.map(function (line, index) {\n            return tslib_1.__assign({}, line, { data: linesData[index] });\n        });\n    };\n    OrdersChartComponent.prototype.getNewXAxis = function (xAxis, chartLabel) {\n        return tslib_1.__assign({}, xAxis, { data: chartLabel });\n    };\n    OrdersChartComponent.prototype.onChartInit = function (echarts) {\n        this.echartsIntance = echarts;\n    };\n    OrdersChartComponent.prototype.resizeChart = function () {\n        var _this = this;\n        if (this.echartsIntance) {\n            // Fix recalculation chart size\n            // TODO: investigate more deeply\n            setTimeout(function () {\n                _this.echartsIntance.resize();\n            }, 0);\n        }\n    };\n    OrdersChartComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a, _b, _c;\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof orders_chart_service_1.OrdersChart !== \"undefined\" && orders_chart_service_1.OrdersChart) === \"function\" ? _a : Object)\n    ], OrdersChartComponent.prototype, \"ordersChartData\", void 0);\n    OrdersChartComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-orders-chart',\n            styleUrls: ['./charts-common.component.scss'],\n            template: \"\\n    <div echarts\\n         [options]=\\\"option\\\"\\n         class=\\\"echart\\\"\\n         (chartInit)=\\\"onChartInit($event)\\\">\\n    </div>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _b : Object, typeof (_c = typeof layout_service_1.LayoutService !== \"undefined\" && layout_service_1.LayoutService) === \"function\" ? _c : Object])\n    ], OrdersChartComponent);\n    return OrdersChartComponent;\n}());\nexports.OrdersChartComponent = OrdersChartComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/charts/orders-chart.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/charts-panel/charts/orders-chart.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, Input, OnChanges, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { delay, takeWhile } from 'rxjs/operators';\n\nimport { OrdersChart } from '../../../../@core/data/orders-chart.service';\nimport { LayoutService } from '../../../../@core/data/layout.service';\n\n@Component({\n    selector: 'ngx-orders-chart',\n    styleUrls: ['./charts-common.component.scss'],\n    template: `\n    <div echarts\n         [options]=\"option\"\n         class=\"echart\"\n         (chartInit)=\"onChartInit($event)\">\n    </div>\n  `\n})\nexport class OrdersChartComponent implements AfterViewInit, OnDestroy, OnChanges {\n    @Input() ordersChartData: OrdersChart;\n\n    private alive = true;\n\n    echartsIntance: any;\n    option: any;\n\n    ngOnChanges(): void {\n        if (this.option) {\n            this.updateOrdersChartOptions(this.ordersChartData);\n        }\n    }\n\n    constructor(private theme: NbThemeService, private layoutService: LayoutService) {\n        this.layoutService\n            .onChangeLayoutSize()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(() => this.resizeChart());\n    }\n\n    ngAfterViewInit(): void {\n        this.theme\n            .getJsTheme()\n            .pipe(takeWhile(() => this.alive), delay(1))\n            .subscribe(config => {\n                const eTheme: any = config.variables.orders;\n\n                this.setOptions(eTheme);\n                this.updateOrdersChartOptions(this.ordersChartData);\n            });\n    }\n\n    setOptions(eTheme) {\n        this.option = {\n            grid: {\n                left: 40,\n                top: 20,\n                right: 0,\n                bottom: 40\n            },\n            tooltip: {\n                trigger: 'item',\n                axisPointer: {\n                    type: 'line',\n                    lineStyle: {\n                        color: eTheme.tooltipLineColor,\n                        width: eTheme.tooltipLineWidth\n                    }\n                },\n                textStyle: {\n                    color: eTheme.tooltipTextColor,\n                    fontSize: eTheme.tooltipFontSize,\n                    fontWeight: eTheme.tooltipFontWeight\n                },\n                position: 'top',\n                backgroundColor: eTheme.tooltipBg,\n                borderColor: eTheme.tooltipBorderColor,\n                borderWidth: 3,\n                formatter: params => {\n                    return Math.round(parseInt(params.value, 10));\n                },\n                extraCssText: eTheme.tooltipExtraCss\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                offset: 5,\n                data: [],\n                axisTick: {\n                    show: false\n                },\n                axisLabel: {\n                    color: eTheme.axisTextColor,\n                    fontSize: eTheme.axisFontSize\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: eTheme.axisLineColor,\n                        width: '2'\n                    }\n                }\n            },\n            yAxis: {\n                type: 'value',\n                boundaryGap: false,\n                axisLine: {\n                    lineStyle: {\n                        color: eTheme.axisLineColor,\n                        width: '1'\n                    }\n                },\n                axisLabel: {\n                    color: eTheme.axisTextColor,\n                    fontSize: eTheme.axisFontSize\n                },\n                axisTick: {\n                    show: false\n                },\n                splitLine: {\n                    lineStyle: {\n                        color: eTheme.yAxisSplitLine,\n                        width: '1'\n                    }\n                }\n            },\n            series: [this.getFirstLine(eTheme), this.getSecondLine(eTheme), this.getThirdLine(eTheme)]\n        };\n    }\n\n    getFirstLine(eTheme) {\n        return {\n            type: 'line',\n            smooth: true,\n            symbolSize: 20,\n            itemStyle: {\n                normal: {\n                    opacity: 0\n                },\n                emphasis: {\n                    opacity: 0\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: 0\n                }\n            },\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.firstAreaGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.firstAreaGradTo\n                        }\n                    ]),\n                    opacity: 1\n                }\n            },\n            data: []\n        };\n    }\n\n    getSecondLine(eTheme) {\n        return {\n            type: 'line',\n            smooth: true,\n            symbolSize: 20,\n            itemStyle: {\n                normal: {\n                    opacity: 0\n                },\n                emphasis: {\n                    color: '#ffffff',\n                    borderColor: eTheme.itemBorderColor,\n                    borderWidth: 2,\n                    opacity: 1\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: eTheme.lineWidth,\n                    type: eTheme.lineStyle,\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.secondLineGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.secondLineGradTo\n                        }\n                    ])\n                }\n            },\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.secondAreaGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.secondAreaGradTo\n                        }\n                    ])\n                }\n            },\n            data: []\n        };\n    }\n\n    getThirdLine(eTheme) {\n        return {\n            type: 'line',\n            smooth: true,\n            symbolSize: 20,\n            itemStyle: {\n                normal: {\n                    opacity: 0\n                },\n                emphasis: {\n                    color: '#ffffff',\n                    borderColor: eTheme.itemBorderColor,\n                    borderWidth: 2,\n                    opacity: 1\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: eTheme.lineWidth,\n                    type: eTheme.lineStyle,\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.thirdLineGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.thirdLineGradTo\n                        }\n                    ])\n                }\n            },\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: eTheme.thirdAreaGradFrom\n                        },\n                        {\n                            offset: 1,\n                            color: eTheme.thirdAreaGradTo\n                        }\n                    ])\n                }\n            },\n            data: []\n        };\n    }\n\n    updateOrdersChartOptions(ordersChartData: OrdersChart) {\n        const options = this.option;\n        const series = this.getNewSeries(options.series, ordersChartData.linesData);\n        const xAxis = this.getNewXAxis(options.xAxis, ordersChartData.chartLabel);\n\n        this.option = {\n            ...options,\n            xAxis,\n            series\n        };\n    }\n\n    getNewSeries(series, linesData: number[][]) {\n        return series.map((line, index) => {\n            return {\n                ...line,\n                data: linesData[index]\n            };\n        });\n    }\n\n    getNewXAxis(xAxis, chartLabel: string[]) {\n        return {\n            ...xAxis,\n            data: chartLabel\n        };\n    }\n\n    onChartInit(echarts) {\n        this.echartsIntance = echarts;\n    }\n\n    resizeChart() {\n        if (this.echartsIntance) {\n            // Fix recalculation chart size\n            // TODO: investigate more deeply\n            setTimeout(() => {\n                this.echartsIntance.resize();\n            }, 0);\n        }\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}