{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/charts/chartjs/chartjs-multiple-xaxis.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/charts/chartjs/chartjs-multiple-xaxis.component.ts","mtime":1593660862948},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar ChartjsMultipleXaxisComponent = /** @class */ (function () {\n    function ChartjsMultipleXaxisComponent(theme) {\n        var _this = this;\n        this.theme = theme;\n        this.themeSubscription = this.theme.getJsTheme().subscribe(function (config) {\n            var colors = config.variables;\n            var chartjs = config.variables.chartjs;\n            _this.data = {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n                datasets: [\n                    {\n                        label: 'dataset - big points',\n                        data: [_this.random(), _this.random(), _this.random(), _this.random(), _this.random(), _this.random()],\n                        borderColor: colors.primary,\n                        backgroundColor: colors.primary,\n                        fill: false,\n                        borderDash: [5, 5],\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    },\n                    {\n                        label: 'dataset - individual point sizes',\n                        data: [_this.random(), _this.random(), _this.random(), _this.random(), _this.random(), _this.random()],\n                        borderColor: colors.dangerLight,\n                        backgroundColor: colors.dangerLight,\n                        fill: false,\n                        borderDash: [5, 5],\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    },\n                    {\n                        label: 'dataset - large pointHoverRadius',\n                        data: [_this.random(), _this.random(), _this.random(), _this.random(), _this.random(), _this.random()],\n                        borderColor: colors.info,\n                        backgroundColor: colors.info,\n                        fill: false,\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    },\n                    {\n                        label: 'dataset - large pointHitRadius',\n                        data: [_this.random(), _this.random(), _this.random(), _this.random(), _this.random(), _this.random()],\n                        borderColor: colors.success,\n                        backgroundColor: colors.success,\n                        fill: false,\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    }\n                ]\n            };\n            _this.options = {\n                responsive: true,\n                maintainAspectRatio: false,\n                legend: {\n                    position: 'bottom',\n                    labels: {\n                        fontColor: chartjs.textColor\n                    }\n                },\n                hover: {\n                    mode: 'index'\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Month'\n                            },\n                            gridLines: {\n                                display: true,\n                                color: chartjs.axisLineColor\n                            },\n                            ticks: {\n                                fontColor: chartjs.textColor\n                            }\n                        }\n                    ],\n                    yAxes: [\n                        {\n                            display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Value'\n                            },\n                            gridLines: {\n                                display: true,\n                                color: chartjs.axisLineColor\n                            },\n                            ticks: {\n                                fontColor: chartjs.textColor\n                            }\n                        }\n                    ]\n                }\n            };\n        });\n    }\n    ChartjsMultipleXaxisComponent.prototype.ngOnDestroy = function () {\n        this.themeSubscription.unsubscribe();\n    };\n    ChartjsMultipleXaxisComponent.prototype.random = function () {\n        return Math.round(Math.random() * 100);\n    };\n    var _a;\n    ChartjsMultipleXaxisComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-chartjs-multiple-xaxis',\n            template: \"\\n    <chart type=\\\"line\\\" [data]=\\\"data\\\" [options]=\\\"options\\\"></chart>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object])\n    ], ChartjsMultipleXaxisComponent);\n    return ChartjsMultipleXaxisComponent;\n}());\nexports.ChartjsMultipleXaxisComponent = ChartjsMultipleXaxisComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/charts/chartjs/chartjs-multiple-xaxis.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/charts/chartjs/chartjs-multiple-xaxis.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n    selector: 'ngx-chartjs-multiple-xaxis',\n    template: `\n    <chart type=\"line\" [data]=\"data\" [options]=\"options\"></chart>\n  `\n})\nexport class ChartjsMultipleXaxisComponent implements OnDestroy {\n    data: {};\n    options: any;\n    themeSubscription: any;\n\n    constructor(private theme: NbThemeService) {\n        this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n            const colors: any = config.variables;\n            const chartjs: any = config.variables.chartjs;\n\n            this.data = {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n                datasets: [\n                    {\n                        label: 'dataset - big points',\n                        data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n                        borderColor: colors.primary,\n                        backgroundColor: colors.primary,\n                        fill: false,\n                        borderDash: [5, 5],\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    },\n                    {\n                        label: 'dataset - individual point sizes',\n                        data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n                        borderColor: colors.dangerLight,\n                        backgroundColor: colors.dangerLight,\n                        fill: false,\n                        borderDash: [5, 5],\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    },\n                    {\n                        label: 'dataset - large pointHoverRadius',\n                        data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n                        borderColor: colors.info,\n                        backgroundColor: colors.info,\n                        fill: false,\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    },\n                    {\n                        label: 'dataset - large pointHitRadius',\n                        data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n                        borderColor: colors.success,\n                        backgroundColor: colors.success,\n                        fill: false,\n                        pointRadius: 8,\n                        pointHoverRadius: 10\n                    }\n                ]\n            };\n\n            this.options = {\n                responsive: true,\n                maintainAspectRatio: false,\n                legend: {\n                    position: 'bottom',\n                    labels: {\n                        fontColor: chartjs.textColor\n                    }\n                },\n                hover: {\n                    mode: 'index'\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Month'\n                            },\n                            gridLines: {\n                                display: true,\n                                color: chartjs.axisLineColor\n                            },\n                            ticks: {\n                                fontColor: chartjs.textColor\n                            }\n                        }\n                    ],\n                    yAxes: [\n                        {\n                            display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Value'\n                            },\n                            gridLines: {\n                                display: true,\n                                color: chartjs.axisLineColor\n                            },\n                            ticks: {\n                                fontColor: chartjs.textColor\n                            }\n                        }\n                    ]\n                }\n            };\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.themeSubscription.unsubscribe();\n    }\n\n    private random() {\n        return Math.round(Math.random() * 100);\n    }\n}\n"]}]}