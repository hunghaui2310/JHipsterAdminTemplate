{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/country-orders/country-orders.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/country-orders/country-orders.component.ts","mtime":1593660862956},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar operators_1 = require(\"rxjs/operators\");\nvar CountryOrdersComponent = /** @class */ (function () {\n    function CountryOrdersComponent(themeService, breakpointService) {\n        var _this = this;\n        this.themeService = themeService;\n        this.breakpointService = breakpointService;\n        this.alive = true;\n        this.countryName = '';\n        this.countryData = [];\n        this.countriesCategories = ['Sofas', 'Furniture', 'Lighting', 'Tables', 'Textiles'];\n        this.breakpoint = { name: '', width: 0 };\n        this.breakpoints = this.breakpointService.getBreakpointsMap();\n        this.themeService\n            .onMediaQueryChange()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (_a) {\n            var oldValue = _a[0], newValue = _a[1];\n            _this.breakpoint = newValue;\n        });\n    }\n    CountryOrdersComponent.prototype.getRandomData = function (nPoints) {\n        return Array.from(Array(nPoints)).map(function () {\n            return Math.round(Math.random() * 20);\n        });\n    };\n    CountryOrdersComponent.prototype.selectCountryById = function (countryName) {\n        var nPoint = this.countriesCategories.length;\n        this.countryName = countryName;\n        this.countryData = this.getRandomData(nPoint);\n    };\n    CountryOrdersComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a, _b;\n    CountryOrdersComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-country-orders',\n            styleUrls: ['./country-orders.component.scss'],\n            template: \"\\n    <nb-card [size]=\\\"breakpoint.width >= breakpoints.md ? 'medium' : 'xxlarge'\\\">\\n      <nb-card-header>Country Orders Statistics</nb-card-header>\\n      <nb-card-body>\\n        <ngx-country-orders-map (select)=\\\"selectCountryById($event)\\\"\\n                                countryId=\\\"USA\\\">\\n        </ngx-country-orders-map>\\n        <ngx-country-orders-chart [countryName]=\\\"countryName\\\"\\n                                  [data]=\\\"countryData\\\"\\n                                  [labels]=\\\"countriesCategories\\\"\\n                                  maxValue=\\\"20\\\">\\n        </ngx-country-orders-chart>\\n      </nb-card-body>\\n    </nb-card>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object, typeof (_b = typeof theme_1.NbMediaBreakpointsService !== \"undefined\" && theme_1.NbMediaBreakpointsService) === \"function\" ? _b : Object])\n    ], CountryOrdersComponent);\n    return CountryOrdersComponent;\n}());\nexports.CountryOrdersComponent = CountryOrdersComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/country-orders/country-orders.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/country-orders/country-orders.component.ts"],"names":[],"mappings":";;;AAAA,sCAAqD;AACrD,wCAA8F;AAC9F,4CAA2C;AAqB3C;IAeI,gCAAoB,YAA4B,EAAU,iBAA4C;QAAtG,iBAQC;QARmB,iBAAY,GAAZ,YAAY,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAA2B;QAd9F,UAAK,GAAG,IAAI,CAAC;QAQrB,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,wBAAmB,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC/E,eAAU,GAAsB,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAInD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;QAC9D,IAAI,CAAC,YAAY;aACZ,kBAAkB,EAAE;aACpB,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAC,EAAoB;gBAAnB,gBAAQ,EAAE,gBAAQ;YAC3B,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IApBO,8CAAa,GAArB,UAAsB,OAAe;QACjC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;YAClC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAkBD,kDAAiB,GAAjB,UAAkB,WAAmB;QACjC,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;QAE/C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;IAED,4CAAW,GAAX;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;;IAlCQ,sBAAsB;QAnBlC,gBAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE,CAAC,iCAAiC,CAAC;YAC9C,QAAQ,EAAE,gpBAcX;SACF,CAAC;qEAgBoC,sBAAc,oBAAd,sBAAc,oDAA6B,iCAAyB,oBAAzB,iCAAyB;OAf7F,sBAAsB,CAmClC;IAAD,6BAAC;CAAA,AAnCD,IAmCC;AAnCY,wDAAsB","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { NbMediaBreakpoint, NbMediaBreakpointsService, NbThemeService } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'ngx-country-orders',\n    styleUrls: ['./country-orders.component.scss'],\n    template: `\n    <nb-card [size]=\"breakpoint.width >= breakpoints.md ? 'medium' : 'xxlarge'\">\n      <nb-card-header>Country Orders Statistics</nb-card-header>\n      <nb-card-body>\n        <ngx-country-orders-map (select)=\"selectCountryById($event)\"\n                                countryId=\"USA\">\n        </ngx-country-orders-map>\n        <ngx-country-orders-chart [countryName]=\"countryName\"\n                                  [data]=\"countryData\"\n                                  [labels]=\"countriesCategories\"\n                                  maxValue=\"20\">\n        </ngx-country-orders-chart>\n      </nb-card-body>\n    </nb-card>\n  `\n})\nexport class CountryOrdersComponent implements OnDestroy {\n    private alive = true;\n\n    private getRandomData(nPoints: number): number[] {\n        return Array.from(Array(nPoints)).map(() => {\n            return Math.round(Math.random() * 20);\n        });\n    }\n\n    countryName = '';\n    countryData = [];\n    countriesCategories = ['Sofas', 'Furniture', 'Lighting', 'Tables', 'Textiles'];\n    breakpoint: NbMediaBreakpoint = { name: '', width: 0 };\n    breakpoints: any;\n\n    constructor(private themeService: NbThemeService, private breakpointService: NbMediaBreakpointsService) {\n        this.breakpoints = this.breakpointService.getBreakpointsMap();\n        this.themeService\n            .onMediaQueryChange()\n            .pipe(takeWhile(() => this.alive))\n            .subscribe(([oldValue, newValue]) => {\n                this.breakpoint = newValue;\n            });\n    }\n\n    selectCountryById(countryName: string) {\n        const nPoint = this.countriesCategories.length;\n\n        this.countryName = countryName;\n        this.countryData = this.getRandomData(nPoint);\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}