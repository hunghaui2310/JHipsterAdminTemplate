{"remainingRequest":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js??ref--10-3!/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/back-side/earning-pie-chart.component.ts","dependencies":[{"path":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/back-side/earning-pie-chart.component.ts","mtime":1593660862956},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1593666990470},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1593666988914},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar operators_1 = require(\"rxjs/operators\");\nvar EarningPieChartComponent = /** @class */ (function () {\n    function EarningPieChartComponent(theme) {\n        this.theme = theme;\n        this.selectPie = new core_1.EventEmitter();\n        this.alive = true;\n        this.options = {};\n    }\n    EarningPieChartComponent.prototype.onChartInit = function (ec) {\n        this.echartsInstance = ec;\n    };\n    EarningPieChartComponent.prototype.onChartClick = function (event) {\n        var pieData = {\n            value: event.value,\n            name: event.name,\n            color: event.color.colorStops[0].color\n        };\n        this.emitSelectPie(pieData);\n    };\n    EarningPieChartComponent.prototype.emitSelectPie = function (pieData) {\n        this.selectPie.emit(pieData);\n    };\n    EarningPieChartComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.theme\n            .getJsTheme()\n            .pipe(operators_1.takeWhile(function () { return _this.alive; }), operators_1.delay(1))\n            .subscribe(function (config) {\n            var variables = config.variables;\n            _this.options = _this.getOptions(variables);\n            var defaultSelectedData = _this.options.series[0].data.find(function (item) { return item.name === _this.defaultSelectedCurrency; });\n            var color = defaultSelectedData.itemStyle.normal.color.colorStops[0].color;\n            var pieData = {\n                value: defaultSelectedData.value,\n                name: defaultSelectedData.name,\n                color: color\n            };\n            _this.emitSelectPie(pieData);\n        });\n    };\n    EarningPieChartComponent.prototype.getOptions = function (variables) {\n        var earningPie = variables.earningPie;\n        return {\n            tooltip: {\n                trigger: 'item',\n                formatter: ''\n            },\n            series: [\n                {\n                    name: ' ',\n                    clockWise: true,\n                    hoverAnimation: false,\n                    type: 'pie',\n                    center: earningPie.center,\n                    radius: earningPie.radius,\n                    data: [\n                        {\n                            value: this.values[0].value,\n                            name: this.values[0].name,\n                            label: {\n                                normal: {\n                                    position: 'center',\n                                    formatter: '',\n                                    textStyle: {\n                                        fontSize: '22',\n                                        fontFamily: variables.fontSecondary,\n                                        fontWeight: '600',\n                                        color: variables.fgHeading\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                show: false\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                        {\n                                            offset: 0,\n                                            color: earningPie.firstPieGradientLeft\n                                        },\n                                        {\n                                            offset: 1,\n                                            color: earningPie.firstPieGradientRight\n                                        }\n                                    ]),\n                                    shadowColor: earningPie.firstPieShadowColor,\n                                    shadowBlur: 0,\n                                    shadowOffsetX: 0,\n                                    shadowOffsetY: 3\n                                }\n                            }\n                        },\n                        {\n                            value: this.values[1].value,\n                            name: this.values[1].name,\n                            label: {\n                                normal: {\n                                    position: 'center',\n                                    formatter: '',\n                                    textStyle: {\n                                        fontSize: '22',\n                                        fontFamily: variables.fontSecondary,\n                                        fontWeight: '600',\n                                        color: variables.fgHeading\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                show: false\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                        {\n                                            offset: 0,\n                                            color: earningPie.secondPieGradientLeft\n                                        },\n                                        {\n                                            offset: 1,\n                                            color: earningPie.secondPieGradientRight\n                                        }\n                                    ]),\n                                    shadowColor: earningPie.secondPieShadowColor,\n                                    shadowBlur: 0,\n                                    shadowOffsetX: 0,\n                                    shadowOffsetY: 3\n                                }\n                            }\n                        },\n                        {\n                            value: this.values[2].value,\n                            name: this.values[2].name,\n                            label: {\n                                normal: {\n                                    position: 'center',\n                                    formatter: '',\n                                    textStyle: {\n                                        fontSize: '22',\n                                        fontFamily: variables.fontSecondary,\n                                        fontWeight: '600',\n                                        color: variables.fgHeading\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                show: false\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                        {\n                                            offset: 0,\n                                            color: earningPie.thirdPieGradientLeft\n                                        },\n                                        {\n                                            offset: 1,\n                                            color: earningPie.thirdPieGradientRight\n                                        }\n                                    ]),\n                                    shadowColor: earningPie.thirdPieShadowColor,\n                                    shadowBlur: 0,\n                                    shadowOffsetX: 0,\n                                    shadowOffsetY: 3\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        };\n    };\n    EarningPieChartComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    var _a;\n    tslib_1.__decorate([\n        core_1.Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], EarningPieChartComponent.prototype, \"selectPie\", void 0);\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], EarningPieChartComponent.prototype, \"values\", void 0);\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], EarningPieChartComponent.prototype, \"defaultSelectedCurrency\", void 0);\n    EarningPieChartComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-earning-pie-chart',\n            styleUrls: ['./earning-card-back.component.scss'],\n            template: \"\\n    <div echarts\\n         class=\\\"echart\\\"\\n         [options]=\\\"options\\\"\\n         (chartInit)=\\\"onChartInit($event)\\\"\\n         (chartClick)=\\\"onChartClick($event)\\\">\\n    </div>\\n  \"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbThemeService !== \"undefined\" && theme_1.NbThemeService) === \"function\" ? _a : Object])\n    ], EarningPieChartComponent);\n    return EarningPieChartComponent;\n}());\nexports.EarningPieChartComponent = EarningPieChartComponent;\n",{"version":3,"file":"/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/back-side/earning-pie-chart.component.ts","sourceRoot":"","sources":["/home/hungnn/Documents/angular/dashboard/node_modules/angular-router-loader/src/index.js!/home/hungnn/Documents/angular/dashboard/node_modules/tslint-loader/index.js!/home/hungnn/Documents/angular/dashboard/src/main/webapp/app/ngx-admin/pages/e-commerce/earning-card/back-side/earning-pie-chart.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { delay, takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'ngx-earning-pie-chart',\n    styleUrls: ['./earning-card-back.component.scss'],\n    template: `\n    <div echarts\n         class=\"echart\"\n         [options]=\"options\"\n         (chartInit)=\"onChartInit($event)\"\n         (chartClick)=\"onChartClick($event)\">\n    </div>\n  `\n})\nexport class EarningPieChartComponent implements AfterViewInit, OnDestroy {\n    @Output() selectPie = new EventEmitter<{ value: number; name: string; color: string }>();\n    @Input() values: { value: number; name: string }[];\n    @Input() defaultSelectedCurrency: string;\n\n    private alive = true;\n\n    options: any = {};\n    echartsInstance;\n\n    constructor(private theme: NbThemeService) {}\n\n    onChartInit(ec) {\n        this.echartsInstance = ec;\n    }\n\n    onChartClick(event) {\n        const pieData = {\n            value: event.value,\n            name: event.name,\n            color: event.color.colorStops[0].color\n        };\n\n        this.emitSelectPie(pieData);\n    }\n\n    emitSelectPie(pieData: { value: number; name: string; color: any }) {\n        this.selectPie.emit(pieData);\n    }\n\n    ngAfterViewInit() {\n        this.theme\n            .getJsTheme()\n            .pipe(takeWhile(() => this.alive), delay(1))\n            .subscribe(config => {\n                const variables = config.variables;\n\n                this.options = this.getOptions(variables);\n                const defaultSelectedData = this.options.series[0].data.find(item => item.name === this.defaultSelectedCurrency);\n                const color = defaultSelectedData.itemStyle.normal.color.colorStops[0].color;\n                const pieData = {\n                    value: defaultSelectedData.value,\n                    name: defaultSelectedData.name,\n                    color\n                };\n\n                this.emitSelectPie(pieData);\n            });\n    }\n\n    getOptions(variables) {\n        const earningPie: any = variables.earningPie;\n\n        return {\n            tooltip: {\n                trigger: 'item',\n                formatter: ''\n            },\n            series: [\n                {\n                    name: ' ',\n                    clockWise: true,\n                    hoverAnimation: false,\n                    type: 'pie',\n                    center: earningPie.center,\n                    radius: earningPie.radius,\n                    data: [\n                        {\n                            value: this.values[0].value,\n                            name: this.values[0].name,\n                            label: {\n                                normal: {\n                                    position: 'center',\n                                    formatter: '',\n                                    textStyle: {\n                                        fontSize: '22',\n                                        fontFamily: variables.fontSecondary,\n                                        fontWeight: '600',\n                                        color: variables.fgHeading\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                show: false\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                        {\n                                            offset: 0,\n                                            color: earningPie.firstPieGradientLeft\n                                        },\n                                        {\n                                            offset: 1,\n                                            color: earningPie.firstPieGradientRight\n                                        }\n                                    ]),\n                                    shadowColor: earningPie.firstPieShadowColor,\n                                    shadowBlur: 0,\n                                    shadowOffsetX: 0,\n                                    shadowOffsetY: 3\n                                }\n                            }\n                        },\n                        {\n                            value: this.values[1].value,\n                            name: this.values[1].name,\n                            label: {\n                                normal: {\n                                    position: 'center',\n                                    formatter: '',\n                                    textStyle: {\n                                        fontSize: '22',\n                                        fontFamily: variables.fontSecondary,\n                                        fontWeight: '600',\n                                        color: variables.fgHeading\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                show: false\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                        {\n                                            offset: 0,\n                                            color: earningPie.secondPieGradientLeft\n                                        },\n                                        {\n                                            offset: 1,\n                                            color: earningPie.secondPieGradientRight\n                                        }\n                                    ]),\n                                    shadowColor: earningPie.secondPieShadowColor,\n                                    shadowBlur: 0,\n                                    shadowOffsetX: 0,\n                                    shadowOffsetY: 3\n                                }\n                            }\n                        },\n                        {\n                            value: this.values[2].value,\n                            name: this.values[2].name,\n                            label: {\n                                normal: {\n                                    position: 'center',\n                                    formatter: '',\n                                    textStyle: {\n                                        fontSize: '22',\n                                        fontFamily: variables.fontSecondary,\n                                        fontWeight: '600',\n                                        color: variables.fgHeading\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                show: false\n                            },\n                            itemStyle: {\n                                normal: {\n                                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                        {\n                                            offset: 0,\n                                            color: earningPie.thirdPieGradientLeft\n                                        },\n                                        {\n                                            offset: 1,\n                                            color: earningPie.thirdPieGradientRight\n                                        }\n                                    ]),\n                                    shadowColor: earningPie.thirdPieShadowColor,\n                                    shadowBlur: 0,\n                                    shadowOffsetX: 0,\n                                    shadowOffsetY: 3\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n\n    ngOnDestroy() {\n        this.alive = false;\n    }\n}\n"]}]}